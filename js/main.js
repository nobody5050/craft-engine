function createEvent(t,i=!1,o=!1){var s;try{s=new Event(t,{bubbles:i,cancelable:o})}catch(e){(s=document.createEvent("Event")).initEvent(t,i,o)}return s}function bisect(e,t){return[e.filter(e=>t(e)),e.filter(e=>!t(e))]}function isBaseObject(e){return e instanceof Object&&e.constructor===Object}function getRandomInt(e,t){return Math.floor(Math.random()*(t-e+1))+e}function AudioPlayer(){}function Sounds(){if(window.AudioContext=window.AudioContext||window.webkitAudioContext,this.audioContext=null,window.AudioContext)try{this.audioContext=new AudioContext}catch(e){}this.soundsById={}}function Sound(e,t){this.config=e,this.audioContext=t,this.audioElement=null,this.reusableBuffer=null,this.playableBuffer=null}function isMobile(){return"ontouchstart"in document.documentElement}function isIE9(){var e=-1;return 9===(e=/MSIE\s([\d.]+)/.test(navigator.userAgent)?parseInt(RegExp.$1):e)}Sounds.prototype.registerByFilenamesAndID=function(t,e){var i={id:e};for(let e=0;e<t.length;e++){var o=t[e],s=o.match(/\.(\w+)(\?.*)?$/);s&&(i[s[1]]=o)}this.register(i)},Sounds.prototype.register=function(e){var t=new Sound(e,this.audioContext);(this.soundsById[e.id]=t).preload()},Sounds.prototype.play=function(e,t){e=this.soundsById[e];e&&e.play(t)},Sounds.prototype.playURL=function(e,t){var i=this.soundsById[e];i?i.play(t):((i={id:e})[Sounds.getExtensionFromUrl(e)]=e,i.forceHTML5=t&&t.forceHTML5,i.allowHTML5Mobile=t&&t.allowHTML5Mobile,i.playAfterLoad=!0,i.playAfterLoadOptions=t,this.register(i))},Sounds.prototype.stopLoopingAudio=function(e){this.soundsById[e].stop()},Sounds.prototype.get=function(e){return this.soundsById[e]},Sounds.getExtensionFromUrl=function(e){return e.substr(e.lastIndexOf(".")+1)},Sound.prototype.play=function(e){if(e=e||{},this.audioElement||this.reusableBuffer)return this.reusableBuffer?(this.playableBuffer=this.newPlayableBufferSource(this.reusableBuffer,e),void(this.playableBuffer.start?this.playableBuffer.start(0):this.playableBuffer.noteOn(0))):void(!this.config.allowHTML5Mobile&&isMobile()||(this.audioElement.volume=void 0===e.volume?1:e.volume,this.audioElement.loop=!!e.loop,this.audioElement.play()))},Sound.prototype.stop=function(){try{this.playableBuffer?this.playableBuffer.stop?this.playableBuffer.stop(0):this.playableBuffer.noteOff&&this.playableBuffer.noteOff(0):this.audioElement&&this.audioElement.pause()}catch(e){if("InvalidStateError"!==e.name)throw e}},Sound.prototype.newPlayableBufferSource=function(e,t){var i,o=this.audioContext.createBufferSource();if(this.audioContext.createGain)i=this.audioContext.createGain();else{if(!this.audioContext.createGainNode)return null;i=this.audioContext.createGainNode()}return o.buffer=e,o.loop=!!t.loop,o.connect(i),i.connect(this.audioContext.destination),i.gain.value=void 0===t.volume?1:t.volume,o},Sound.prototype.getPlayableFile=function(){try{if(!window.Audio)return!1;var e=new window.Audio;if(this.config.hasOwnProperty("mp3")&&e.canPlayType("audio/mp3"))return this.config.mp3;if(this.config.hasOwnProperty("ogg")&&e.canPlayType("audio/ogg"))return this.config.ogg;if(this.config.hasOwnProperty("wav")&&e.canPlayType("audio/wav"))return this.config.wav}catch(e){}return!1},Sound.prototype.preload=function(){var t,e=this.getPlayableFile();e&&(!this.config.forceHTML5&&window.AudioContext&&this.audioContext?(t=this).preloadViaWebAudio(e,function(e){t.reusableBuffer=e}):!window.Audio||(e=new window.Audio(e))&&e.play&&(isIE9()||(e.play(),e.pause()),this.audioElement=e,this.onSoundLoaded()))},Sound.prototype.onSoundLoaded=function(){this.config.playAfterLoad&&this.play(this.config.playAfterLoadOptions)},Sound.prototype.preloadViaWebAudio=function(e,t){var i=new XMLHttpRequest;i.open("GET",e,!0),i.responseType="arraybuffer";var o=this;i.onload=function(){o.audioContext.decodeAudioData(i.response,function(e){t(e),o.onSoundLoaded()})},i.send()},window.Sounds=Sounds;class CodeOrgAPI{constructor(e){this.controller=e}startCommandCollection(){this.controller.DEBUG&&console.log("Collecting commands.")}startAttempt(i,e,o){return new Promise(t=>{this.controller.OnCompleteCallback=(...e)=>{i&&i(...e),t(e[0])},this.controller.initiateDayNightCycle(this.controller.dayNightCycle,this.controller.dayNightCycle,"day"),this.controller.setPlayerActionDelayByQueueLength(),this.controller.queue.begin(),this.controller.run(e,o||this),this.controller.attemptRunning=!0,this.controller.resultReported=!1})}resetAttempt(){this.controller.reset(),this.controller.queue.reset(),this.controller.OnCompleteCallback=null,this.controller.attemptRunning=!1}registerEventCallback(e,t){this.controller.events.push(t)}onEventTriggered(e,t,i,o){this.registerEventCallback(e,function(e){e.eventType===i&&e.targetType===t&&o(e)})}isEventTriggered(e,t){return e.eventType===t}moveDirection(e,t,i){this.controller.addCommand(new MoveDirectionCommand(this.controller,e,t,i),t)}moveForward(e,t,i){this.controller.addCommand(new MoveForwardCommand(this.controller,e,t,i),t)}moveBackward(e,t){this.controller.addCommand(new MoveBackwardCommand(this.controller,e,t),t)}moveAway(e,t,i){const o=new CallbackCommand(this.controller,e,()=>{this.controller.moveAway(o,i)},t);this.controller.addCommand(o)}moveToward(e,t,i){const o=new CallbackCommand(this.controller,e,()=>{this.controller.moveToward(o,i)},t);this.controller.addCommand(o)}flashEntity(e,t){const i=new CallbackCommand(this.controller,e,()=>{this.controller.flashEntity(i)},t);this.controller.addCommand(i)}explodeEntity(e,t){const i=new CallbackCommand(this.controller,e,()=>{this.controller.explodeEntity(i)},t);this.controller.addCommand(i)}use(e,t){const i=new CallbackCommand(this.controller,e,()=>{this.controller.use(i,t)},t);this.controller.addCommand(i)}playSound(e,t,i){const o=new CallbackCommand(this.controller,e,()=>{this.controller.playSound(o,t)},i);this.controller.addCommand(o)}turn(e,t,i,o){const s=new CallbackCommand(this.controller,e,()=>{this.controller.turn(s,"right"===t?1:-1)},i,o);this.controller.addCommand(s)}turnRandom(e,t){const i=new CallbackCommand(this.controller,e,()=>{this.controller.turnRandom(i)},t);this.controller.addCommand(i)}turnRight(e,t,i){this.turn(e,"right",t,i)}turnLeft(e,t,i){this.turn(e,"left",t,i)}destroyBlock(e,t){const i=new CallbackCommand(this.controller,e,()=>{this.controller.destroyBlock(i)},t);this.controller.addCommand(i)}placeBlock(e,t,i){this.controller.addCommand(new PlaceBlockCommand(this.controller,e,t,i),i)}placeDirection(e,t,i,o){this.controller.addCommand(new PlaceDirectionCommand(this.controller,e,t,i,o),i,o)}placeInFront(e,t,i){this.controller.addCommand(new PlaceInFrontCommand(this.controller,e,t,i),i)}tillSoil(e,t){this.controller.addCommand(new PlaceInFrontCommand(this.controller,e,"watering",t))}ifBlockAhead(e,t,i,o){this.controller.addCommand(new IfBlockAheadCommand(this.controller,e,t,i,o),i)}repeat(e,t,i,o){this.controller.addCommand(new RepeatCommand(this.controller,e,t,i,o))}repeatRandom(e,t,i){var o=Math.floor(10*Math.random())+1;this.controller.addCommand(new RepeatCommand(this.controller,e,t,o,i))}getScreenshot(){return this.controller.getScreenshot()}spawnEntity(e,t,i){var o=new CallbackCommand(this.controller,e,()=>{this.controller.spawnEntity(o,t,i)});this.controller.addCommand(o)}spawnEntityAt(e,t,i){var o=new CallbackCommand(this.controller,e,()=>{this.controller.spawnEntityAt(o,t,i.x,i.y,i.rot)});this.controller.addCommand(o)}destroyEntity(e,t){var i=new CallbackCommand(this.controller,e,()=>{this.controller.destroyEntity(i,t)},t);this.controller.addGlobalCommand(i)}drop(e,t,i){var o=new CallbackCommand(this.controller,e,()=>{this.controller.drop(o,t)},i);this.controller.addCommand(o)}startDay(e){var t=new CallbackCommand(this.controller,e,()=>{this.controller.startDay(t)});this.controller.addGlobalCommand(t)}startNight(e){var t=new CallbackCommand(this.controller,e,()=>{this.controller.startNight(t)});this.controller.addGlobalCommand(t)}wait(e,t,i){var o=new CallbackCommand(this.controller,e,()=>{this.controller.wait(o,t)},i);this.controller.addGlobalCommand(o)}attack(e,t){var i=new CallbackCommand(this.controller,e,()=>{this.controller.attack(i)},t);this.controller.addCommand(i)}setDayNightCycle(e,t,i){this.controller.dayNightCycle||(this.controller.dayNightCycle=!0,this.controller.initiateDayNightCycle(e,t,i))}addScore(e,t,i){var o=new CallbackCommand(this.controller,e,()=>{this.controller.addScore(o,t)},i);this.controller.addGlobalCommand(o)}arrowDown(e){this.controller.arrowDown(e)}arrowUp(e){this.controller.arrowUp(e)}clickDown(){this.controller.clickDown()}clickUp(){this.controller.clickUp()}}function getCodeOrgAPI(e){return new CodeOrgAPI(e)}const EventType=Object.freeze({WhenTouched:0,WhenUsed:1,WhenSpawned:2,WhenAttacked:3,WhenNight:4,WhenDay:5,WhenNightGlobal:6,WhenDayGlobal:7,WhenRun:8}),FacingDirection=Object.freeze({North:0,East:1,South:2,West:3,opposite:function(e){switch(e){case FacingDirection.North:return FacingDirection.South;case FacingDirection.South:return FacingDirection.North;case FacingDirection.East:return FacingDirection.West;case FacingDirection.West:return FacingDirection.East}},left:function(e){return this.turn(e,"left")},right:function(e){return this.turn(e,"right")},turnDirection:function(e,t){switch(e){case FacingDirection.North:return t===FacingDirection.East?"right":"left";case FacingDirection.South:return t===FacingDirection.West?"right":"left";case FacingDirection.East:return t===FacingDirection.South?"right":"left";case FacingDirection.West:return t===FacingDirection.North?"right":"left"}},turn:function(e,t){return(e+4+("right"===t?1:-1))%4},directionToOffset:function(e){switch(e){case FacingDirection.North:return[0,-1];case FacingDirection.South:return[0,1];case FacingDirection.East:return[1,0];case FacingDirection.West:return[-1,0]}},directionToRelative(e){switch(e){case FacingDirection.North:return"Up";case FacingDirection.South:return"Down";case FacingDirection.East:return"Right";case FacingDirection.West:return"Left"}}}),{North,South,East,West}=FacingDirection,directions=[FacingDirection.North,FacingDirection.East,FacingDirection.South,FacingDirection.West];class Position{constructor(e,t){this.x=e,this.y=t,this[0]=e,this[1]=t}static add(e,t){return new Position(e[0]+t[0],e[1]+t[1])}static subtract(e,t){return new Position(e[0]-t[0],e[1]-t[1])}static equals(e,t){return e[0]===t[0]&&e[1]===t[1]}static directionToOffsetPosition(e){e=FacingDirection.directionToOffset(e);if(e)return Position.fromArray(e)}static isAdjacent(t,i){return directions.map(Position.directionToOffsetPosition).some(e=>Position.equals(Position.add(t,e),i))}static forward(e,t){return Position.add(e,Position.directionToOffsetPosition(t))}static north(e){return Position.forward(e,FacingDirection.North)}static east(e){return Position.forward(e,FacingDirection.East)}static south(e){return Position.forward(e,FacingDirection.South)}static west(e){return Position.forward(e,FacingDirection.West)}static getOrthogonalPositions(t){return directions.map(e=>Position.forward(t,e))}static manhattanDistance(e,t){return Math.abs(t.x-e.x)+Math.abs(t.y-e.y)}static absoluteDistanceSquare(e,t){return Math.pow(e[0]-t[0],2)+Math.pow(e[1]-t[1],2)}static getSurroundingPositions(e){return Position.getOrthogonalPositions(e).concat([Position.north(Position.east(e)),Position.north(Position.west(e)),Position.south(Position.east(e)),Position.south(Position.west(e))])}static fromArray(e){return new Position(e[0],e[1])}}convertActionPlaneEntitiesToConfig=function(s){const[a,n]=s.gridWidth&&s.gridHeight?[s.gridWidth,s.gridHeight]:[10,10];[s.actionPlane].forEach(function(t){for(let e=0;e<t.length;e++){var i=e%a,o=Math.floor(e/n),o=convertNameToEntity(t[e],i,o);o&&(s.entities=s.entities||[],s.entities.push(o),t[e]="")}})},randomInt=function(e,t){return Math.floor(Math.random()*(t-e))+e};const suffixToDirection={Up:FacingDirection.North,Down:FacingDirection.South,Left:FacingDirection.West,Right:FacingDirection.East};convertNameToEntity=function(e,t,i){if(e.match(/^(sheep|zombie|ironGolem|creeper|cod|cow|chicken|dolphin|ghast|boat|salmon|squid|tropicalFish|seaTurtle)(Right|Left|Up|Down|$)/)){var o=e.match(/(.*)(Right|Left|Up|Down)/),s=o?suffixToDirection[o[2]]:FacingDirection.East;return[o?o[1]:e,t,i,s]}};class AssetLoader{constructor(e){this.controller=e,this.audioPlayer=e.audioPlayer,this.game=e.game,this.assetRoot=e.assetRoot,this.assets={entityShadow:{type:"image",path:`${this.assetRoot}images/Character_Shadow.png`},selectionIndicator:{type:"image",path:`${this.assetRoot}images/Selection_Indicator.png`},finishOverlay:{type:"image",path:`${this.assetRoot}images/WhiteRect.png`},underwaterOverlay:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Water_Caustics.png`,jsonPath:`${this.assetRoot}images/Water_Caustics.json`},bed:{type:"image",path:`${this.assetRoot}images/Bed.png`},playerSteve:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Steve1013.png`,jsonPath:`${this.assetRoot}images/Steve1013.json`},playerAlex:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Alex1013.png`,jsonPath:`${this.assetRoot}images/Alex1013.json`},playerSteveEvents:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Steve_2016.png`,jsonPath:`${this.assetRoot}images/Steve_2016.json`},playerAlexEvents:{type:"atlasJSON",pngPath:`${this.assetRoot}images/DevAlex.png`,jsonPath:`${this.assetRoot}images/DevAlex.json`},playerAgent:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Agent.png`,jsonPath:`${this.assetRoot}images/Agent.json`},playerSteveAquatic:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Steve_2018.png`,jsonPath:`${this.assetRoot}images/Steve_2018.json`},playerAlexAquatic:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Alex_2018.png`,jsonPath:`${this.assetRoot}images/Alex_2018.json`},AO:{type:"atlasJSON",pngPath:`${this.assetRoot}images/AO.png`,jsonPath:`${this.assetRoot}images/AO.json`},LavaGlow:{type:"atlasJSON",pngPath:`${this.assetRoot}images/LavaGlow.png`,jsonPath:`${this.assetRoot}images/LavaGlow.json`},WaterAO:{type:"atlasJSON",pngPath:`${this.assetRoot}images/WaterAO.png`,jsonPath:`${this.assetRoot}images/WaterAO.json`},blockShadows:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Block_Shadows.png`,jsonPath:`${this.assetRoot}images/Block_Shadows.json`},undergroundFow:{type:"atlasJSON",pngPath:`${this.assetRoot}images/UndergroundFoW.png`,jsonPath:`${this.assetRoot}images/UndergroundFoW.json`},blocks:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Blocks.png`,jsonPath:`${this.assetRoot}images/Blocks.json`},leavesAcacia:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Leaves_Acacia_Decay.png`,jsonPath:`${this.assetRoot}images/Leaves_Acacia_Decay.json`},leavesBirch:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Leaves_Birch_Decay.png`,jsonPath:`${this.assetRoot}images/Leaves_Birch_Decay.json`},leavesJungle:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Leaves_Jungle_Decay.png`,jsonPath:`${this.assetRoot}images/Leaves_Jungle_Decay.json`},leavesOak:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Leaves_Oak_Decay.png`,jsonPath:`${this.assetRoot}images/Leaves_Oak_Decay.json`},leavesSpruce:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Leaves_Spruce_Decay.png`,jsonPath:`${this.assetRoot}images/Leaves_Spruce_Decay.json`},leavesSpruceSnowy:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Leaves_Spruce_Snowy_Decay.png`,jsonPath:`${this.assetRoot}images/Leaves_Spruce_Snowy_Decay.json`},sheep:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Sheep_2016.png`,jsonPath:`${this.assetRoot}images/Sheep_2016.json`},crops:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Crops.png`,jsonPath:`${this.assetRoot}images/Crops.json`},torch:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Torch.png`,jsonPath:`${this.assetRoot}images/Torch.json`},destroyOverlay:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Destroy_Overlay.png`,jsonPath:`${this.assetRoot}images/Destroy_Overlay.json`},blockExplode:{type:"atlasJSON",pngPath:`${this.assetRoot}images/BlockExplode.png`,jsonPath:`${this.assetRoot}images/BlockExplode.json`},miningParticles:{type:"atlasJSON",pngPath:`${this.assetRoot}images/MiningParticles.png`,jsonPath:`${this.assetRoot}images/MiningParticles.json`},miniBlocks:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Miniblocks.png`,jsonPath:`${this.assetRoot}images/Miniblocks.json`},lavaPop:{type:"atlasJSON",pngPath:`${this.assetRoot}images/LavaPop.png`,jsonPath:`${this.assetRoot}images/LavaPop.json`},redstoneSparkle:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Redstone_Sparkle.png`,jsonPath:`${this.assetRoot}images/Redstone_Sparkle.json`},fire:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Fire.png`,jsonPath:`${this.assetRoot}images/Fire.json`},bubbles:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Bubbles.png`,jsonPath:`${this.assetRoot}images/Bubbles.json`},explosion:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Explosion.png`,jsonPath:`${this.assetRoot}images/Explosion.json`},door:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Door.png`,jsonPath:`${this.assetRoot}images/Door.json`},doorIron:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Door_Iron.png`,jsonPath:`${this.assetRoot}images/Door_Iron.json`},rails:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Rails.png`,jsonPath:`${this.assetRoot}images/Rails.json`},tnt:{type:"atlasJSON",pngPath:`${this.assetRoot}images/TNT.png`,jsonPath:`${this.assetRoot}images/TNT.json`},burningInSun:{type:"atlasJSON",pngPath:`${this.assetRoot}images/BurningInSun.png`,jsonPath:`${this.assetRoot}images/BurningInSun.json`},zombie:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Zombie.png`,jsonPath:`${this.assetRoot}images/Zombie.json`},ironGolem:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Iron_Golem.png`,jsonPath:`${this.assetRoot}images/Iron_Golem.json`},creeper:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Creeper_2016.png`,jsonPath:`${this.assetRoot}images/Creeper_2016.json`},cow:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Cow.png`,jsonPath:`${this.assetRoot}images/Cow.json`},chicken:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Chicken.png`,jsonPath:`${this.assetRoot}images/Chicken.json`},cod:{type:"atlasJSON",pngPath:`${this.assetRoot}images/entities/Cod_2018.png`,jsonPath:`${this.assetRoot}images/entities/Cod_2018.json`},dolphin:{type:"atlasJSON",pngPath:`${this.assetRoot}images/entities/Dolphin_2018.png`,jsonPath:`${this.assetRoot}images/entities/Dolphin_2018.json`},ghast:{type:"atlasJSON",pngPath:`${this.assetRoot}images/Ghast.png`,jsonPath:`${this.assetRoot}images/Ghast.json`},salmon:{type:"atlasJSON",pngPath:`${this.assetRoot}images/entities/Salmon_2018.png`,jsonPath:`${this.assetRoot}images/entities/Salmon_2018.json`},seaTurtle:{type:"atlasJSON",pngPath:`${this.assetRoot}images/entities/Sea_Turtle_2018.png`,jsonPath:`${this.assetRoot}images/entities/Sea_Turtle_2018.json`},squid:{type:"atlasJSON",pngPath:`${this.assetRoot}images/entities/Squid_2018.png`,jsonPath:`${this.assetRoot}images/entities/Squid_2018.json`},tropicalFish:{type:"atlasJSON",pngPath:`${this.assetRoot}images/entities/Tropical_Fish_2018.png`,jsonPath:`${this.assetRoot}images/entities/Tropical_Fish_2018.json`},dig_wood1:{type:"sound",mp3:`${this.assetRoot}audio/dig_wood1.mp3`,wav:`${this.assetRoot}audio/dig_wood1.wav`,ogg:`${this.assetRoot}audio/dig_wood1.ogg`},stepGrass:{type:"sound",mp3:`${this.assetRoot}audio/step_grass1.mp3`,wav:`${this.assetRoot}audio/step_grass1.wav`,ogg:`${this.assetRoot}audio/step_grass1.ogg`},stepWood:{type:"sound",mp3:`${this.assetRoot}audio/wood2.mp3`,ogg:`${this.assetRoot}audio/wood2.ogg`},stepStone:{type:"sound",mp3:`${this.assetRoot}audio/stone2.mp3`,ogg:`${this.assetRoot}audio/stone2.ogg`},stepGravel:{type:"sound",mp3:`${this.assetRoot}audio/gravel1.mp3`,ogg:`${this.assetRoot}audio/gravel1.ogg`},stepFarmland:{type:"sound",mp3:`${this.assetRoot}audio/cloth4.mp3`,ogg:`${this.assetRoot}audio/cloth4.ogg`},failure:{type:"sound",mp3:`${this.assetRoot}audio/break.mp3`,ogg:`${this.assetRoot}audio/break.ogg`},success:{type:"sound",mp3:`${this.assetRoot}audio/levelup.mp3`,ogg:`${this.assetRoot}audio/levelup.ogg`},fall:{type:"sound",mp3:`${this.assetRoot}audio/fallsmall.mp3`,ogg:`${this.assetRoot}audio/fallsmall.ogg`},fuse:{type:"sound",mp3:`${this.assetRoot}audio/fuse.mp3`,ogg:`${this.assetRoot}audio/fuse.ogg`},explode:{type:"sound",mp3:`${this.assetRoot}audio/explode3.mp3`,ogg:`${this.assetRoot}audio/explode3.ogg`},placeBlock:{type:"sound",mp3:`${this.assetRoot}audio/cloth1.mp3`,ogg:`${this.assetRoot}audio/cloth1.ogg`},collectedBlock:{type:"sound",mp3:`${this.assetRoot}audio/pop.mp3`,ogg:`${this.assetRoot}audio/pop.ogg`},bump:{type:"sound",mp3:`${this.assetRoot}audio/hit3.mp3`,ogg:`${this.assetRoot}audio/hit3.ogg`},punch:{type:"sound",mp3:`${this.assetRoot}audio/cloth1.mp3`,ogg:`${this.assetRoot}audio/cloth1.ogg`},fizz:{type:"sound",mp3:`${this.assetRoot}audio/fizz.mp3`,ogg:`${this.assetRoot}audio/fizz.ogg`},doorOpen:{type:"sound",mp3:`${this.assetRoot}audio/door_open.mp3`,ogg:`${this.assetRoot}audio/door_open.ogg`},houseSuccess:{type:"sound",mp3:`${this.assetRoot}audio/launch1.mp3`,ogg:`${this.assetRoot}audio/launch1.ogg`},minecart:{type:"sound",mp3:`${this.assetRoot}audio/minecartBase.mp3`,ogg:`${this.assetRoot}audio/minecartBase.ogg`},sheepBaa:{type:"sound",mp3:`${this.assetRoot}audio/say3.mp3`,ogg:`${this.assetRoot}audio/say3.ogg`},chickenHurt:{type:"sound",mp3:`${this.assetRoot}audio/chickenhurt2.mp3`,ogg:`${this.assetRoot}audio/chickenhurt2.ogg`},chickenBawk:{type:"sound",mp3:`${this.assetRoot}audio/chickensay3.mp3`,ogg:`${this.assetRoot}audio/chickensay3.ogg`},cowHuff:{type:"sound",mp3:`${this.assetRoot}audio/cowhuff.mp3`,ogg:`${this.assetRoot}audio/cowhuff.ogg`},cowHurt:{type:"sound",mp3:`${this.assetRoot}audio/cowhurt.mp3`,ogg:`${this.assetRoot}audio/cowhurt.ogg`},cowMoo:{type:"sound",mp3:`${this.assetRoot}audio/cowmoo1.mp3`,ogg:`${this.assetRoot}audio/cowmoo1.ogg`},cowMooLong:{type:"sound",mp3:`${this.assetRoot}audio/cowmoolong.mp3`,ogg:`${this.assetRoot}audio/cowmoolong.ogg`},creeperHiss:{type:"sound",mp3:`${this.assetRoot}audio/creeper.mp3`,ogg:`${this.assetRoot}audio/creeper.ogg`},ironGolemHit:{type:"sound",mp3:`${this.assetRoot}audio/irongolemhit.mp3`,ogg:`${this.assetRoot}audio/irongolemhit.ogg`},metalWhack:{type:"sound",mp3:`${this.assetRoot}audio/metalwhack.mp3`,ogg:`${this.assetRoot}audio/metalwhack.ogg`},zombieBrains:{type:"sound",mp3:`${this.assetRoot}audio/zombiebrains.mp3`,ogg:`${this.assetRoot}audio/zombiebrains.ogg`},zombieGroan:{type:"sound",mp3:`${this.assetRoot}audio/zombiegroan.mp3`,ogg:`${this.assetRoot}audio/zombiegroan.ogg`},zombieHurt:{type:"sound",mp3:`${this.assetRoot}audio/zombiehurt1.mp3`,ogg:`${this.assetRoot}audio/zombiehurt1.ogg`},pistonIn:{type:"sound",mp3:`${this.assetRoot}audio/piston_in.mp3`,ogg:`${this.assetRoot}audio/piston_in.ogg`},zombieHurt2:{type:"sound",mp3:`${this.assetRoot}audio/zombiehurt2.mp3`,ogg:`${this.assetRoot}audio/zombiehurt2.ogg`},pistonOut:{type:"sound",mp3:`${this.assetRoot}audio/piston_out.mp3`,ogg:`${this.assetRoot}audio/piston_out.ogg`},portalAmbient:{type:"sound",mp3:`${this.assetRoot}audio/portal.mp3`,ogg:`${this.assetRoot}audio/portal.ogg`},portalTravel:{type:"sound",mp3:`${this.assetRoot}audio/travel_portal.mp3`,ogg:`${this.assetRoot}audio/travel_portal.ogg`},pressurePlateClick:{type:"sound",mp3:`${this.assetRoot}audio/pressurePlateClick.mp3`,ogg:`${this.assetRoot}audio/pressurePlateClick.ogg`},moan2:{type:"sound",mp3:`${this.assetRoot}audio/moan2.mp3`,ogg:`${this.assetRoot}audio/moan2.ogg`},moan3:{type:"sound",mp3:`${this.assetRoot}audio/moan3.mp3`,ogg:`${this.assetRoot}audio/moan3.ogg`},moan6:{type:"sound",mp3:`${this.assetRoot}audio/moan6.mp3`,ogg:`${this.assetRoot}audio/moan6.ogg`},moan7:{type:"sound",mp3:`${this.assetRoot}audio/moan7.mp3`,ogg:`${this.assetRoot}audio/moan7.ogg`}};e=["chicken","entityShadow","selectionIndicator","AO","blockShadows","blocks","miniBlocks","stepGrass","failure","success"].concat(["dig_wood1","stepGrass","stepWood","stepStone","stepGravel","stepFarmland","failure","success","fall","fuse","explode","placeBlock","collectedBlock","bump","punch","fizz","doorOpen","minecart","sheepBaa","chickenHurt","chickenBawk","cowHuff","cowHurt","cowMoo","cowMooLong","creeperHiss","ironGolemHit","metalWhack","zombieBrains","zombieGroan","zombieHurt","pistonIn","pistonOut","portalAmbient","portalTravel","pressurePlateClick","moan2","moan3","moan6","moan7"]);const t=["entityShadow","selectionIndicator","finishOverlay","AO","WaterAO","blockShadows","blocks","leavesJungle","destroyOverlay","blockExplode","miningParticles","miniBlocks","bubbles","dig_wood1","stepGrass","stepWood","stepStone","stepGravel","failure","success","fall","placeBlock","collectedBlock","bump","punch"];this.assetPacks={adventurerLevelOneAssets:["entityShadow","selectionIndicator","AO","blockShadows","leavesOak","leavesBirch","blocks","sheep","bump","stepGrass","failure","success"],adventurerLevelTwoAssets:["entityShadow","selectionIndicator","AO","blockShadows","leavesSpruce","blocks","sheep","bump","stepGrass","failure","playerSteve","success","miniBlocks","blockExplode","miningParticles","destroyOverlay","dig_wood1","collectedBlock","punch"],adventurerLevelThreeAssets:["entityShadow","selectionIndicator","AO","blockShadows","leavesOak","blocks","sheep","bump","stepGrass","failure","playerSteve","success","miniBlocks","blockExplode","miningParticles","destroyOverlay","dig_wood1","collectedBlock","sheepBaa","punch"],adventurerAllAssetsMinusPlayer:["entityShadow","selectionIndicator","finishOverlay","bed","AO","LavaGlow","WaterAO","blockShadows","undergroundFow","blocks","leavesAcacia","leavesBirch","leavesOak","leavesSpruce","sheep","creeper","crops","torch","destroyOverlay","blockExplode","miningParticles","miniBlocks","lavaPop","fire","bubbles","explosion","door","rails","tnt","dig_wood1","stepGrass","stepWood","stepStone","stepGravel","stepFarmland","failure","success","fall","fuse","explode","placeBlock","collectedBlock","bump","punch","fizz","doorOpen","houseSuccess","minecart","sheepBaa"],levelOneAssets:e,levelTwoAssets:e,levelThreeAssets:e,designerAllAssetsMinusPlayer:["entityShadow","selectionIndicator","finishOverlay","bed","AO","LavaGlow","WaterAO","blockShadows","undergroundFow","blocks","leavesAcacia","leavesBirch","leavesJungle","leavesOak","leavesSpruce","sheep","creeper","crops","torch","destroyOverlay","blockExplode","miningParticles","miniBlocks","lavaPop","fire","bubbles","explosion","door","rails","tnt","dig_wood1","stepGrass","stepWood","stepStone","stepGravel","stepFarmland","failure","success","fall","fuse","explode","placeBlock","collectedBlock","bump","punch","fizz","doorOpen","houseSuccess","minecart","sheepBaa","zombie","cow","chicken","ironGolem","burningInSun","chickenHurt","chickenBawk","cowHuff","cowHurt","cowMoo","cowMooLong","creeperHiss","ironGolemHit","metalWhack","zombieBrains","zombieGroan","zombieHurt","zombieHurt2"],heroAllAssetsMinusPlayer:["entityShadow","selectionIndicator","finishOverlay","bed","AO","LavaGlow","WaterAO","blockShadows","undergroundFow","blocks","leavesAcacia","leavesBirch","leavesOak","leavesSpruce","leavesSpruceSnowy","sheep","creeper","crops","torch","destroyOverlay","blockExplode","miningParticles","miniBlocks","lavaPop","redstoneSparkle","fire","bubbles","explosion","door","doorIron","rails","tnt","dig_wood1","stepGrass","stepWood","stepStone","stepGravel","stepFarmland","failure","success","fall","fuse","explode","placeBlock","collectedBlock","bump","punch","fizz","doorOpen","houseSuccess","minecart","sheepBaa","zombie","cow","chicken","burningInSun","ghast","chickenHurt","chickenBawk","cowHuff","cowHurt","cowMoo","cowMooLong","creeperHiss","metalWhack","zombieBrains","zombieGroan","zombieHurt","zombieHurt2","pistonIn","pistonOut","portalAmbient","portalTravel","pressurePlateClick","moan2","moan3","moan6","moan7"],aquaticIslandAssets:t,aquaticLevelThreeAndFourAssets:t.concat("cod","dolphin"),aquaticAllAssetsMinusPlayer:["entityShadow","selectionIndicator","finishOverlay","underwaterOverlay","AO","LavaGlow","WaterAO","lavaPop","blockShadows","undergroundFow","blocks","leavesJungle","cod","crops","torch","dolphin","salmon","seaTurtle","squid","tropicalFish","destroyOverlay","blockExplode","miningParticles","miniBlocks","bubbles","dig_wood1","stepGrass","stepWood","stepStone","stepGravel","failure","success","fall","placeBlock","collectedBlock","bump","punch"],allAssetsMinusPlayer:["entityShadow","selectionIndicator","finishOverlay","underwaterOverlay","bed","AO","LavaGlow","WaterAO","blockShadows","undergroundFow","blocks","cod","dolphin","salmon","seaTurtle","squid","tropicalFish","leavesAcacia","leavesBirch","leavesJungle","leavesOak","leavesSpruce","leavesSpruceSnowy","sheep","creeper","crops","torch","destroyOverlay","blockExplode","miningParticles","miniBlocks","lavaPop","redstoneSparkle","fire","bubbles","explosion","door","doorIron","rails","tnt","dig_wood1","stepGrass","stepWood","stepStone","stepGravel","stepFarmland","failure","success","fall","fuse","explode","placeBlock","collectedBlock","bump","punch","fizz","doorOpen","houseSuccess","minecart","sheepBaa","zombie","cow","chicken","ghast","ironGolem","burningInSun","chickenHurt","chickenBawk","cowHuff","cowHurt","cowMoo","cowMooLong","creeperHiss","ironGolemHit","metalWhack","zombieBrains","zombieGroan","zombieHurt","zombieHurt2","pistonIn","pistonOut","portalAmbient","portalTravel","pressurePlateClick","moan2","moan3","moan6","moan7"],playerSteve:["playerSteve"],playerAlex:["playerAlex"],playerSteveEvents:["playerSteveEvents"],playerAlexEvents:["playerAlexEvents"],playerAgent:["playerAgent"],playerSteveAquatic:["playerSteveAquatic"],playerAlexAquatic:["playerAlexAquatic"]}}loadPacks(e){e.forEach(e=>{this.loadPack(e)})}loadPack(e){e=this.assetPacks[e];this.loadAssets(e)}loadAssets(e){e.forEach(e=>{var t=this.assets[e];this.loadAsset(e,t)})}loadAsset(e,t){switch(t.type){case"image":this.game.load.image(e,t.path);break;case"sound":this.audioPlayer.register({id:e,mp3:t.mp3,ogg:t.ogg});break;case"atlasJSON":this.game.load.atlasJSONHash(e,t.pngPath,t.jsonPath);break;default:throw`Asset ${e} needs config.type set in configuration.`}}}class AdjacencySet{constructor(e,t){this.comparisonFunction=t||Position.isAdjacent,this.sets=[],e&&e.forEach(e=>{this.add(e)})}flattenSets(){return this.sets.reduce((e,t)=>e.concat(t),[])}add(t){if(this.find(t))return!1;const e=this.sets.filter(e=>e.some(e=>this.comparisonFunction(t,e)));if(1===e.length)e[0].push(t);else if(1<e.length){const i=[];e.forEach(e=>{this.sets.splice(this.sets.indexOf(e),1),i.push(...e)}),i.push(t),this.sets.push(i)}else this.sets.push([t]);return!0}find(t){return this.sets.find(e=>e.some(e=>Position.equals(t,e)))}remove(t){const e=this.find(t);if(!e)return!1;this.sets.splice(this.sets.indexOf(e),1);var i=e.filter(e=>!Position.equals(t,e));return i.length&&(i=new AdjacencySet(i,this.comparisonFunction).sets,this.sets.push(...i)),!0}}class BaseEntity{constructor(e,t,i,o,s,a){this.queue=new CommandQueue(e),this.controller=e,this.game=e.game,this.position=new Position(o,s),this.type=t,this.facing=a,this.offset=[-22,-12],this.identifier=i,this.healthPoint=3,this.underTree={state:!1,treeIndex:-1}}tick(){this.queue.tick()}reset(){}canMoveThrough(){return!1}canPlaceBlock(){return!1}canTriggerPressurePlates(){return!1}shouldUpdateSelectionIndicator(){return!1}setMovePosition(e){this.position=e}getSortOrderOffset(){return 5}addCommand(e,t=!1){this.queue.addCommand(e,t),this.queue.begin()}addAnimation(...e){return this.getAnimationManager().add(...e)}getAnimationManager(){return(this.animationRig||this.sprite).animations}getWalkAnimation(){return"walk"+this.controller.levelView.getDirectionName(this.facing)}getIdleAnimation(){return"idle"+this.controller.levelView.getDirectionName(this.facing)}playMoveForwardAnimation(e,t,i,o){var s,a=this.controller.levelView,t=e[1]+(t===FacingDirection.North?1:0);this.sprite.sortOrder=this.controller.levelView.yToIndex(t)+1,a.playBlockSound(o),a.playScaledSpeed(this.getAnimationManager(),this.getWalkAnimation()),setTimeout(()=>{(s=this.controller.levelView.addResettableTween(this.sprite).to({x:this.offset[0]+40*e[0],y:this.offset[1]+40*e[1]},300,Phaser.Easing.Linear.None)).onComplete.add(()=>{a.playScaledSpeed(this.getAnimationManager(),this.getIdleAnimation()),i.succeeded()}),s.start()},50/this.controller.tweenTimeScale)}walkableCheck(){}updateHidingTree(){var t=this.controller.levelView;if(this.underTree.state){var e=this.underTree.treeIndex,i=this.controller.levelEntity.entityMap;t.isUnderTree(e,this.position)||(!function(e,t,i){for(var o of t){o=o[1];if(!(o===e)&&o.underTree.treeIndex===i)return!0}return!1}(this,i,e)&&t.changeTreeAlpha(e,1),this.underTree={state:!1,treeIndex:-1})}else{var o=t.trees;for(let e=0;e<o.length;e++)if(t.isUnderTree(e,this.position)){t.changeTreeAlpha(e,.8),this.underTree={state:!0,treeIndex:e};break}}}updateHidingBlock(e){const i=this.controller.levelView,t=this.controller.levelModel.actionPlane;var o,s,a;this.isOnBlock||(s=(o=this).position,a=Position.south(s),!(s=t.getBlockAt(a))||s.isTransparent||null!==(a=i.actionPlaneBlocks[i.coordinatesToIndex(a)])&&o.controller.levelView.addResettableTween(a).to({alpha:.8},300,Phaser.Easing.Linear.None).start()),void 0!==e&&function(e,t){t=Position.south(t);t.y<10&&(null!==(t=i.actionPlaneBlocks[i.coordinatesToIndex(t)])&&e.controller.levelView.addResettableTween(t).to({alpha:1},300,Phaser.Easing.Linear.None).start())}(this,e)}doMoveForward(e,t){var i=this.controller.levelModel,o=this.position;this.position=t;i=i.groundPlane.getBlockAt(this.position).blockType;this.playMoveForwardAnimation(t,this.facing,e,i,()=>{}),this.updateHidingTree(),this.updateHidingBlock(o)}bump(e){var t=this.controller.levelView.getDirectionName(this.facing);this.controller.levelView.playScaledSpeed(this.getAnimationManager(),"bump"+t);t=this.controller.levelModel.getMoveForwardPosition(this);let i=this.controller.levelEntity.getEntityAt(t);null!==i&&(this.queue.startPushHighPriorityCommands(),this.controller.events.forEach(e=>e({eventType:EventType.WhenTouched,targetType:this.type,targetIdentifier:this.identifier,eventSenderIdentifier:i.identifier})),this.queue.endPushHighPriorityCommands()),this.controller.delayPlayerMoveBy(400,800,()=>{e.succeeded()})}callBumpEvents(i){for(let t=1;t<i.length;t++)"frontEntity"===i[t]&&(this.controller.events.forEach(e=>e({eventType:EventType.WhenTouched,targetType:i[t+1].type,eventSenderIdentifier:this.identifier,targetIdentifier:i[t+1].identifier})),t++)}moveDirection(e,t){this.controller.levelModel.turnToDirection(this,t),this.moveForward(e,!1)}moveForward(e,t=!0){t&&this.controller.addCommandRecord("moveForward",this.type,e.repeat);var i,o=this.controller.levelModel.getMoveForwardPosition(this),s=this.controller.levelModel.canMoveForward(this);s[0]?(i=Position.directionToOffsetPosition(this.facing),t=Position.directionToOffsetPosition(FacingDirection.opposite(this.facing)),i=this.handleMoveOnPressurePlate(i),this.doMoveForward(e,o),i||this.handleMoveOffPressurePlate(t),this.handleMoveOffIronDoor(t),this.handleMoveAwayFromPiston(t)):(this.bump(e),this.callBumpEvents(s))}moveBackward(e,t=!0){t&&this.controller.addCommandRecord("moveBackward",this.type,e.repeat);var i,o=this.controller.levelModel.getMoveDirectionPosition(this,2),s=this.controller.levelModel.canMoveBackward(this);s[0]?(i=Position.directionToOffsetPosition(FacingDirection.opposite(this.facing)),t=Position.directionToOffsetPosition(this.facing),i=this.handleMoveOnPressurePlate(i),this.doMoveBackward(e,o),i||this.handleMoveOffPressurePlate(t),this.handleMoveOffIronDoor(t),this.handleMoveAwayFromPiston(t)):(this.bump(e),this.callBumpEvents(s))}canPlaceBlockOver(){return{canPlace:!1,plane:""}}moveAway(e,t){this.controller.addCommandRecord("moveAway",this.type,e.repeat);function i(e,t,i){return Position.absoluteDistanceSquare(t[1],e)<Position.absoluteDistanceSquare(i[1],e)?i:t}var o=t.position,s=[],t=Position.absoluteDistanceSquare(o,this.position);o.x<=this.position.x&&this.controller.levelModel.canMoveDirection(this,FacingDirection.East)[0]&&(s=[FacingDirection.East,Position.east(this.position)]),o.x>=this.position.x&&this.controller.levelModel.canMoveDirection(this,FacingDirection.West)[0]&&(s=0<s.length?i(o,s,[FacingDirection.West,Position.west(this.position)]):[FacingDirection.West,Position.west(this.position)]),o.y>=this.position.y&&this.controller.levelModel.canMoveDirection(this,FacingDirection.North)[0]&&(s=0<s.length?i(o,s,[FacingDirection.North,Position.north(this.position)]):[FacingDirection.North,Position.north(this.position)]),0===(s=o.y<=this.position.y&&this.controller.levelModel.canMoveDirection(this,FacingDirection.South)[0]?0<s.length?i(o,s,[FacingDirection.South,Position.south(this.position)]):[FacingDirection.South,Position.south(this.position)]:s).length||t>=Position.absoluteDistanceSquare(o,s[1])?e.succeeded():this.moveDirection(e,s[0])}moveToward(e,t){this.controller.addCommandRecord("moveToward",this.type,e.repeat);var i=t.position,o=[],t=function(e,t,i){return Position.absoluteDistanceSquare(t[1],e)>Position.absoluteDistanceSquare(i[1],e)?i:t};return i.x>=this.position.x&&this.controller.levelModel.canMoveDirection(this,FacingDirection.East)[0]&&(o=[FacingDirection.East,Position.east(this.position)]),i.x<=this.position.x&&this.controller.levelModel.canMoveDirection(this,FacingDirection.West)[0]&&(o=0<o.length?t(i,o,[FacingDirection.West,Position.west(this.position)]):[FacingDirection.West,Position.west(this.position)]),i.y<=this.position.y&&this.controller.levelModel.canMoveDirection(this,FacingDirection.North)[0]&&(o=0<o.length?t(i,o,[FacingDirection.North,Position.north(this.position)]):[FacingDirection.North,Position.north(this.position)]),i.y>=this.position.y&&this.controller.levelModel.canMoveDirection(this,FacingDirection.South)[0]&&(o=0<o.length?t(i,o,[FacingDirection.South,Position.south(this.position)]):[FacingDirection.South,Position.south(this.position)]),1===Position.absoluteDistanceSquare(this.position,i)?(this.position.x<i.x?this.facing=FacingDirection.East:this.position.x>i.x?this.facing=FacingDirection.West:this.position.y<i.y?this.facing=FacingDirection.South:this.position.y>i.y&&(this.facing=FacingDirection.North),this.updateAnimationDirection(),this.bump(e),!1):0===o.length?(e.succeeded(),!1):(this.moveDirection(e,o[0]),!0)}moveTo(e,t){var i;1===Position.absoluteDistanceSquare(t.position,this.position)?t.position.y-this.position.y==-1?this.moveDirection(e,FacingDirection.North):t.position.y-this.position.y==1?this.moveDirection(e,FacingDirection.South):t.position.x-this.position.x==1?this.moveDirection(e,FacingDirection.East):this.moveDirection(e,FacingDirection.West):this.moveToward(e,t)?(i=new CallbackCommand(this.controller,()=>{},()=>{this.moveTo(i,t)},this.identifier),this.addCommand(i)):this.bump(e)}turn(e,t,i=!0){i&&this.controller.addCommandRecord("turn",this.type,e.repeat),-1===t&&this.controller.levelModel.turnLeft(this),1===t&&this.controller.levelModel.turnRight(this),this.updateAnimationDirection(),this.controller.delayPlayerMoveBy(200,800,()=>{e.succeeded()})}turnRandom(e){this.controller.addCommandRecord("turnRandom",this.type,e.repeat);var t=0===getRandomInt(0,1)?1:-1;this.turn(e,t,!1)}use(e,t){var i="lookAtCam"+this.controller.levelView.getDirectionName(this.facing);this.controller.levelView.playScaledSpeed(this.getAnimationManager(),i),this.queue.startPushHighPriorityCommands(),this.controller.events.forEach(e=>e({eventType:EventType.WhenUsed,targetType:this.type,eventSenderIdentifier:t.identifier,targetIdentifier:this.identifier})),this.queue.endPushHighPriorityCommands(),e.succeeded()}drop(t,e){this.controller.addCommandRecord("drop",this.type,t.repeat),this.controller.levelView.playItemDropAnimation(this.position,e,()=>{if(t.succeeded(),this.controller.levelModel.usePlayer){const e=this.controller.levelModel.player.queue.currentCommand;e&&e.waitForOtherQueue&&e.succeeded()}})}attack(s){this.controller.addCommandRecord("attack",this.type,s.repeat);var e=this.controller.levelView.getDirectionName(this.facing);this.controller.levelView.playScaledSpeed(this.getAnimationManager(),"attack"+e),setTimeout(e=>{let o=e.controller.levelEntity.getEntityAt(e.controller.levelModel.getMoveForwardPosition(e));var t;o&&(t=new CallbackCommand(e.controller,()=>{},()=>{o.takeDamage(t)},o),o.addCommand(t)),setTimeout(function(e,t,i){null!==t&&(o.queue.startPushHighPriorityCommands(),e.events.forEach(e=>e({eventType:EventType.WhenAttacked,targetType:t.type,eventSenderIdentifier:i.identifier,targetIdentifier:t.identifier})),o.queue.endPushHighPriorityCommands()),s.succeeded()},300/this.controller.tweenTimeScale,e.controller,o,e)},200/this.controller.tweenTimeScale,this)}pushBack(e,t,i,o){var s=this.controller.levelModel,t=Position.forward(this.position,t);s.isPositionEmpty(t)[0]?(this.updateHidingBlock(this.position),this.position=t,this.updateHidingTree(),(t=this.controller.levelView.addResettableTween(this.sprite).to({x:this.offset[0]+40*this.position[0],y:this.offset[1]+40*this.position[1]},i,Phaser.Easing.Linear.None)).onComplete.add(()=>{setTimeout(()=>{e.succeeded(),void 0!==o&&o(this)},i/this.controller.tweenTimeScale)}),t.start()):(e.succeeded(),void 0!==o&&o(this))}takeDamage(e){let t=this.controller.levelView;var i=t.getDirectionName(this.facing);1<this.healthPoint?(t.playScaledSpeed(this.getAnimationManager(),"hurt"+i),setTimeout(()=>{this.healthPoint--,e.succeeded()},1500/this.controller.tweenTimeScale)):(this.healthPoint--,this.getAnimationManager().stop(null,!0),this.controller.levelView.playScaledSpeed(this.getAnimationManager(),"die"+i),setTimeout(()=>{var e=this.controller.levelView.addResettableTween(this.sprite).to({alpha:0},300,Phaser.Easing.Linear.None);e.onComplete.add(()=>{this.controller.levelEntity.destroyEntity(this.identifier)}),e.start()},1500/this.controller.tweenTimeScale))}playRandomIdle(e){var t="",e=this.controller.levelView.getDirectionName(e);switch(Math.trunc(5*Math.random())+1){case 1:t+="idle";break;case 2:t+="lookLeft";break;case 3:t+="lookRight";break;case 4:t+="lookAtCam";break;case 5:t+="lookDown"}t+=e,this.controller.levelView.playScaledSpeed(this.getAnimationManager(),t)}updateAnimationDirection(){var e=this.controller.levelView.getDirectionName(this.facing);this.controller.levelView.playScaledSpeed(this.getAnimationManager(),"idle"+e)}getDistance(e){return Position.absoluteDistanceSquare(this.position,e.position)}blowUp(i,e){let t=FacingDirection.South;e[0]>this.position[0]?(t=FacingDirection.West,this.facing=FacingDirection.East,this.updateAnimationDirection()):e[0]<this.position[0]?(t=FacingDirection.East,this.facing=FacingDirection.West,this.updateAnimationDirection()):e[1]>this.position[1]?(t=FacingDirection.North,this.facing=FacingDirection.South,this.updateAnimationDirection()):e[1]<this.position[1]&&(t=FacingDirection.South,this.facing=FacingDirection.North,this.updateAnimationDirection()),this.pushBack(i,t,150,function(e){let t=new CallbackCommand(e.controller,()=>{},()=>{e.controller.destroyEntity(t,e.identifier)},e.identifier);e.queue.startPushHighPriorityCommands(),e.addCommand(t,i.repeat),e.queue.endPushHighPriorityCommands()})}hasPermissionToWalk(e,t,i=null){return(e.isWalkable||void 0!==t&&t.isOnBlock&&!e.isEmpty)&&(void 0===t||t.canMoveThrough())&&"water"!==i.blockType&&"lava"!==i.blockType}handleMoveOffPressurePlate(e){const t=Position.add(this.position,e);var i="pressurePlateDown"===this.controller.levelModel.actionPlane.getBlockAt(t).blockType,o=this.controller.levelModel.actionPlane.getBlockAt(this.position);let s=!1;void 0!==o&&o.isWalkable||(s=!0),this.controller.levelEntity.entityMap.forEach(e=>{e.identifier!==this.identifier&&e.canTriggerPressurePlates()&&this.controller.positionEquivalence(e.position,t)&&(s=!0)}),i&&!s&&(this.controller.audioPlayer.play("pressurePlateClick"),i=new LevelBlock("pressurePlateUp"),this.controller.levelModel.actionPlane.setBlockAt(t,i,e[0],e[1]))}handleMoveOnPressurePlate(e){var t=Position.add(this.position,e);if("pressurePlateUp"!==this.controller.levelModel.actionPlane.getBlockAt(t).blockType)return!1;this.controller.audioPlayer.play("pressurePlateClick");e=new LevelBlock("pressurePlateDown");return this.controller.levelModel.actionPlane.setBlockAt(t,e),!0}handleMoveOffIronDoor(e){var t=Position.add(this.position,e);this.controller.levelModel.inBounds(t)&&(e="doorIron"===this.controller.levelModel.actionPlane.getBlockAt(t).blockType,t="doorIron"===this.controller.levelModel.actionPlane.getBlockAt(this.position).blockType,e&&!t&&this.controller.levelModel.actionPlane.findDoorToAnimate(new Position(-1,-1)))}handleMoveAwayFromPiston(e){e=Position.add(this.position,e);Position.getOrthogonalPositions(e).forEach(e=>{if(this.controller.levelModel.actionPlane.inBounds(e)){const t=this.controller.levelModel.actionPlane.getBlockAt(e);t.blockType.startsWith("piston")&&t.isPowered&&this.controller.levelModel.actionPlane.activatePiston(e)}})}handleGetOnRails(e){this.getOffTrack=!1,this.handleMoveOffPressurePlate(new Position(0,0)),this.controller.levelView.playTrack(this.position,e,!0,this,null)}}class Agent extends BaseEntity{constructor(e,t,i,o,s,a,n){super(e,t,"PlayerAgent",i,o,n),this.offset=[-16,-15],this.name=s,this.isOnBlock=a,this.inventory={},this.movementState=-1,this.moveDelayMin=20,this.moveDelayMax=150}canPlaceBlockOver(e,t){let i={canPlace:!1,plane:""};return t.getIsLiquid()?e.getIsPlaceableInLiquid()&&(i.canPlace=!0,i.plane="groundPlane"):e.isWalkable&&(i.canPlace=!0,i.plane="actionPlane"),i}canPlaceBlock(e){return e.isEmpty}canMoveThrough(){return!0}getSortOrderOffset(){return super.getSortOrderOffset()-1}updateMovement(){if(this.controller.attemptRunning&&this.controller.getIsDirectPlayerControl()){var e=this.queue.isFinished()||!this.queue.isStarted(),t=-1!==this.movementState,i=this.queue.currentCommand&&0===this.queue.getLength(),o=+new Date-this.lastMovement;if((e||i&&300<o)&&t)if(0<=this.movementState){let e=this.movementState,t=new CallbackCommand(this,()=>{},()=>{this.lastMovement=+new Date,this.controller.moveDirection(t,e)},this.identifier);this.addCommand(t)}else{let e=new CallbackCommand(this,()=>{},()=>{this.lastMovement=+new Date,this.controller.use(e)},this.identifier);this.addCommand(e)}}}doMove(e,t){let i;const o=this.controller.levelModel,s=this.controller.levelView;var a=this.isOnBlock,n=this.position;o[`move${t}`](this);a=a&&a!==this.isOnBlock;i=(this.isOnBlock||a?o.actionPlane:o.groundPlane).getBlockAt(this.position).blockType,s[`playMove${t}Animation`](this,n,this.facing,a,this.isOnBlock,i,()=>{s.playIdleAnimation(this.position,this.facing,this.isOnBlock,this),this.controller.delayPlayerMoveBy(this.moveDelayMin,this.moveDelayMax,()=>{e.succeeded()})}),this.updateHidingTree(),this.updateHidingBlock(n)}doMoveForward(e){this.doMove(e,"Forward")}doMoveBackward(e){this.doMove(e,"Backward")}bump(e){var t=this.controller.levelView,i=this.controller.levelModel;t.playBumpAnimation(this.position,this.facing,!1,this);let o=this.controller.levelEntity.getEntityAt(i.getMoveForwardPosition(this));if(null!==o&&this.controller.levelEntity.isFriendlyEntity(o.type)){const a=this.facing;var s=new CallbackCommand(this,()=>{},()=>{o.pushBack(s,a,250)},o.identifier);o.queue.startPushHighPriorityCommands(),o.addCommand(s),o.queue.endPushHighPriorityCommands()}this.controller.delayPlayerMoveBy(200,400,()=>{e.succeeded()})}takeDamage(e){var t=this.controller.levelView.getDirectionName(this.facing);this.healthPoint--,0<this.healthPoint?(this.controller.levelView.playScaledSpeed(this.sprite.animations,"hurt"+t),e.succeeded()):(this.sprite.animations.stop(null,!0),this.controller.levelView.playFailureAnimation(this.position,this.facing,this.isOnBlock,()=>{e.failed(),this.controller.handleEndState(!1)}))}hasPermissionToWalk(e){return e.isWalkable}canTriggerPressurePlates(){return!0}}class Boat extends BaseEntity{constructor(e,t,i,o,s,a){super(e,t,i,o,s,a),this.offset=[-22,-28],this.prepareSprite(),this.sprite.sortOrder=this.controller.levelView.yToIndex(this.position.y)}getFrameForDirection(){switch(this.facing){case FacingDirection.North:return"Boat_05";case FacingDirection.South:return"Boat_01";case FacingDirection.East:return"Boat_07";case FacingDirection.West:return"Boat_03"}}prepareSprite(){const e=this.controller.levelView.actionGroup;var t=this.getFrameForDirection();this.sprite=e.create(0,0,"player"+this.controller.player.name,t),this.sprite.x=this.offset[0]+40*this.position.x,this.sprite.y=this.offset[1]+40*this.position.y,Boat.addBobTween(this.game,this.sprite)}static addBobTween(e,t){return e.add.tween(t).to({y:"3"},1e3,Phaser.Easing.Sinusoidal.InOut,!0,0,-1,!0)}}class Chicken extends BaseEntity{constructor(e,t,i,o,s,a){super(e,t,i,o,s,a),this.offset=[-25,-32],this.prepareSprite(),this.sprite.sortOrder=this.controller.levelView.yToIndex(this.position.y)}prepareSprite(){function e(e,t){return 1e3*(Math.random()*(t-e)+e)}let t=this.controller.levelView.actionGroup;var i=[],o="chicken";this.sprite=t.create(0,0,"chicken","chicken0001.png"),this.sprite.scale.setTo(.75,.75);var s=["chicken0222.png","chicken0111.png","chicken0001.png","chicken0333.png"],a=[[[259,275],[225,227],[224,226],[285,287],[276,281],[291,302],[303,313],[314,326],[327,332],[460,467],[240,249]],[[148,164],[114,116],[113,115],[174,176],[165,170],[180,191],[192,202],[203,215],[216,221],[452,459],[129,138]],[[37,53],[3,5],[12,14],[63,65],[54,59],[69,80],[81,91],[92,104],[105,110],[444,451],[18,27]],[[370,386],[336,338],[335,337],[396,398],[387,392],[402,413],[414,424],[425,437],[438,443],[468,475],[351,360]]];for(let t=0;t<4;t++){var n=this.controller.levelView.getDirectionName(t),i=Phaser.Animation.generateFrameNames(o,a[t][0][0],a[t][0][1],".png",4);for(let e=0;e<8;e++)i.push(s[t]);this.sprite.animations.add("idle"+n,i,12,!1).onComplete.add(()=>{this.playRandomIdle(this.facing)}),i=Phaser.Animation.generateFrameNames(o,a[t][1][0],a[t][1][1],".png",4),this.sprite.animations.add("lookLeft"+n,i,12,!1).onComplete.add(()=>{this.sprite.animations.stop(),setTimeout(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"lookLeft"+this.controller.levelView.getDirectionName(this.facing)+"_2")},e(.2,1))}),i=Phaser.Animation.generateFrameNames(o,a[t][1][1],a[t][1][0],".png",4),this.sprite.animations.add("lookLeft"+n+"_2",i,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][2][0],a[t][2][1],".png",4),this.sprite.animations.add("lookRight"+n,i,12,!1).onComplete.add(()=>{this.sprite.animations.stop(),setTimeout(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"lookRight"+this.controller.levelView.getDirectionName(this.facing)+"_2")},e(.2,1))}),i=Phaser.Animation.generateFrameNames(o,a[t][2][1],a[t][2][0],".png",4),this.sprite.animations.add("lookRight"+n+"_2",i,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][3][0],a[t][3][1],".png",4),this.sprite.animations.add("lookAtCam"+n,i,12,!1).onComplete.add(()=>{this.sprite.animations.stop(),setTimeout(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"lookAtCam"+this.controller.levelView.getDirectionName(this.facing)+"_2")},e(.2,1))}),i=Phaser.Animation.generateFrameNames(o,a[t][3][1],a[t][3][0],".png",4),this.sprite.animations.add("lookAtCam"+n+"_2",i,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][4][0],a[t][4][1],".png",4),this.sprite.animations.add("lookDown"+n,i,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][5][0],a[t][5][1],".png",4),this.sprite.animations.add("walk"+n,i,12,!0),i=Phaser.Animation.generateFrameNames(o,a[t][6][0],a[t][6][1],".png",4),this.sprite.animations.add("attack"+n,i,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][7][0],a[t][7][1],".png",4),this.sprite.animations.add("hurt"+n,i,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][8][0],a[t][8][1],".png",4),this.sprite.animations.add("die"+n,i,12,!1),i=this.controller.levelView.generateReverseFrames(o,a[t][9][0],a[t][9][1],".png",4),this.sprite.animations.add("bump"+n,i,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][10][0],a[t][10][1],".png",4),this.sprite.animations.add("eat"+n,i,12,!1).onComplete.add(()=>{this.sprite.animations.stop(),setTimeout(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"eat"+this.controller.levelView.getDirectionName(this.facing)+"_2")},e(.2,1))}),i=Phaser.Animation.generateFrameNames(o,a[t][10][1],a[t][10][0],".png",4),this.sprite.animations.add("eat"+n+"_2",i,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))})}this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing)),this.sprite.x=this.offset[0]+40*this.position.x,this.sprite.y=this.offset[1]+40*this.position.y}}class Cod extends BaseEntity{constructor(e,t,i,o,s,a){super(e,t,i,o,s,a),this.offset=[0,10],this.prepareSprite(),this.sprite.sortOrder=this.controller.levelView.yToIndex(this.position.y)}getFrameForDirection(){if(!this.controller.levelModel.isUnderwater())return this.facing!==FacingDirection.East?"Cod_Surface06":"Cod_Surface00";switch(this.facing){case FacingDirection.North:return"Cod00";case FacingDirection.South:return"Cod10";case FacingDirection.East:return"Cod05";case FacingDirection.West:return"Cod15"}}prepareSprite(){var e=this.getFrameForDirection();const t=this.controller.levelView.actionGroup;this.sprite=t.create(0,0,"cod",e+".png");var i=this.controller.levelModel.isUnderwater()?"Cod":"Cod_Surface";let o=[[6,12],[0,5],[6,12],[6,12]];this.controller.levelModel.isUnderwater()&&(o=[[0,3],[5,8],[10,13],[15,18]]);for(let t=0;t<4;t++){let e=this.controller.levelView.getDirectionName(t);var s=Phaser.Animation.generateFrameNames(i,o[t][0],o[t][1],".png",2);this.sprite.animations.add("idle"+e,s,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+e,.5)})}e=this.controller.levelView.getDirectionName(this.facing);this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+e,.5),this.sprite.x=this.offset[0]+40*this.position.x,this.sprite.y=this.offset[1]+40*this.position.y}canMoveThrough(){return this.controller.levelEntity.destroyEntity(this.identifier),!0}}class Cow extends BaseEntity{constructor(e,t,i,o,s,a){super(e,t,i,o,s,a),this.offset=[-43,-55],this.prepareSprite(),this.sprite.sortOrder=this.controller.levelView.yToIndex(this.position.y)}prepareSprite(){function e(e,t){return 1e3*(Math.random()*(t-e)+e)}let t=this.controller.levelView.actionGroup;var i=[],o="Cow";this.sprite=t.create(0,0,"cow","Cow0001.png");var s=["Cow0222.png","Cow0111.png","Cow0001.png","Cow0333.png"],a=[[[258,264],[225,227],[224,226],[285,287],[240,241],[291,302],[303,313],[314,326],[327,332],[460,467],[276,282],[240,249]],[[147,153],[114,116],[129,130],[174,176],[129,130],[180,191],[192,202],[203,215],[216,221],[452,459],[165,171],[129,138]],[[36,42],[3,5],[12,14],[63,65],[18,19],[69,80],[81,91],[92,104],[105,110],[444,451],[51,54],[18,27]],[[369,375],[336,338],[335,337],[396,398],[351,352],[402,413],[414,424],[425,437],[438,443],[468,475],[387,393],[351,360]]];for(let t=0;t<4;t++){var n=this.controller.levelView.getDirectionName(t),i=[];for(let e=0;e<20;e++)i.push(s[t]);this.sprite.animations.add("idle"+n,i,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle2"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][1][0],a[t][1][1],".png",4),this.sprite.animations.add("lookLeft"+n,i,12,!1).onComplete.add(()=>{this.sprite.animations.stop(),setTimeout(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"lookLeft"+this.controller.levelView.getDirectionName(this.facing)+"_2")},e(.2,1))}),i=Phaser.Animation.generateFrameNames(o,a[t][1][1],a[t][1][0],".png",4),this.sprite.animations.add("lookLeft"+n+"_2",i,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][2][0],a[t][2][1],".png",4),this.sprite.animations.add("lookRight"+n,i,12,!1).onComplete.add(()=>{setTimeout(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"lookRight"+this.controller.levelView.getDirectionName(this.facing)+"_2")},e(.2,1))}),i=Phaser.Animation.generateFrameNames(o,a[t][2][1],a[t][2][0],".png",4),this.sprite.animations.add("lookRight"+n+"_2",i,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][3][0],a[t][3][1],".png",4),this.sprite.animations.add("lookAtCam"+n,i,12,!1).onComplete.add(()=>{setTimeout(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"lookAtCam"+this.controller.levelView.getDirectionName(this.facing)+"_2")},e(.2,1))}),i=Phaser.Animation.generateFrameNames(o,a[t][3][1],a[t][3][0],".png",4),this.sprite.animations.add("lookAtCam"+n+"_2",i,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][4][0],a[t][4][1],".png",4),this.sprite.animations.add("lookDown"+n,i,12,!1).onComplete.add(()=>{setTimeout(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"lookDown"+this.controller.levelView.getDirectionName(this.facing)+"_2")},e(.2,1))}),i=Phaser.Animation.generateFrameNames(o,a[t][4][1],a[t][4][0],".png",4),this.sprite.animations.add("lookDown"+n+"_2",i,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][5][0],a[t][5][1],".png",4),this.sprite.animations.add("walk"+n,i,12,!0),i=Phaser.Animation.generateFrameNames(o,a[t][6][0],a[t][6][1],".png",4),this.sprite.animations.add("attack"+n,i,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][7][0],a[t][7][1],".png",4),this.sprite.animations.add("hurt"+n,i,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][8][0],a[t][8][1],".png",4),this.sprite.animations.add("die"+n,i,12,!1),i=this.controller.levelView.generateReverseFrames(o,a[t][9][0],a[t][9][1],".png",4),this.sprite.animations.add("bump"+n,i,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),2===t?(i=Phaser.Animation.generateFrameNames(o,a[t][10][0],a[t][10][1],".png",4),this.sprite.animations.add("idle2"+n,i,6,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle2"+this.controller.levelView.getDirectionName(this.facing)+"_reverse")}),i=Phaser.Animation.generateFrameNames(o,a[t][10][1],a[t][10][0],".png",4),this.sprite.animations.add("idle2"+n+"_reverse",i,6,!1).onComplete.add(()=>{this.playRandomIdle(this.facing)})):(i=Phaser.Animation.generateFrameNames(o,a[t][10][1],a[t][10][0],".png",4),this.sprite.animations.add("idle2"+n,i,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle2"+this.controller.levelView.getDirectionName(this.facing)+"_reverse")}),i=Phaser.Animation.generateFrameNames(o,a[t][10][0],a[t][10][1],".png",4),this.sprite.animations.add("idle2"+n+"_reverse",i,12,!1).onComplete.add(()=>{this.playRandomIdle(this.facing)})),i=Phaser.Animation.generateFrameNames(o,a[t][11][0],a[t][11][1],".png",4),this.sprite.animations.add("eat"+n,i,12,!1).onComplete.add(()=>{this.sprite.animations.stop(),setTimeout(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"eat"+this.controller.levelView.getDirectionName(this.facing)+"_2")},e(.2,1))}),i=Phaser.Animation.generateFrameNames(o,a[t][11][1],a[t][11][0],".png",4),this.sprite.animations.add("eat"+n+"_2",i,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))})}this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing)),this.sprite.x=this.offset[0]+40*this.position.x,this.sprite.y=this.offset[1]+40*this.position.y}playRandomIdle(e){var t="",e=this.controller.levelView.getDirectionName(e);switch(Math.trunc(5*Math.random())+1){case 1:t+="idle";break;case 2:t+="lookLeft";break;case 3:t+="lookRight";break;case 4:t+="lookAtCam";break;case 5:t+="lookDown"}this.controller.levelView.playScaledSpeed(this.sprite.animations,t+=e),this.controller.printErrorMsg(this.type+" calls animation : "+t+"\n")}}class Creeper extends BaseEntity{constructor(e,t,i,o,s,a){super(e,t,i,o,s,a),this.offset=[-43,-55],this.prepareSprite(),this.sprite.sortOrder=this.controller.levelView.yToIndex(this.position.y)}prepareSprite(){function t(e,t){return 1e3*(Math.random()*(t-e)+e)}let e=this.controller.levelView.actionGroup;var i=[],o="ShadowCreeper_2016_";this.sprite=e.create(0,0,"creeper","ShadowCreeper_2016_000.png");var s=[[[128,128],[128,131],[134,137],[140,143],[146,149],[152,163],[164,167],[164,178],[179,184],[185,191],[272,279]],[[64,64],[64,67],[70,73],[76,89],[82,85],[88,99],[100,103],[100,114],[115,120],[121,127],[264,271]],[[0,0],[0,3],[6,10],[12,16],[18,21],[24,35],[36,39],[36,50],[51,56],[57,63],[256,263]],[[192,192],[192,195],[198,201],[204,207],[210,213],[216,227],[228,231],[228,242],[243,248],[249,255],[280,287]]];for(let e=0;e<4;e++){var a=this.controller.levelView.getDirectionName(e),i=Phaser.Animation.generateFrameNames(o,s[e][0][0],s[e][0][1],".png",3);for(let e=0;e<12;e++)i.push(i[0]);this.sprite.animations.add("idle"+a,i,10,!1).onComplete.add(()=>{this.playRandomIdle(this.facing)}),i=Phaser.Animation.generateFrameNames(o,s[e][1][0],s[e][1][1],".png",3),this.sprite.animations.add("lookLeft"+a,i,10,!1).onComplete.add(()=>{this.sprite.animations.stop(),setTimeout(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"lookLeft"+this.controller.levelView.getDirectionName(this.facing)+"_2")},t(.2,1))}),i=Phaser.Animation.generateFrameNames(o,s[e][1][1],s[e][1][0],".png",3),this.sprite.animations.add("lookLeft"+a+"_2",i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,s[e][2][0],s[e][2][1],".png",3),this.sprite.animations.add("lookRight"+a,i,10,!1).onComplete.add(()=>{this.sprite.animations.stop(),setTimeout(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"lookRight"+this.controller.levelView.getDirectionName(this.facing)+"_2")},t(.2,1))}),i=Phaser.Animation.generateFrameNames(o,s[e][2][1],s[e][2][0],".png",3),this.sprite.animations.add("lookRight"+a+"_2",i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,s[e][3][0],s[e][3][1],".png",3),this.sprite.animations.add("lookAtCam"+a,i,10,!1).onComplete.add(()=>{this.sprite.animations.stop(),setTimeout(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"lookAtCam"+this.controller.levelView.getDirectionName(this.facing)+"_2")},t(.2,1))}),i=Phaser.Animation.generateFrameNames(o,s[e][3][1],s[e][3][0],".png",3),this.sprite.animations.add("lookAtCam"+a+"_2",i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,s[e][4][0],s[e][4][1],".png",3),this.sprite.animations.add("lookDown"+a,i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"lookDown_2"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,s[e][4][1],s[e][4][0],".png",3),this.sprite.animations.add("lookDown_2"+a,i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,s[e][5][0],s[e][5][1],".png",3),this.sprite.animations.add("walk"+a,i,10,!0),i=Phaser.Animation.generateFrameNames(o,s[e][6][0],s[e][6][1],".png",3),this.sprite.animations.add("attack"+a,i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,s[e][7][0],s[e][7][1],".png",3),this.sprite.animations.add("explode"+a,i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,s[e][8][0],s[e][8][1],".png",3),this.sprite.animations.add("hurt"+a,i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,s[e][9][0],s[e][9][1],".png",3),this.sprite.animations.add("die"+a,i,10,!1),i=this.controller.levelView.generateReverseFrames(o,s[e][10][0],s[e][10][1],".png",3),this.sprite.animations.add("bump"+a,i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))})}this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing)),this.sprite.x=this.offset[0]+40*this.position.x,this.sprite.y=this.offset[1]+40*this.position.y}}class Dolphin extends BaseEntity{constructor(e,t,i,o,s,a){super(e,t,i,o,s,a),this.offset=this.controller.levelModel.isUnderwater()?[-8,-8]:[-40,0],this.prepareSprite(),this.sprite.sortOrder=this.controller.levelView.yToIndex(this.position.y)}getFrameForDirection(){if(!this.controller.levelModel.isUnderwater())return this.facing!==FacingDirection.East?"Dolphin_Surface00":"Dolphin_Surface15";switch(this.facing){case FacingDirection.North:return"Dolphin09";case FacingDirection.South:return"Dolphin27";case FacingDirection.East:return"Dolphin18";case FacingDirection.West:return"Dolphin00"}}prepareSprite(){console.log(this.controller.levelModel.isUnderwater());var e=this.getFrameForDirection();const t=this.controller.levelView.actionGroup;this.sprite=t.create(0,0,"dolphin",e+".png");var i=this.controller.levelModel.isUnderwater()?"Dolphin":"Dolphin_Surface";let o=[[0,14],[15,29],[0,14],[0,14]];this.controller.levelModel.isUnderwater()&&(o=[[9,16],[18,25],[27,34],[0,7]]);for(let t=0;t<4;t++){let e=this.controller.levelView.getDirectionName(t);var s=Phaser.Animation.generateFrameNames(i,o[t][0],o[t][1],".png",2);this.sprite.animations.add("idle"+e,s,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+e,.5)})}e=this.controller.levelView.getDirectionName(this.facing);this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+e,.5),this.sprite.x=this.offset[0]+40*this.position.x,this.sprite.y=this.offset[1]+40*this.position.y}canMoveThrough(){return this.controller.levelEntity.destroyEntity(this.identifier),!0}}class Ghast extends BaseEntity{constructor(e,t,i,o,s,a){super(e,t,i,o,s,a),this.offset=[-50,-84],this.prepareSprite(),this.sprite.sortOrder=this.controller.levelView.yToIndex(Number.MAX_SAFE_INTEGER),this.audioDelay=15,o<5?this.patrolA():this.patrolB()}prepareSprite(){let e=this.controller.levelView.actionGroup;var i=[],o="Ghast";this.sprite=e.create(0,0,"ghast","Ghast0000.png"),this.sprite.scale.setTo(1,1);var s=[[[72,83],[84,95]],[[48,59],[60,71]],[[24,35],[36,47]],[[0,11],[12,23]]];for(let e=0;e<4;e++){var a=this.controller.levelView.getDirectionName(e),i=Phaser.Animation.generateFrameNames(o,s[e][0][0],s[e][0][1],".png",4),n=randomInt(2,i.length);let t=[];for(let e=0;e<n;++e)t.push(i[0]),i.splice(0,1);for(let e=0;e<t.length;++e)i.push(t[e]);for(let e=0;e<0;e++)i.push(i[0]);this.sprite.animations.add("idle"+a,i,12,!1).onComplete.add(()=>{this.playRandomIdle(this.facing)}),i=Phaser.Animation.generateFrameNames(o,s[e][1][0],s[e][1][1],".png",4),this.sprite.animations.add("shoot"+a,i,12,!1).onComplete.add(()=>{var e,t;this.sprite.animations.stop(),setTimeout(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"shoot"+this.controller.levelView.getDirectionName(this.facing)+"_2")},(e=.2,t=1,1e3*(Math.random()*(t-e)+e)))}),i=Phaser.Animation.generateFrameNames(o,s[e][1][1],s[e][1][0],".png",4),this.sprite.animations.add("shoot"+a+"_2",i,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))})}this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing)),this.sprite.x=this.offset[0]+40*this.position.x,this.sprite.y=this.offset[1]+40*this.position.y}canMoveThrough(){return!0}playRandomIdle(e){var t="",e=this.controller.levelView.getDirectionName(e);t+="idle",this.controller.levelView.playScaledSpeed(this.sprite.animations,t+=e),0<this.audioDelay?--this.audioDelay:(this.audioDelay=5,0===Math.floor(5*Math.random())&&(t=Math.floor(4*Math.random()),this.playMoan(t)))}playMoan(e){switch(e){case 0:this.controller.audioPlayer.play("moan2");break;case 1:this.controller.audioPlayer.play("moan3");break;case 2:this.controller.audioPlayer.play("moan6");break;default:this.controller.audioPlayer.play("moan7")}}patrolA(){var e=[Phaser.Easing.Sinusoidal.InOut,!0,0,-1,!0];this.controller.levelView.addResettableTween(this.sprite).to({y:this.offset[1]+40*this.position.y+80},randomInt(2500,3500),...e),this.controller.levelView.addResettableTween(this.sprite).to({x:this.offset[0]+40*this.position.x+10},randomInt(1500,2e3),...e)}patrolB(){var e=[Phaser.Easing.Sinusoidal.InOut,!0,0,-1,!0];this.controller.levelView.addResettableTween(this.sprite).to({y:this.offset[1]+40*this.position.y-80},randomInt(2500,3500),...e),this.controller.levelView.addResettableTween(this.sprite).to({x:this.offset[0]+40*this.position.x-10},randomInt(1500,2e3),...e)}}class IronGolem extends BaseEntity{constructor(e,t,i,o,s,a){super(e,t,i,o,s,a),this.offset=[-43,-55],this.prepareSprite(),this.sprite.sortOrder=this.controller.levelView.yToIndex(this.position.y)}prepareSprite(){function t(e,t){return 1e3*(Math.random()*(t-e)+e)}let e=this.controller.levelView.actionGroup;var i=[],o="Iron_Golem_Anims";this.sprite=e.create(0,0,"ironGolem","Iron_Golem_Anims001.png");var s=[[[45,45],[46,48],[50,52],[58,60],[54,56],[62,70],[71,74],[77,81],[82,88],[185,192]],[[133,133],[134,136],[138,140],[146,148],[142,144],[150,158],[159,162],[165,169],[170,176],[201,208]],[[1,1],[2,4],[6,8],[14,16],[10,12],[18,26],[27,30],[33,37],[38,44],[177,184]],[[89,89],[90,92],[94,96],[102,104],[98,100],[106,114],[115,118],[121,125],[126,132],[193,200]]];for(let e=0;e<4;e++){var a=this.controller.levelView.getDirectionName(e),i=Phaser.Animation.generateFrameNames(o,s[e][0][0],s[e][0][1],".png",3);for(let e=0;e<12;e++)i.push(i[0]);this.sprite.animations.add("idle"+a,i,8,!1).onComplete.add(()=>{this.playRandomIdle(this.facing)}),i=Phaser.Animation.generateFrameNames(o,s[e][1][0],s[e][1][1],".png",3),this.sprite.animations.add("lookLeft"+a,i,8,!1).onComplete.add(()=>{this.sprite.animations.stop(),setTimeout(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"lookLeft"+this.controller.levelView.getDirectionName(this.facing)+"_2")},t(.2,1))}),i=Phaser.Animation.generateFrameNames(o,s[e][1][1],s[e][1][0],".png",3),this.sprite.animations.add("lookLeft"+a+"_2",i,8,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,s[e][2][0],s[e][2][1],".png",3),this.sprite.animations.add("lookRight"+a,i,8,!1).onComplete.add(()=>{this.sprite.animations.stop(),setTimeout(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"lookRight"+this.controller.levelView.getDirectionName(this.facing)+"_2")},t(.2,1))}),i=Phaser.Animation.generateFrameNames(o,s[e][2][1],s[e][2][0],".png",3),this.sprite.animations.add("lookRight"+a+"_2",i,8,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,s[e][3][0],s[e][3][1],".png",3),this.sprite.animations.add("lookAtCam"+a,i,8,!1).onComplete.add(()=>{this.sprite.animations.stop(),setTimeout(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"lookAtCam"+this.controller.levelView.getDirectionName(this.facing)+"_2")},t(.2,1))}),i=Phaser.Animation.generateFrameNames(o,s[e][3][1],s[e][3][0],".png",3),this.sprite.animations.add("lookAtCam"+a+"_2",i,8,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,s[e][4][0],s[e][4][1],".png",3),this.sprite.animations.add("lookDown"+a,i,8,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"lookDown_2"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,s[e][4][1],s[e][4][0],".png",3),this.sprite.animations.add("lookDown_2"+a,i,8,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,s[e][5][0],s[e][5][1],".png",3),this.sprite.animations.add("walk"+a,i,8,!0),i=Phaser.Animation.generateFrameNames(o,s[e][6][0],s[e][6][1],".png",3),this.sprite.animations.add("attack"+a,i,8,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,s[e][7][0],s[e][7][1],".png",3),this.sprite.animations.add("hurt"+a,i,16/3,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,s[e][8][0],s[e][8][1],".png",3),this.sprite.animations.add("die"+a,i,16/3,!1),i=this.controller.levelView.generateReverseFrames(o,s[e][9][0],s[e][9][1],".png",3),this.sprite.animations.add("bump"+a,i,8,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))})}this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing)),this.sprite.x=this.offset[0]+40*this.position[0],this.sprite.y=this.offset[1]+40*this.position[1]}}class Player extends BaseEntity{constructor(e,t,i,o,s,a,n){super(e,t,"Player",i,o,n),this.offset=[-18,-32],this.name=s,this.isOnBlock=a,this.inventory={},this.movementState=-1,this.onTracks=!1,this.getOffTrack=!1,this.selectedItem=null,e.getIsDirectPlayerControl()?(this.moveDelayMin=0,this.moveDelayMax=0):(this.moveDelayMin=30,this.moveDelayMax=200),e.levelData.ocean&&(this.offset=[-26,-26]),e.levelData.boat&&(this.offset=[-27,-30])}canPlaceBlockOver(e,t){let i={canPlace:!1,plane:""};return t.getIsLiquid()?(i.canPlace=!0,i.plane="groundPlane"):(i.canPlace=!0,i.plane="actionPlane"),"cropWheat"===e.blockType&&(i.canPlace="farmlandWet"===t.blockType),i}canPlaceBlock(e){return e.isEmpty}shouldUpdateSelectionIndicator(){return!0}setMovePosition(e){super.setMovePosition(e),this.collectItems(this.position)}walkableCheck(e){this.isOnBlock=!e.isWalkable}updateMovement(){if(this.controller.attemptRunning&&this.controller.getIsDirectPlayerControl()&&(this.onTracks&&this.collectItems(this.position),this.canUpdateMovement()))if(0<=this.movementState){let e=this.movementState,t=new CallbackCommand(this,()=>{},()=>{this.lastMovement=+new Date,this.controller.moveDirection(t,e)},this.identifier);this.addCommand(t)}else{let e=new CallbackCommand(this,()=>{},()=>{this.lastMovement=+new Date,this.controller.use(e)},this.identifier);this.addCommand(e)}}canUpdateMovement(){var e=this.queue.isFinished()||!this.queue.isStarted(),t=-1!==this.movementState,i=this.queue.currentCommand&&0===this.queue.getLength(),o=+new Date-this.lastMovement,s=300<o;return t&&800<o&&(this.getOffTrack=!0),!this.onTracks&&(e||i&&s)&&t}doMoveForward(e){var t=this,i=this.controller.levelModel,o=this.controller.levelView,s=t.isOnBlock,a=this.position;i.moveForward(),s=s&&s!==t.isOnBlock,i=(t.isOnBlock||s?i.actionPlane:i.groundPlane).getBlockAt(t.position).blockType,o.playMoveForwardAnimation(t,a,t.facing,s,t.isOnBlock,i,()=>this.afterMove(e)),this.updateHidingTree(),this.updateHidingBlock(a)}doMoveBackward(e){var t=this,i=this.controller.levelModel,o=this.controller.levelView,s=t.isOnBlock,a=this.position;i.moveBackward(this),s=s&&s!==t.isOnBlock,i=(t.isOnBlock,i.actionPlane.getBlockAt(t.position).blockType),o.playMoveBackwardAnimation(t,a,t.facing,s,t.isOnBlock,i,()=>this.afterMove(e)),this.updateHidingTree(),this.updateHidingBlock(a)}afterMove(e){const i=this.controller.levelModel,o=this.controller.levelView;o.playIdleAnimation(this.position,this.facing,this.isOnBlock),i.isPlayerStandingInWater()&&!i.isInBoat()?o.playDrownFailureAnimation(this.position,this.facing,this.isOnBlock,()=>{this.controller.handleEndState(!1)}):i.isPlayerStandingInLava()?o.playBurnInLavaAnimation(this.position,this.facing,this.isOnBlock,()=>{this.controller.handleEndState(!1)}):(Position.getOrthogonalPositions(this.position).forEach(e=>{const t=i.actionPlane.getBlockAt(e);t&&t.blockType.endsWith("Chest")&&!t.isOpen&&(t.isOpen=!0,o.playOpenChestAnimation(e))}),this.controller.delayPlayerMoveBy(this.moveDelayMin,this.moveDelayMax,()=>{e.succeeded()}))}bump(e){var t=this.controller.levelView,i=this.controller.levelModel;t.playBumpAnimation(this.position,this.facing,!1);let o=this.controller.levelEntity.getEntityAt(i.getMoveForwardPosition(this));if(null!==o&&this.controller.levelEntity.isFriendlyEntity(o.type)){const a=this.facing;var s=new CallbackCommand(this,()=>{},()=>{o.pushBack(s,a,250)},o.identifier);o.queue.startPushHighPriorityCommands(),o.addCommand(s),o.queue.endPushHighPriorityCommands()}this.controller.delayPlayerMoveBy(200,400,()=>{e.succeeded()})}collectItems(t=this.position){var i=this.controller.levelView.collectibleItems;for(let e=0;e<i.length;e++){var[o,s,a,n]=i[e];null===o?i.splice(e,1):(s=this.controller.levelModel.spritePositionToIndex(s,new Position(o.x,o.y)),Position.absoluteDistanceSquare(t,s)<n&&(this.controller.levelView.playItemAcquireAnimation(this.position,this.facing,o,()=>{},a),i.splice(e,1)))}}takeDamage(e){var t=this.controller.levelView.getDirectionName(this.facing);this.healthPoint--,0<this.healthPoint?(this.controller.levelView.playScaledSpeed(this.getAnimationManager(),"hurt"+t),e.succeeded()):(this.getAnimationManager().stop(null,!0),this.controller.levelView.playFailureAnimation(this.position,this.facing,this.isOnBlock,()=>{e.failed(),this.controller.handleEndState(!1)}))}canTriggerPressurePlates(){return!0}}class Salmon extends BaseEntity{constructor(e,t,i,o,s,a){super(e,t,i,o,s,a),this.offset=[0,0],this.prepareSprite(),this.sprite.sortOrder=this.controller.levelView.yToIndex(this.position.y)}getFrameForDirection(){if(!this.controller.levelModel.isUnderwater())return this.facing!==FacingDirection.East?"Salmon_Surface13":"Salmon_Surface00";switch(this.facing){case FacingDirection.North:return"Salmon08";case FacingDirection.South:return"Salmon24";case FacingDirection.East:return"Salmon16";case FacingDirection.West:return"Salmon00"}}prepareSprite(){var e=this.getFrameForDirection();const t=this.controller.levelView.actionGroup;this.sprite=t.create(0,0,"salmon",e+".png");var i=this.controller.levelModel.isUnderwater()?"Salmon":"Salmon_Surface";let o=[[13,25],[0,12],[13,25],[13,25]];this.controller.levelModel.isUnderwater()&&(o=[[8,14],[16,22],[24,30],[0,6]]);for(let t=0;t<4;t++){let e=this.controller.levelView.getDirectionName(t);var s=Phaser.Animation.generateFrameNames(i,o[t][0],o[t][1],".png",2);this.sprite.animations.add("idle"+e,s,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+e,.5)})}e=this.controller.levelView.getDirectionName(this.facing);this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+e,.5),this.sprite.x=this.offset[0]+40*this.position.x,this.sprite.y=this.offset[1]+40*this.position.y}canMoveThrough(){return this.controller.levelEntity.destroyEntity(this.identifier),!0}}class SeaTurtle extends BaseEntity{constructor(e,t,i,o,s,a){super(e,t,i,o,s,a),this.offset=this.controller.levelModel.isUnderwater()?[-95,-100]:[-95,-90],this.prepareSprite(),this.sprite.sortOrder=this.controller.levelView.yToIndex(this.position.y)}getFrameForDirection(){if(!this.controller.levelModel.isUnderwater())return this.facing!==FacingDirection.East?"Sea_Turtle_Surface00":"Sea_Turtle_Surface13";switch(this.facing){case FacingDirection.North:return"Sea_Turtle00";case FacingDirection.South:return"Sea_Turtle10";case FacingDirection.East:return"Sea_Turtle05";case FacingDirection.West:return"Sea_Turtle15"}}prepareSprite(){var e=this.getFrameForDirection();const t=this.controller.levelView.actionGroup;this.sprite=t.create(0,0,"seaTurtle",e+".png"),this.sprite.scale.setTo(.75,.75);var i=this.controller.levelModel.isUnderwater()?"Sea_Turtle":"Sea_Turtle_Surface";let o=[[0,12],[13,25],[0,12],[0,12]];this.controller.levelModel.isUnderwater()&&(o=[[0,3],[5,8],[10,13],[15,18]]);for(let t=0;t<4;t++){let e=this.controller.levelView.getDirectionName(t);var s=Phaser.Animation.generateFrameNames(i,o[t][0],o[t][1],".png",2);this.sprite.animations.add("idle"+e,s,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+e,.5)})}e=this.controller.levelView.getDirectionName(this.facing);this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+e,.5),this.sprite.x=this.offset[0]+40*this.position.x,this.sprite.y=this.offset[1]+40*this.position.y}canMoveThrough(){return this.controller.levelView.createMiniBlock(this.position.x,this.position.y,"turtle",{collectibleDistance:1,xOffsetRange:10,yOffsetRange:10}),this.controller.levelEntity.destroyEntity(this.identifier),!0}}class Sheep extends BaseEntity{constructor(e,t,i,o,s,a){super(e,t,i,o,s,a),this.offset=[-43,-55],this.controller.levelView&&(this.prepareSprite(),this.sprite.sortOrder=this.controller.levelView.yToIndex(this.position.y)),this.naked=!1}use(e,t){var i=this.getNakedSuffix()+"lookAtCam"+this.controller.levelView.getDirectionName(this.facing);this.controller.levelView.playScaledSpeed(this.sprite.animations,i),this.queue.startPushHighPriorityCommands(),this.controller.events.forEach(e=>e({eventType:EventType.WhenUsed,targetType:this.type,eventSenderIdentifier:t.identifier,targetIdentifier:this.identifier})),this.queue.endPushHighPriorityCommands(),e.succeeded()}getWalkAnimation(){return this.getNakedSuffix()+super.getWalkAnimation()}getIdleAnimation(){return this.getNakedSuffix()+super.getIdleAnimation()}bump(e){var t=this.getNakedSuffix()+"bump",i=this.controller.levelView.getDirectionName(this.facing);this.controller.levelView.playScaledSpeed(this.sprite.animations,t+i);i=this.controller.levelModel.getMoveForwardPosition(this);let o=this.controller.levelEntity.getEntityAt(i);null!==o&&(this.queue.startPushHighPriorityCommands(),this.controller.events.forEach(e=>e({eventType:EventType.WhenTouched,targetType:this.type,targetIdentifier:this.identifier,eventSenderIdentifier:o.identifier})),this.queue.endPushHighPriorityCommands()),this.controller.delayPlayerMoveBy(400,800,()=>{e.succeeded()})}prepareSprite(){function e(e,t){return 1e3*(Math.random()*(t-e)+e)}let t=this.controller.levelView.actionGroup;var i=[],o="ShadowSheep_2016";this.sprite=t.create(0,0,"sheep","ShadowSheep_2016001.png");let s=["ShadowSheep_2016217.png","ShadowSheep_2016109.png","ShadowSheep_2016001.png","ShadowSheep_2016325.png"];var a=[[[252,261],[220,222],[228,231],[276,279],[270,275],[282,293],[294,305],[306,317],[318,323],[234,243],[880,887]],[[144,153],[112,114],[120,123],[168,171],[162,167],[174,185],[186,197],[198,209],[210,215],[126,135],[872,879]],[[36,45],[3,6],[12,15],[60,63],[54,59],[66,77],[78,89],[90,101],[102,108],[18,26],[864,871]],[[360,369],[328,330],[336,339],[384,387],[378,383],[390,401],[402,413],[414,425],[426,431],[342,351],[888,895]]];for(let t=0;t<4;t++){var n=this.controller.levelView.getDirectionName(t),i=Phaser.Animation.generateFrameNames(o,a[t][0][0],a[t][0][1],".png",3);for(let e=0;e<8;e++)i.push(s[t]);this.sprite.animations.add("idle"+n,i,10,!1).onComplete.add(()=>{this.playRandomIdle(this.facing)}),i=Phaser.Animation.generateFrameNames(o,a[t][1][0],a[t][1][1],".png",3),this.sprite.animations.add("lookLeft"+n,i,10,!1).onComplete.add(()=>{this.sprite.animations.stop(),setTimeout(()=>{this.naked?this.controller.levelView.playScaledSpeed(this.sprite.animations,"naked_lookLeft"+this.controller.levelView.getDirectionName(this.facing)+"_2"):this.controller.levelView.playScaledSpeed(this.sprite.animations,"lookLeft"+this.controller.levelView.getDirectionName(this.facing)+"_2")},e(.2,1))}),i=Phaser.Animation.generateFrameNames(o,a[t][1][1],a[t][1][0],".png",3),this.sprite.animations.add("lookLeft"+n+"_2",i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][2][0],a[t][2][1],".png",3),this.sprite.animations.add("lookRight"+n,i,10,!1).onComplete.add(()=>{this.sprite.animations.stop(),setTimeout(()=>{this.naked?this.controller.levelView.playScaledSpeed(this.sprite.animations,"naked_lookRight"+this.controller.levelView.getDirectionName(this.facing)+"_2"):this.controller.levelView.playScaledSpeed(this.sprite.animations,"lookRight"+this.controller.levelView.getDirectionName(this.facing)+"_2")},e(.2,1))}),i=Phaser.Animation.generateFrameNames(o,a[t][2][1],a[t][2][0],".png",3),this.sprite.animations.add("lookRight"+n+"_2",i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][3][0],a[t][3][1],".png",3),this.sprite.animations.add("lookAtCam"+n,i,10,!1).onComplete.add(()=>{this.sprite.animations.stop(),setTimeout(()=>{this.naked?this.controller.levelView.playScaledSpeed(this.sprite.animations,"naked_lookAtCam"+this.controller.levelView.getDirectionName(this.facing)+"_2"):this.controller.levelView.playScaledSpeed(this.sprite.animations,"lookAtCam"+this.controller.levelView.getDirectionName(this.facing)+"_2")},e(.2,1))}),i=Phaser.Animation.generateFrameNames(o,a[t][3][1],a[t][3][0],".png",3),this.sprite.animations.add("lookAtCam"+n+"_2",i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][4][0],a[t][4][1],".png",3),this.sprite.animations.add("lookDown"+n,i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][5][0],a[t][5][1],".png",3),this.sprite.animations.add("walk"+n,i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][6][0],a[t][6][1],".png",3),this.sprite.animations.add("attack"+n,i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][7][0],a[t][7][1],".png",3),this.sprite.animations.add("hurt"+n,i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][8][0],a[t][8][1],".png",3),this.sprite.animations.add("die"+n,i,10,!1),i=this.controller.levelView.generateReverseFrames(o,a[t][9][0],a[t][9][1],".png",3),this.sprite.animations.add("eat"+n,i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=this.controller.levelView.generateReverseFrames(o,a[t][10][0],a[t][10][1],".png",3),this.sprite.animations.add("bump"+n,i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))})}a=[[[684,693],[652,654],[660,663],[708,711],[702,707],[714,725],[726,737],[738,749],[750,755],[666,675],[912,919]],[[576,585],[544,546],[552,555],[600,603],[594,599],[606,617],[618,629],[630,641],[642,647],[558,567],[904,911]],[[468,477],[436,438],[444,447],[492,495],[486,491],[498,509],[510,521],[522,533],[534,539],[450,459],[896,903]],[[792,801],[760,762],[768,771],[816,819],[810,815],[822,833],[834,845],[846,857],[858,863],[774,783],[920,927]]],s=["ShadowSheep_2016649.png","ShadowSheep_2016541.png","ShadowSheep_2016433.png","ShadowSheep_2016757.png"];for(let t=0;t<4;t++){var l=this.controller.levelView.getDirectionName(t);i=Phaser.Animation.generateFrameNames(o,a[t][0][0],a[t][0][1],".png",3);for(let e=0;e<8;e++)i.push(s[t]);this.sprite.animations.add("naked_idle"+l,i,10,!1).onComplete.add(()=>{this.playRandomIdle(this.facing)}),i=Phaser.Animation.generateFrameNames(o,a[t][1][0],a[t][1][1],".png",3),this.sprite.animations.add("naked_lookLeft"+l,i,10,!1).onComplete.add(()=>{this.sprite.animations.stop(),setTimeout(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"naked_lookLeft"+this.controller.levelView.getDirectionName(this.facing)+"_2")},e(.2,1))}),i=Phaser.Animation.generateFrameNames(o,a[t][1][1],a[t][1][0],".png",3),this.sprite.animations.add("naked_lookLeft"+l+"_2",i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"naked_idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][2][0],a[t][2][1],".png",3),this.sprite.animations.add("naked_lookRight"+l,i,10,!1).onComplete.add(()=>{this.sprite.animations.stop(),setTimeout(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"naked_lookRight"+this.controller.levelView.getDirectionName(this.facing)+"_2")},e(.2,1))}),i=Phaser.Animation.generateFrameNames(o,a[t][2][1],a[t][2][0],".png",3),this.sprite.animations.add("naked_lookRight"+l+"_2",i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"naked_idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][3][0],a[t][3][1],".png",3),this.sprite.animations.add("naked_lookAtCam"+l,i,10,!1).onComplete.add(()=>{this.sprite.animations.stop(),setTimeout(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"naked_lookAtCam"+this.controller.levelView.getDirectionName(this.facing)+"_2")},e(.2,1))}),i=Phaser.Animation.generateFrameNames(o,a[t][3][1],a[t][3][0],".png",3),this.sprite.animations.add("naked_lookAtCam"+l+"_2",i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"naked_idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][4][0],a[t][4][1],".png",3),this.sprite.animations.add("naked_lookDown"+l,i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"naked_idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][5][0],a[t][5][1],".png",3),this.sprite.animations.add("naked_walk"+l,i,10,!0),i=Phaser.Animation.generateFrameNames(o,a[t][6][0],a[t][6][1],".png",3),this.sprite.animations.add("naked_attack"+l,i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"naked_idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][7][0],a[t][7][1],".png",3),this.sprite.animations.add("naked_hurt_"+l,i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"naked_idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][8][0],a[t][8][1],".png",3),this.sprite.animations.add("naked_die"+l,i,10,!1),i=this.controller.levelView.generateReverseFrames(o,a[t][9][0],a[t][9][1],".png",3),this.sprite.animations.add("naked_eat"+l,i,10,!1).onComplete.add(()=>{this.naked=!1,this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=this.controller.levelView.generateReverseFrames(o,a[t][10][0],a[t][10][1],".png",3),this.sprite.animations.add("naked_bump"+l,i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"naked_idle"+this.controller.levelView.getDirectionName(this.facing))})}this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing)),this.sprite.x=this.offset[0]+40*this.position.x,this.sprite.y=this.offset[1]+40*this.position.y}playRandomIdle(e){var t=this.getNakedSuffix(),e=this.controller.levelView.getDirectionName(e);switch(Math.trunc(6*Math.random())+1){case 1:t+="idle";break;case 2:t+="lookLeft";break;case 3:t+="lookRight";break;case 4:t+="lookAtCam";break;case 5:t+="lookDown";break;case 6:t+="eat"}this.controller.levelView.playScaledSpeed(this.sprite.animations,t+=e),this.controller.printErrorMsg(this.type+" calls animation : "+t+"\n")}attack(e){let i=this.controller.levelView.getDirectionName(this.facing);this.controller.levelView.onAnimationEnd(this.controller.levelView.playScaledSpeed(this.sprite.animations,this.getNakedSuffix()+"attack"+i),()=>{let t=this.controller.levelEntity.getEntityAt(this.controller.levelModel.getMoveForwardPosition(this));null!==t&&this.controller.levelView.onAnimationEnd(this.controller.levelView.playScaledSpeed(t.getAnimationManager(),this.getNakedSuffix()+"hurt"+i),()=>{this.controller.events.forEach(e=>e({eventType:EventType.WhenAttacked,targetType:this.type,eventSenderIdentifier:this.identifier,targetIdentifier:t.identifier}))}),e.succeeded()})}updateAnimationDirection(){var e=this.controller.levelView.getDirectionName(this.facing);this.controller.levelView.playScaledSpeed(this.sprite.animations,this.getNakedSuffix()+"idle"+e)}drop(e,t){return!this.naked&&(e&&super.drop(e,t),"wool"===t&&(this.naked=!0,this.controller.levelView&&(t=this.controller.levelView.getDirectionName(this.facing),this.controller.levelView.playScaledSpeed(this.sprite.animations,"naked_idle"+t,()=>{}))),!0)}takeDamage(e){let t=this.controller.levelView;var i=t.getDirectionName(this.facing);1<this.healthPoint?(t.playScaledSpeed(this.sprite.animations,this.getNakedSuffix()+"hurt"+i),setTimeout(()=>{this.healthPoint--,e.succeeded()},1500)):(this.healthPoint--,this.sprite.animations.stop(null,!0),this.controller.levelView.playScaledSpeed(this.sprite.animations,this.getNakedSuffix()+"die"+i),setTimeout(()=>{var e=this.controller.levelView.addResettableTween(this.sprite).to({alpha:0},500,Phaser.Easing.Linear.None);e.onComplete.add(()=>{this.controller.levelEntity.destroyEntity(this.identifier)}),e.start()},1500))}getNakedSuffix(){return this.naked?"naked_":""}}class Squid extends BaseEntity{constructor(e,t,i,o,s,a){super(e,t,i,o,s,a),this.prepareSprite(),this.sprite.sortOrder=this.controller.levelView.yToIndex(this.position.y)}getOffsetForDirection(){switch(this.facing){case FacingDirection.North:return[0,0];case FacingDirection.South:return[0,-24];case FacingDirection.East:return[-32,-8];case FacingDirection.West:return[-12,-8]}}getFrameForDirection(){switch(this.facing){case FacingDirection.North:return"Squid32";case FacingDirection.South:return"Squid00";case FacingDirection.East:return"Squid48";case FacingDirection.West:return"Squid17"}}prepareSprite(){this.offset=this.getOffsetForDirection();var e=this.getFrameForDirection();const t=this.controller.levelView.actionGroup;this.sprite=t.create(0,0,"squid",e+".png"),this.sprite.scale.setTo(.75,.75);var i=[[32,39],[40,47],[0,7],[17,23]];for(let t=0;t<4;t++){let e=this.controller.levelView.getDirectionName(t);var o=Phaser.Animation.generateFrameNames("Squid",i[t][0],i[t][1],".png",2);this.sprite.animations.add("idle"+e,o,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+e,.25)})}e=this.controller.levelView.getDirectionName(this.facing);this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+e,.25),this.sprite.x=this.offset[0]+40*this.position.x,this.sprite.y=this.offset[1]+40*this.position.y}canMoveThrough(){return this.controller.levelEntity.destroyEntity(this.identifier),!0}}class TropicalFish extends BaseEntity{constructor(e,t,i,o,s,a){super(e,t,i,o,s,a),this.offset=[0,16],this.prepareSprite(),this.sprite.sortOrder=this.controller.levelView.yToIndex(this.position.y)}getFrameForDirection(){if(!this.controller.levelModel.isUnderwater())return this.facing!==FacingDirection.East?"Tropical_Fish_Surface07":"Tropical_Fish_Surface00";switch(this.facing){case FacingDirection.North:return"Tropical_Fish00";case FacingDirection.South:return"Tropical_Fish10";case FacingDirection.East:return"Tropical_Fish15";case FacingDirection.West:return"Tropical_Fish05"}}prepareSprite(){var e=this.getFrameForDirection();const t=this.controller.levelView.actionGroup;this.sprite=t.create(0,0,"tropicalFish",e+".png");var i=this.controller.levelModel.isUnderwater()?"Tropical_Fish":"Tropical_Fish_Surface";let o=[[7,13],[0,6],[7,13],[7,13]];this.controller.levelModel.isUnderwater()&&(o=[[0,3],[15,18],[10,13],[5,8]]);for(let t=0;t<4;t++){let e=this.controller.levelView.getDirectionName(t);var s=Phaser.Animation.generateFrameNames(i,o[t][0],o[t][1],".png",2);this.sprite.animations.add("idle"+e,s,12,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+e,.5)})}e=this.controller.levelView.getDirectionName(this.facing);this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+e,.5),this.sprite.x=this.offset[0]+40*this.position.x,this.sprite.y=this.offset[1]+40*this.position.y}canMoveThrough(){return this.controller.levelEntity.destroyEntity(this.identifier),!0}}class Zombie extends BaseEntity{constructor(e,t,i,o,s,a){super(e,t,i,o,s,a),this.offset=[-43,-45],this.burningSprite=[null,null],this.burningSpriteGhost=[null,null],this.burningSpriteOffset=[47,40],this.prepareSprite()}tick(){super.tick()}reset(){for(let e=0;e<2;e++)this.burningSprite[e]&&this.burningSprite[e].destroy()}playMoveForwardAnimation(i,e,t,o){super.playMoveForwardAnimation(i,e,t,o),this.burningSprite[0].sortOrder=this.sprite.sortOrder+1,this.burningSprite[1].sortOrder=this.sprite.sortOrder-1,setTimeout(()=>{for(let e=0;e<2;e++){const t=this.controller.levelView.addResettableTween(this.burningSprite[e]).to({x:this.offset[0]+this.burningSpriteOffset[0]+40*i[0],y:this.offset[1]+this.burningSpriteOffset[1]+40*i[1]},300,Phaser.Easing.Linear.None);t.onComplete.add(()=>{}),t.start()}},50/this.controller.tweenTimeScale)}setBurn(e){if(e)for(let e=0;e<2;e++)this.burningSprite[e].alpha=1;else for(let e=0;e<2;e++)this.burningSprite[e].alpha=0}prepareSprite(){function e(e,t){return 1e3*(Math.random()*(t-e)+e)}let t=this.controller.levelView.actionGroup;var i=[],o="Zombie_";this.sprite=t.create(0,0,"zombie","Zombie_001.png"),this.sprite.sortOrder=this.controller.levelView.yToIndex(this.position.y),this.sprite.x=this.offset[0]+40*this.position.x,this.sprite.y=this.offset[1]+40*this.position.y,this.burningSprite=[t.create(this.sprite.x+this.burningSpriteOffset[0],this.sprite.y+this.burningSpriteOffset[1],"burningInSun","BurningFront_001.png"),t.create(this.sprite.x+this.burningSpriteOffset[0],this.sprite.y+this.burningSpriteOffset[1],"burningInSun","BurningBehind_001.png")],i=Phaser.Animation.generateFrameNames("BurningFront_",1,15,".png",3),this.burningSprite[0].animations.add("burn",i,10,!0),i=Phaser.Animation.generateFrameNames("BurningBehind_",1,15,".png",3),this.burningSprite[1].animations.add("burn",i,10,!0),this.controller.levelView.playScaledSpeed(this.burningSprite[0].animations,"burn"),this.controller.levelView.playScaledSpeed(this.burningSprite[1].animations,"burn"),this.burningSprite[0].sortOrder=this.sprite.sortOrder+1,this.burningSprite[1].sortOrder=this.sprite.sortOrder-1;var s=["Zombie_056.png","Zombie_166.png","Zombie_001.png","Zombie_111.png"],a=[[[73,79],[57,59],[61,63],[69,71],[65,67],[80,88],[89,91],[93,101],[102,110],[229,236]],[[183,189],[167,169],[171,173],[179,181],[175,177],[190,198],[199,201],[203,211],[212,220],[245,252]],[[18,24],[2,4],[6,8],[14,16],[10,12],[25,33],[34,36],[38,46],[47,55],[221,228]],[[128,134],[112,114],[116,118],[124,126],[120,122],[135,143],[144,146],[148,156],[158,165],[237,244]]];for(let t=0;t<4;t++){var n=this.controller.levelView.getDirectionName(t),i=Phaser.Animation.generateFrameNames(o,a[t][0][0],a[t][0][1],".png",3);for(let e=0;e<8;e++)i.push(s[t]);this.sprite.animations.add("idle"+n,i,10,!1).onComplete.add(()=>{this.playRandomIdle(this.facing)}),i=Phaser.Animation.generateFrameNames(o,a[t][1][0],a[t][1][1],".png",3),this.sprite.animations.add("lookLeft"+n,i,10,!1).onComplete.add(()=>{this.sprite.animations.stop(),setTimeout(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"lookLeft"+this.controller.levelView.getDirectionName(this.facing)+"_2")},e(.2,1))}),i=Phaser.Animation.generateFrameNames(o,a[t][1][1],a[t][1][0],".png",3),this.sprite.animations.add("lookLeft"+n+"_2",i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][2][0],a[t][2][1],".png",3),this.sprite.animations.add("lookRight"+n,i,10,!1).onComplete.add(()=>{this.sprite.animations.stop(),setTimeout(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"lookRight"+this.controller.levelView.getDirectionName(this.facing)+"_2")},e(.2,1))}),i=Phaser.Animation.generateFrameNames(o,a[t][2][1],a[t][2][0],".png",3),this.sprite.animations.add("lookRight"+n+"_2",i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][3][0],a[t][3][1],".png",3),this.sprite.animations.add("lookAtCam"+n,i,10,!1).onComplete.add(()=>{this.sprite.animations.stop(),setTimeout(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"lookAtCam"+this.controller.levelView.getDirectionName(this.facing)+"_2")},e(.2,1))}),i=Phaser.Animation.generateFrameNames(o,a[t][3][1],a[t][3][0],".png",3),this.sprite.animations.add("lookAtCam"+n+"_2",i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][4][0],a[t][4][1],".png",3),this.sprite.animations.add("lookDown"+n,i,10/3,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][5][0],a[t][5][1],".png",3),this.sprite.animations.add("walk"+n,i,10,!0),i=Phaser.Animation.generateFrameNames(o,a[t][6][0],a[t][6][1],".png",3),this.sprite.animations.add("attack"+n,i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][7][0],a[t][7][1],".png",3),this.sprite.animations.add("hurt"+n,i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))}),i=Phaser.Animation.generateFrameNames(o,a[t][8][0],a[t][8][1],".png",3),this.sprite.animations.add("die"+n,i,10,!1),i=this.controller.levelView.generateReverseFrames(o,a[t][9][0],a[t][9][1],".png",3),this.sprite.animations.add("bump"+n,i,10,!1).onComplete.add(()=>{this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing))})}this.controller.levelView.playScaledSpeed(this.sprite.animations,"idle"+this.controller.levelView.getDirectionName(this.facing)),this.setBurn(this.controller.levelModel.isDaytime)}takeDamage(e){let t=this.controller.levelView;var i=t.getDirectionName(this.facing);1<this.healthPoint?(t.playScaledSpeed(this.sprite.animations,"hurt"+i),setTimeout(()=>{this.healthPoint--,e.succeeded()},1500/this.controller.tweenTimeScale)):(this.healthPoint--,this.controller.levelView.playScaledSpeed(this.sprite.animations,"die"+i),setTimeout(()=>{var t=this.controller.levelView.addResettableTween(this.sprite).to({alpha:0},500,Phaser.Easing.Linear.None);t.onComplete.add(()=>{this.controller.levelEntity.destroyEntity(this.identifier)}),t.start();for(let e=0;e<2;e++)(t=this.controller.levelView.addResettableTween(this.burningSprite[e]).to({alpha:0},500,Phaser.Easing.Linear.None)).start()},1500/this.controller.tweenTimeScale))}}class BaseCommand{constructor(e,t,i,o){this.GameController=e,this.Game=e.game,this.HighlightCallback=t,this.state=CommandState.NOT_STARTED,this.target=i,this.onFinish=o,this.repeat=!1}tick(){}begin(){this.HighlightCallback&&this.HighlightCallback(this.target),this.state=CommandState.WORKING}isStarted(){return this.state!==CommandState.NOT_STARTED}isFinished(){return this.isSucceeded()||this.isFailed()}isSucceeded(){return this.state===CommandState.SUCCESS}isFailed(){return this.state===CommandState.FAILURE}succeeded(){this.state=CommandState.SUCCESS}failed(){this.state=CommandState.FAILURE}}class CallbackCommand extends BaseCommand{constructor(e,t,i,o,s){super(e,t,o,s),this.actionCallback=i}tick(){}begin(){super.begin(),this.actionCallback()}}class CommandQueue{constructor(e){this.gameController=e,this.game=e.game,this.reset(),this.repeatCommands=[],this.setUnshiftState=!1,this.highPriorityCommands=[]}addCommand(e,t=!1){e.repeat=t,this.whileCommandQueue?this.whileCommandQueue.addCommand(e):(this.setUnshiftState?this.highPriorityCommands:this.commandList_).push(e)}setWhileCommandInsertState(e){this.whileCommandQueue=e}begin(){this.state=CommandState.WORKING}reset(){this.state=CommandState.NOT_STARTED,this.currentCommand=null,this.commandList_=[],this.highPriorityCommands=[],this.whileCommandQueue&&this.whileCommandQueue.reset(),this.repeatCommands=[],this.whileCommandQueue=null}startPushHighPriorityCommands(){this.setUnshiftState=!0,this.highPriorityCommands=[]}endPushHighPriorityCommands(){for(let e=this.highPriorityCommands.length-1;0<=e;e--)this.commandList_.unshift(this.highPriorityCommands[e]);this.setUnshiftState=!1}tick(){if(this.state===CommandState.WORKING){if(!this.currentCommand){if(0===this.commandList_.length){0===this.repeatCommands.length&&(this.state=CommandState.SUCCESS),this.gameController.startPushRepeatCommand();for(let e=0;e<this.repeatCommands.length;e++)0<this.repeatCommands[e][1]?(this.repeatCommands[e][0](),this.repeatCommands[e][1]--):-1===this.repeatCommands[e][1]?this.repeatCommands[e][0]():this.repeatCommands.splice(e,1);return void this.gameController.endPushRepeatCommand()}this.currentCommand=this.commandList_.shift()}this.currentCommand.isStarted()?this.currentCommand.tick():this.currentCommand.begin(),this.currentCommand.isSucceeded()?(this.currentCommand.onFinish&&this.currentCommand.onFinish(),this.currentCommand=null):this.currentCommand.isFailed()&&(this.state=CommandState.FAILURE)}}getLength(){return this.commandList_?this.commandList_.length:0}isStarted(){return this.state!==CommandState.NOT_STARTED}isFinished(){return this.isSucceeded()||this.isFailed()}isSucceeded(){return this.state===CommandState.SUCCESS}isFailed(){return this.state===CommandState.FAILURE}addRepeatCommands(e,t){if(-1===t)for(let e=0;e<this.repeatCommands.length;e++)if(-1===this.repeatCommands[e][1]){this.repeatCommands.splice(e,1);break}this.repeatCommands.push([e,t]),this.begin()}}const CommandState=Object.freeze({NOT_STARTED:0,WORKING:1,SUCCESS:2,FAILURE:3});class DestroyBlockCommand extends BaseCommand{constructor(e,t,i){super(e,t,i)}tick(){}begin(){super.begin(),this.GameController.destroyBlock(this)}}class IfBlockAheadCommand extends BaseCommand{constructor(e,t,i,o,s){super(e,t,o),this.blockType=i,this.ifCodeCallback=s,this.queue=new CommandQueue(e)}tick(){this.state===CommandState.WORKING&&this.queue.tick(),this.queue.isFailed()&&(this.state=CommandState.FAILURE),this.queue.isSucceeded()&&(this.state=CommandState.SUCCESS)}begin(){super.begin(),this.GameController.DEBUG&&console.log("WHILE command: BEGIN"),this.handleIfCheck()}handleIfCheck(){if(this.GameController.isPathAhead(this.blockType)){const e=this.GameController.getEntity(this.target).queue;this.queue.reset(),e.setWhileCommandInsertState(this.queue),this.ifCodeCallback(),e.setWhileCommandInsertState(null),this.queue.begin()}else this.state=CommandState.SUCCESS}}class MoveBackwardCommand extends BaseCommand{constructor(e,t,i){super(e,t,i)}tick(){}begin(){super.begin(),this.GameController.moveBackward(this)}}class MoveDirectionCommand extends BaseCommand{constructor(e,t,i,o){super(e,t,i),this.Direciton=o}tick(){}begin(){super.begin(),this.GameController.moveDirection(this,this.Direciton)}}class MoveForwardCommand extends BaseCommand{constructor(e,t,i,o){super(e,t,i,o)}tick(){}begin(){super.begin(),this.GameController.moveForward(this)}}class PlaceBlockCommand extends BaseCommand{constructor(e,t,i,o){super(e,t,o),this.BlockType=i}tick(){}begin(){super.begin(),this.GameController.placeBlock(this,this.BlockType)}}class PlaceDirectionCommand extends BaseCommand{constructor(e,t,i,o,s){super(e,t,o),this.BlockType=i,this.Direction=s}tick(){}begin(){super.begin(),this.GameController.placeBlockDirection(this,this.BlockType,this.Direction)}}class PlaceInFrontCommand extends BaseCommand{constructor(e,t,i,o){super(e,t,o),this.BlockType=i}tick(){}begin(){super.begin(),this.GameController.placeBlockForward(this,this.BlockType)}}class RepeatCommand extends BaseCommand{constructor(e,t,i,o,s){super(e,t,s),this.actionCallback=i,this.iteration=o}tick(){}begin(){super.begin(),this.succeeded(),this.addRepeatCommand()}addRepeatCommand(){var e=this.GameController.levelEntity.entityMap.get(this.target);(void 0===e?this.GameController:e).queue.addRepeatCommands(this.actionCallback,this.iteration)}}class TurnCommand extends BaseCommand{constructor(e,t,i,o){super(e,t,o),this.Direction=i}tick(){}begin(){super.begin(),this.GameController.DEBUG&&console.log(`TURN command: BEGIN turning ${this.Direction}  `),this.GameController.turn(this,this.Direction)}}class AStarPathFinding{constructor(e){this.levelModel=e,this.grid=this.createGrid()}createGrid(){return this.levelModel.actionPlane.getAllPositions().map(e=>({position:e,cost:1,f:0,g:0,h:0,visited:!1,closed:!1,parent:null}))}reset(){for(let t=0;t<this.grid.length;t++){let e=this.grid[t];e.f=0,e.g=0,e.h=0,e.visited=!1,e.closed=!1,e.parent=null}}getNode(e){var t=this.levelModel.coordinatesToIndex(e);return this.levelModel.inBounds(e)&&this.levelModel.actionPlane.getBlockAt(e).isEmpty&&!this.grid[t].closed?this.grid[t]:null}getNeighbors(e){let t=[];var i=this.getNode(Position.west(e.position)),o=this.getNode(Position.east(e.position)),s=this.getNode(Position.south(e.position)),e=this.getNode(Position.north(e.position));return i&&t.push(i),o&&t.push(o),s&&t.push(s),e&&t.push(e),t}findPath(e,t){this.reset();var e=this.levelModel.coordinatesToIndex(e.position),t=this.levelModel.coordinatesToIndex(t.position),s=this.grid[t];let a=[];for(a.push(this.grid[e]);0<a.length;){let t=0;for(let e=0;e<a.length;e++)a[e].f<a[t].f&&(t=e);let o=a[t];if(o===s){let e=o,t=[];for(;e.parent;)t.push(e),e=e.parent;return t.reverse()}a.splice(t,1),o.closed=!0;var n=this.getNeighbors(o);for(let i=0;i<n.length;i++){let e=n[i];var l=o.g+e.cost;let t=!1;e.visited?l<e.g&&(t=!0):(t=!0,e.visited=!0,e.h=Position.manhattanDistance(e.position,s.position),a.push(e)),t&&(e.parent=o,e.g=l,e.f=e.g+e.h)}}return[]}}class LevelBlock{constructor(e){this.blockType=e,this.isEntity=!1,this.isWalkable=!1,this.isPlacable=!1,this.isDestroyable=!0,this.isUsable=!0,this.isEmpty=!1,this.isEmissive=!1,this.isTransparent=!1,this.isRedstone=!1,this.isPowered=!1,this.isConnectedToRedstone=!1,this.isRedstoneBattery=!1,this.isOpen=!1,this.isRail=!1,this.isSolid=!0,this.isWeaklyPowerable=!0,this.isStickable=!0,this.isActivatedConduit=!1,""===e&&(this.isWalkable=!0,this.isDestroyable=!1,this.isEmpty=!0,this.isPlacable=!0,this.isUsable=!1,this.isWeaklyPowerable=!1),this.getIsMiniblock()&&(this.isEntity=!0,this.isWalkable=!0,this.isDestroyable=!1,this.isPlacable=!0,this.isUsable=!1,this.isTransparent=!0),e.match("torch")&&(this.isWalkable=!0,this.isPlacable=!0,this.isStickable=!1),"rails"===e.substring(0,5)&&(this.isWeaklyPowerable="railsRedstoneTorch"!==e,this.isStickable="railsRedstoneTorch"!==e,this.isEntity=!0,this.isWalkable=!0,this.isUsable=!0,this.isDestroyable=!0,this.isTransparent=!0,this.isRail="railsRedstoneTorch"!==e,this.isConnectedToRedstone=/^rails(RedstoneTorch|Unpowered|Powered)/.test(e),this.isRedstoneBattery="railsRedstoneTorch"===e,this.connectionA=void 0,this.connectionB=void 0),"sheep"===e&&(this.isEntity=!0,this.isDestroyable=!1,this.isUsable=!0),"invisible"===e&&(this.isDestroyable=!1,this.isUsable=!1,this.isWeaklyPowerable=!1,this.isEmissive=!0),e.startsWith("glass")&&(this.isSolid=!1),e.startsWith("ice")&&(this.isSolid=!1),"creeper"===e&&(this.isEntity=!0),"bedrock"===e&&(this.isDestroyable=!1),"lava"===e&&(this.isEmissive=!0,this.isWalkable=!0,this.isPlacable=!0),"magmaUnderwater"!==e&&"magmaDeep"!==e||(this.isEmissive=!0),"bubbleColumn"===e&&(this.isSolid=!1,this.isTransparent=!0,this.isEntity=!0),"conduit"===e&&(this.isSolid=!1,this.isEntity=!0),"water"===e&&(this.isPlacable=!0),"torch"===e&&(this.isEmissive=!0,this.isEntity=!0,this.isWalkable=!0,this.isUsable=!0,this.isDestroyable=!1,this.isTransparent=!0),"cropWheat"===e&&(this.isEntity=!0,this.isWalkable=!0,this.isUsable=!0,this.isDestroyable=!1,this.isTransparent=!0),"tnt"===e&&(this.isUsable=!0,this.isDestroyable=!0),"door"===e&&(this.isWeaklyPowerable=!1,this.isSolid=!1,this.isEntity=!0,this.isWalkable=!1,this.isUsable=!0,this.isDestroyable=!1,this.isTransparent=!0,this.isStickable=!1),"doorIron"===e&&(this.isWeaklyPowerable=!1,this.isSolid=!1,this.isEntity=!0,this.isWalkable=!1,this.isDestroyable=!1,this.isTransparent=!0,this.isConnectedToRedstone=!0,this.isStickable=!1),e.startsWith("redstoneWire")&&(this.isEntity=!0,this.isWalkable=!0,this.isUsable=!0,this.isDestroyable=!0,this.isTransparent=!0,this.isRedstone=!0,this.isStickable=!1),e.startsWith("pressurePlate")&&(this.isWeaklyPowerable="pressurePlateUp"!==e,this.isEntity=!0,this.isWalkable=!0,this.isDestroyable=!1,this.isTransparent=!0,this.isConnectedToRedstone=!0,this.isRedstoneBattery="pressurePlateUp"!==e,this.isStickable=!1),"glowstone"===e&&(this.isEntity=!0),"bedFoot"!==e&&"bedHead"!==e||(this.isEntity=!0),e.startsWith("piston")&&(this.isWeaklyPowerable=!1,this.isSolid=!1,this.isDestroyable=!1,this.isConnectedToRedstone=!e.startsWith("pistonArm"),"On"!==e.substring(e.length-2,e.length)&&!e.startsWith("pistonArm")&&"OnSticky"!==e.substring(e.length-8,e.length)||(this.isEntity=!0)),(e.startsWith("flower")||/coral/i.test(e)&&!/Block/.test(e)||"seaGrass"===e||"kelp"===e||"seaPickles"===e)&&(this.isWalkable=!0,this.isEntity=!0),"seaPickles"!==e&&"seaLantern"!==e&&"magmaBlock"!==e||(this.isEmissive=!0)}isFlat(){return this.isRail||this.isRedstone||this.blockType.startsWith("pressurePlate")}notValidOnGroundPlane(){return this.blockType.startsWith("rails")||this.blockType.startsWith("redstone")}skipsDestructionOverlay(){return this.isRedstone||"torch"===this.blockType||"railsRedstoneTorch"===this.blockType}shouldRenderOnGroundPlane(){return this.isFlat()}getIsPowerableRail(){return this.isRail&&this.isConnectedToRedstone}getIsHorizontal(){return this.blockType.match("East|West")}getIsVertical(){return this.blockType.match("North|South")}getIsStickyPiston(){return"Sticky"===this.blockType.substring(this.blockType.length-6,this.blockType.length)}canHoldCharge(){return this.isSolid}getIsMiniblock(){return LevelBlock.isMiniblock(this.blockType)}getIsChestblock(){return LevelBlock.isChestblock(this.blockType)}getIsTree(){return!!this.blockType.match(/^tree/)}getIsDoor(){return this.blockType.startsWith("door")}getIsConduit(){return this.blockType.startsWith("conduit")}getIsLiquid(){return"water"===this.blockType||"magmaUnderwater"===this.blockType||"lava"===this.blockType}getCanFall(){return"sand"===this.blockType||"gravel"===this.blockType}getIsPlaceableInLiquid(){return!(this.isRedstone||this.getIsPiston()||this.isRail||"torch"===this.blockType||"railsRedstoneTorch"===this.blockType||"pressurePlateUp"===this.blockType)}getIsPiston(){return this.blockType.startsWith("piston")}getIsPistonArm(){return this.blockType.startsWith("pistonArm")}getIsPushable(){return""!==this.blockType&&!this.isDestroyableUponPush()}isDestroyableUponPush(){return this.blockType.startsWith("redstone")||this.blockType.startsWith("door")||this.blockType.startsWith("railsRedstone")||this.blockType.startsWith("pressure")}needToRefreshRedstone(){return this.isRedstone||""===this.blockType||this.isConnectedToRedstone&&!this.blockType.startsWith("piston")}getPistonDirection(){if(this.blockType.startsWith("piston"))switch(this.blockType.substring(6,7)){case"D":return South;case"U":return North;case"L":return West;case"R":return East}}getIsEmptyOrEntity(){return this.isEmpty||this.isEntity}static getCanFall(e){return new LevelBlock(e).getCanFall()}static getIsPlaceableInLiquid(e){return new LevelBlock(e).getIsPlaceableInLiquid()}static isWalkable(e){return new LevelBlock(e).isWalkable}static isMiniblock(e){return e.endsWith("Miniblock")}static isChestblock(e){return e.endsWith("Chest")}static isFlat(e){return new LevelBlock(e).isFlat()}static skipsDestructionOverlay(e){return new LevelBlock(e).skipsDestructionOverlay()}static notValidOnGroundPlane(e){return new LevelBlock(e).notValidOnGroundPlane()}static getMiniblockFrame(t){if("railsRedstoneTorch"===t)return"redstoneTorch";if(t.startsWith("rails"))return"railNormal";if(t.endsWith("Chest"))return"chest";if(!t.startsWith("glass")&&!t.startsWith("ice")){if("redstoneWire"===t.substring(0,12))return"redstoneDust";if(LevelBlock.isMiniblock(t))return t.replace("Miniblock","");let e=t;switch(e){case"treeAcacia":case"treeBirch":case"treeJungle":case"treeOak":case"treeSpruce":case"treeSpruceSnowy":e="log"+e.substring(4);break;case"stone":e="cobblestone";break;case"oreCoal":e="coal";break;case"oreDiamond":e="diamond";break;case"oreIron":e="ingotIron";break;case"oreLapis":e="lapisLazuli";break;case"oreGold":e="ingotGold";break;case"oreEmerald":e="emerald";break;case"oreRedstone":e="redstoneDust";break;case"grass":e="dirt";break;case"tnt":e="gunPowder"}return e}}}class LevelEntity{constructor(e){this.controller=e,this.game=e.game,this.entityMap=new Map,this.entityDeathCount=new Map,this.sprite=null,this.id=0}loadData(i){if(void 0!==i.entities)for(let t=0;t<i.entities.length;t++){var o=i.entities[t];let e=this.createEntity(o[0],this.id++,o[1],o[2],o[3],o[4]);e.updateHidingTree(),e.updateHidingBlock()}}tick(){this.entityMap.forEach(function(e){e.tick()})}pushEntity(e){this.entityMap.has(e.identifier)?this.controller.DEBUG&&this.game.debug.text("Duplicate entity name : "+e.identifier+"\n"):this.entityMap.set(e.identifier,e)}isFriendlyEntity(t){var i=["sheep","ironGolem","cow","chicken","cod","dolphin","salmon","seaTurtle","seaTurtle","squid","tropicalFish"];for(let e=0;e<i.length;e++)if(t===i[e])return!0;return!1}createEntity(e,t,i,o,s,a){var n=null;if(this.entityMap.has(t))this.controller.DEBUG&&this.game.debug.text("Duplicate entity name : "+t+"\n");else{switch(e){case"sheep":n=new Sheep(this.controller,e,t,i,o,s);break;case"zombie":n=new Zombie(this.controller,e,t,i,o,s);break;case"ironGolem":n=new IronGolem(this.controller,e,t,i,o,s);break;case"creeper":n=new Creeper(this.controller,e,t,i,o,s);break;case"cow":n=new Cow(this.controller,e,t,i,o,s);break;case"chicken":n=new Chicken(this.controller,e,t,i,o,s);break;case"cod":n=new Cod(this.controller,e,t,i,o,s);break;case"dolphin":n=new Dolphin(this.controller,e,t,i,o,s);break;case"ghast":n=new Ghast(this.controller,e,t,i,o,s,a);break;case"boat":n=new Boat(this.controller,e,t,i,o,s);break;case"salmon":n=new Salmon(this.controller,e,t,i,o,s);break;case"seaTurtle":n=new SeaTurtle(this.controller,e,t,i,o,s);break;case"squid":n=new Squid(this.controller,e,t,i,o,s);break;case"tropicalFish":n=new TropicalFish(this.controller,e,t,i,o,s);break;default:n=new BaseEntity(this.controller,e,t,i,o,s)}this.controller.DEBUG&&console.log("Create Entity type : "+e+" "+i+","+o),this.entityMap.set(t,n)}return n}isSpawnableInBetween(e,i,o,s){for(let t=e;t<=o;t++)for(let e=i;e<=s;e++)if(this.controller.levelModel.isPositionEmpty(new Position(t,e))[0])return!0;return!1}spawnEntity(t,e){let i=this.controller.levelModel;var o=i.planeWidth,s=i.planeHeight,a=Math.floor(.85*o),n=Math.floor(.85*s),l=Math.floor(.15*o),r=Math.floor(.15*s);let h=null;if("random"===e||!isBaseObject(e)||isNaN(e.x)||isNaN(e.y)){if(this.isSpawnableInBetween(l,r,a,n)){for(h=new Position(getRandomInt(l,a),getRandomInt(r,n));!i.isPositionEmpty(h)[0];)h=new Position(getRandomInt(l,a),getRandomInt(r,n));return this.createEntity(t,this.id++,h.x,h.y,getRandomInt(0,3))}{if(!this.isSpawnableInBetween(1,1,o-2,s-2))return null;let e=new Position(getRandomInt(1,o-2),getRandomInt(1,s-2));for(;!i.isPositionEmpty(e)[0];)e=new Position(getRandomInt(1,o-2),getRandomInt(1,s-2));return this.createEntity(t,this.id++,e.x,e.y,getRandomInt(0,3))}}return isBaseObject(e)&&(isNaN(e.rot)&&(e.rot=getRandomInt(0,3)),h=new Position(e.x,e.y),i.isPositionEmpty(h)[0])?this.createEntity(t,this.id++,h.x,h.y,e.rot):null}spawnEntityAt(e,t){return this.createEntity(e,this.id++,t.x,t.y,t.rot)}destroyEntity(e){var t;this.entityMap.has(e)?(t=this.entityMap.get(e),this.entityDeathCount.has(t.type)?this.entityDeathCount.set(t.type,this.entityDeathCount.get(t.type)+1):this.entityDeathCount.set(t.type,1),t.reset(),t.getAnimationManager().stop(null,!0),t.sprite.destroy(),this.entityMap.delete(e)):this.controller.DEBUG&&this.game.debug.text("It's impossible to delete since entity name : "+e+" is not existing\n")}getEntityAt(e){for(var t of this.entityMap){t=t[1];if(Position.equals(e,t.position))return t}return null}getEntitiesOfType(t){if("all"===t){let e=[];for(var i of this.entityMap){i=i[1];"Player"!==i.type&&e.push(i)}return e}{let e=[];for(var o of this.entityMap){o=o[1];o.type===t&&e.push(o)}return e}}reset(){this.entityMap.clear(),this.entityDeathCount=new Map}}class LevelModel{constructor(e,t){this.planeWidth=e.gridDimensions?e.gridDimensions[0]:10,this.planeHeight=e.gridDimensions?e.gridDimensions[1]:10,this.controller=t,this.player={},this.agent={},this.usingAgent=!1,this.initialLevelData=Object.create(e),this.reset(),this.initialPlayerState=Object.create(this.player),this.initialAgentState=Object.create(this.agent)}isUnderwater(){return!!this.getOceanType()}getOceanType(){return this.initialLevelData.ocean}isInBoat(){return this.initialLevelData.boat}planeArea(){return this.planeWidth*this.planeHeight}inBounds(e){var t=e[0],e=e[1];return 0<=t&&t<this.planeWidth&&0<=e&&e<this.planeHeight}reset(){this.groundPlane=new LevelPlane(this.initialLevelData.groundPlane,this.planeWidth,this.planeHeight,this,"groundPlane"),this.groundDecorationPlane=new LevelPlane(this.initialLevelData.groundDecorationPlane,this.planeWidth,this.planeHeight,this,"decorationPlane"),this.shadingPlane=[],this.actionPlane=new LevelPlane(this.initialLevelData.actionPlane,this.planeWidth,this.planeHeight,this,"actionPlane"),this.actionPlane.powerRedstone(),this.actionPlane.getAllPositions().forEach(e=>{this.actionPlane.getBlockAt(e).isRedstone&&this.actionPlane.determineRedstoneSprite(e),this.actionPlane.getBlockAt(e).isRail&&this.actionPlane.determineRailType(e)}),this.fluffPlane=new LevelPlane(this.initialLevelData.fluffPlane,this.planeWidth,this.planeHeight),this.fowPlane=[],this.isDaytime=void 0===this.initialLevelData.isDaytime||this.initialLevelData.isDaytime;var e,t=Object.create(this.initialLevelData);void 0!==this.initialLevelData.usePlayer?this.usePlayer=this.initialLevelData.usePlayer:this.usePlayer=!0,this.usePlayer&&(e=Position.fromArray(t.playerStartPosition),this.player=new Player(this.controller,"Player",e.x,e.y,this.initialLevelData.playerName||"Steve",!this.actionPlane.getBlockAt(e).getIsEmptyOrEntity(),t.playerStartDirection),this.controller.levelEntity.pushEntity(this.player),this.controller.player=this.player,t.useAgent&&this.spawnAgent(t)),!t.useAgent&&this.usingAgent&&this.destroyAgent(),this.computeShadingPlane(),this.computeFowPlane()}spawnAgent(e,t,i){this.usingAgent=!0;t=void 0!==t?t:Position.fromArray(e.agentStartPosition),e=void 0!==i?i:e.agentStartDirection;const o=this.actionPlane.getBlockAt(t);this.agent=new Agent(this.controller,"PlayerAgent",t.x,t.y,"Agent",!o.getIsEmptyOrEntity(),e),this.controller.levelEntity.pushEntity(this.agent),this.controller.agent=this.agent}destroyAgent(){this.controller.agent=void 0,this.controller.levelEntity.destroyEntity(this.agent.identifier),this.agent=void 0,this.usingAgent=!1}yToIndex(e){return e*this.planeWidth}isSolved(){return this.initialLevelData.verificationFunction(this)}isFailed(){return void 0!==this.initialLevelData.failureCheckFunction&&this.initialLevelData.failureCheckFunction(this)}getHouseBottomRight(){return Position.fromArray(this.initialLevelData.houseBottomRight)}isPlayerNextTo(t){return!!this.usePlayer&&Position.getOrthogonalPositions(this.player.position).some(e=>this.inBounds(e)&&(this.isBlockOfType(e,t)||this.isEntityOfType(e,t)||this.groundPlane.getBlockAt(e).blockType===t))}isEntityNextTo(e,t){const i=this.controller.levelEntity.getEntitiesOfType(e);return i.some(e=>Position.getOrthogonalPositions(e.position).some(e=>this.inBounds(e)&&(this.isBlockOfType(e,t)||this.isEntityOfType(e,t)||this.groundPlane.getBlockAt(e).blockType===t)))}isEntityOnBlocktype(e,t,i=1){var o=this.controller.levelEntity.getEntitiesOfType(e),s=0;for(let e=0;e<o.length;e++){var a=o[e];!this.isBlockOfType(a.position,t)&&this.groundPlane.getBlockAt(a.position).blockType!==t||s++}return i<=s}isEntityAt(e,t){Array.isArray(t)&&(t=Position.fromArray(t));var i=this.controller.levelEntity.getEntitiesOfType(e);for(let e=0;e<i.length;e++){var o=i[e];if(Position.equals(o.position,t))return!0}return!1}isEntityTypeRunning(e){var t=this.controller.levelEntity.getEntitiesOfType(e);for(let e=0;e<t.length;e++){var i=t[e],o=!i.queue.isStarted(),s=!i.queue.isFinished();if(o&&0<i.queue.commandList_.length||s)return!0}return!1}isEntityDied(e,t=1){var i=this.controller.levelEntity.entityDeathCount;return!!(i.has(e)&&i.get(e)>=t)}getScore(){return this.controller.score}shouldRide(e){var t=this.player,t=this.getNextRailPosition(t,e),t=this.actionPlane.getBlockAt(t);return this.isNextRailValid(t,e)}isNextRailValid(e,t){if(e)return FacingDirection.opposite(e.connectionA)===t||FacingDirection.opposite(e.connectionB)===t||e.connectionA===t||e.connectionB===t}getNextRailPosition(e=this.player,t){t=Position.directionToOffsetPosition(t)||new Position(0,0);return Position.add(e.position,t)}getEntityCount(e){return this.controller.levelEntity.getEntitiesOfType(e).length}getCommandExecutedCount(e,t){return this.controller.getCommandCount(e,t,!1)}getRepeatCommandExecutedCount(e,t){return this.controller.getCommandCount(e,t,!0)}getTurnRandomCount(){return this.controller.turnRandomCount}getInventoryAmount(e){if(!this.usePlayer)return 0;if("all"!==e&&"All"!==e)return this.player.inventory[e];var t,i=this.player.inventory,o=0;for(t in i)o+=i[t];return o}getInventoryTypes(){return this.usePlayer?Object.keys(this.player.inventory):[]}countOfTypeOnMap(t){return this.actionPlane.getAllPositions().filter(e=>this.actionPlane.getBlockAt(e).blockType===t).length}isPlayerAt(e){return!!this.usePlayer&&(Array.isArray(e)&&(e=Position.fromArray(e)),Position.equals(this.player.position,e))}spritePositionToIndex(e,t){e=Position.subtract(t,e);return new Position(e.x/40,e.y/40)}solutionMapMatchesResultMap(t){for(let e=0;e<this.planeArea();e++){var i=t[e],o=this.actionPlane.indexToCoordinates(e);if(""!==i)if("empty"===i){if(!this.actionPlane.getBlockAt(o).isEmpty)return!1}else if("any"===i){if(this.actionPlane.getBlockAt(o).isEmpty)return!1}else if(this.actionPlane.getBlockAt(o).blockType!==i)return!1}return!0}getTnt(){return this.actionPlane.getAllPositions().filter(e=>{e=this.actionPlane.getBlockAt(e);return e&&"tnt"===e.blockType})}getMoveForwardPosition(e=this.player){return Position.forward(e.position,e.facing)}getMoveDirectionPosition(e,t){let i=e.facing;for(let e=0;e<t;++e)i=FacingDirection.turn(i,"right");return Position.forward(e.position,i)}isForwardBlockOfType(e){var t=this.getMoveForwardPosition(),i=this.isBlockOfTypeOnPlane(t,"empty",this.actionPlane);return!(""!==e||!i)||(i?this.isBlockOfTypeOnPlane(t,e,this.groundPlane):this.isBlockOfTypeOnPlane(t,e,this.actionPlane))}getForwardBlockType(){var e=this.getForwardBlock();return e?e.blockType:""}getForwardBlock(){var e=this.getMoveForwardPosition();return this.actionPlane.getBlockAt(e)}isBlockOfType(e,t){return this.isBlockOfTypeOnPlane(e,t,this.actionPlane)}isEntityOfType(t,e){const i=this.controller.levelEntity.getEntitiesOfType(e);return i.some(e=>Position.equals(t,e.position))}isBlockOfTypeOnPlane(e,t,i){var o=!1;return o=this.inBounds(e)?"empty"===t?i.getBlockAt(e).isEmpty:"tree"===t?i.getBlockAt(e).getIsTree():t===i.getBlockAt(e).blockType:o}isPlayerStandingInWater(){return"water"===this.groundPlane.getBlockAt(this.player.position).blockType}isPlayerStandingInLava(){return"lava"===this.groundPlane.getBlockAt(this.player.position).blockType}coordinatesToIndex(e){return this.yToIndex(e[1])+e[0]}checkPositionForTypeAndPush(e,t,i){return!e&&""!==this.actionPlane.getBlockAt(t).blockType||this.isBlockOfType(t,e)?(i.push([!0,t]),!0):(i.push([!1,null]),!1)}houseGroundToFloorHelper(e,t,i){var o,s,a,n,l=0,r=i;let h=this.yToIndex(e[2])+e[1];44===h&&(h=44),(o=[0,e[1],e[2]+1])[0]=this.yToIndex(o[2])+o[1],(s=[0,e[1],e[2]-1])[0]=this.yToIndex(s[2])+s[1],(a=[0,e[1]+1,e[2]])[0]=this.yToIndex(a[2])+a[1],n=[0,e[1]-1,e[2]],a[0]=this.yToIndex(a[2])+a[1],i=this.actionPlane.getBlockAt(this.actionPlane.indexToCoordinates(h));for(let e=0;e<r.length;++e)if(r[e][0]===h){l=-1;break}return""!==i.blockType||0<r.length&&-1===l?{}:(r.push(e),r.concat(this.houseGroundToFloorHelper(o,t,r)),r.concat(this.houseGroundToFloorHelper(s,t,r)),r.concat(this.houseGroundToFloorHelper(a,t,r)),r.concat(this.houseGroundToFloorHelper(n,t,r)),r)}houseGroundToFloorBlocks(e){e=[0,e[0],e[1]];return this.houseGroundToFloorHelper(e,"wool_orange",[])}getEntityAt(e){for(var t of this.controller.levelEntity.entityMap)if(Position.equals(t[1].position,e))return t[1]}getAllBorderingPositionNotOfType(e,t){var i=this.getAllBorderingPosition(e,null);for(let e=1;e<i.length;++e)i[e][0]&&this.actionPlane.getBlockAt(i[e][1]).blockType===t&&(i[e][0]=!1);return i}getAllBorderingPosition(e,t){var i=[!1];return Position.getSurroundingPositions(e).forEach(e=>{this.checkPositionForTypeAndPush(t,e,i)&&(i[0]=!0)}),i}canMoveForward(e=this.player){var t=this.getMoveForwardPosition(e);return!(!this.controller.followingPlayer()&&(9<t.x||9<t.y))&&this.isPositionEmpty(t,e)}canMoveBackward(e=this.player){var t=this.getMoveDirectionPosition(e,2);return this.isPositionEmpty(t,e)}isPositionEmpty(e,t=this.player){var i=[!1];if(this.inBounds(e)){if(this.actionPlane.getBlockAt(e).isWalkable||i.push("notWalkable"),!this.actionPlane.getBlockAt(e).isEmpty){if(this.player.isOnBlock)return[!0];i.push("notEmpty")}var o=this.groundPlane.getBlockAt(e).blockType;const s=this.getEntityAt(e);if(["water","lava"].includes(o))if(this.controller.getIsDirectPlayerControl())i.push(o);else if(void 0===s||s.canMoveThrough())return[!0];if("water"!==this.groundPlane.getBlockAt(e).blockType&&this.isInBoat())return i.push("notWater"),i;void 0!==s&&(i.push("frontEntity"),i.push(s));o=this.groundPlane.getBlockAt(e),e=this.actionPlane.getBlockAt(e);i[0]=t.hasPermissionToWalk(e,s,o)}else i.push("outBound");return i}canMoveDirection(e=this.player,t){var i=e.facing;this.turnToDirection(e,t);t=this.canMoveForward(e);return this.turnToDirection(e,i),t}canPlaceBlock(e,t){return e.canPlaceBlock(t)}canPlaceBlockDirection(e="",t,i){return!t.isOnBlock&&((this.getPlaneToPlaceOn(this.getMoveDirectionPosition(t,i),t,e)!==this.groundPlane||!LevelBlock.notValidOnGroundPlane(e)||!this.groundPlane.getBlockAt(this.getMoveDirectionPosition(t,i)))&&(!this.checkEntityConflict(this.getMoveDirectionPosition(t,i))&&null!==this.getPlaneToPlaceOn(this.getMoveDirectionPosition(t,i),t,e)))}checkEntityConflict(t){var i=!1;return this.controller.levelEntity.entityMap.forEach(e=>{Position.equals(e.position,t)&&(i=!0)}),i}canPlaceBlockForward(e="",t=this.player){return this.canPlaceBlockDirection(e,t,0)}getPlaneToPlaceOn(t,e,i){if(this.inBounds(t)){var o=this.actionPlane.getBlockAt(t);if(e===this.agent&&o.isEmpty){let e=this.groundPlane.getBlockAt(t);if(e.getIsLiquid()){if(LevelBlock.getCanFall(i))return this.groundPlane;if(!LevelBlock.getIsPlaceableInLiquid(i))return null}return this.actionPlane}if(o.isPlacable)return this.groundPlane.getBlockAt(t).isPlacable?this.groundPlane:this.actionPlane}return null}canDestroyBlockForward(e=this.player){var t=!1;return e.isOnBlock||(e=this.getMoveForwardPosition(e),this.inBounds(e)&&(t=!(e=this.actionPlane.getBlockAt(e)).isEmpty&&(e.isDestroyable||e.isUsable))),t}moveForward(e=this.player){var t=this.getMoveForwardPosition(e);this.moveTo(t,e)}moveBackward(e=this.player){var t=this.getMoveDirectionPosition(e,2);this.moveTo(t,e)}moveTo(e,t=this.player){t.setMovePosition(e),this.actionPlane.getBlockAt(e).isEmpty&&(t.isOnBlock=!1)}turnLeft(e=this.player){e.facing=FacingDirection.turn(e.facing,"left")}turnRight(e=this.player){e.facing=FacingDirection.turn(e.facing,"right")}turnToDirection(e=this.player,t){e.facing=t}moveDirection(e=this.player,t){this.turnToDirection(e,t),this.moveForward()}placeBlock(e,t=this.player){var i=t.position;let o=null;var s=this.groundPlane.getBlockAt(i);const a=this.actionPlane.getBlockAt(i);var n=new LevelBlock(e),s=t.canPlaceBlockOver(n,s);if(s.canPlace&&!a.getIsMiniblock())switch(s.plane){case"actionPlane":o=this.actionPlane.setBlockAt(i,n),t.walkableCheck(n);break;case"groundPlane":this.groundPlane.setBlockAt(i,n)}return o}placeBlockForward(e,t,i=this.player){return this.placeBlockDirection(e,t,i,0)}placeBlockDirection(e,t,i,o){o=this.getMoveDirectionPosition(i,o);return"watering"===e&&(e="farmlandWet",t=this.groundPlane),t.setBlockAt(o,new LevelBlock(e))}destroyBlock(e){var t=null;return this.inBounds(e)&&null!==(t=this.actionPlane.getBlockAt(e))&&(t.position=e,t.isDestroyable&&this.actionPlane.setBlockAt(e,new LevelBlock(""))),t}destroyBlockForward(e){var t=null,e=this.getMoveForwardPosition(e);return this.inBounds(e)&&null!==(t=this.actionPlane.getBlockAt(e))&&t.isDestroyable&&this.actionPlane.setBlockAt(e,new LevelBlock("")),t}solveFOWTypeForMap(){var e,t=this.getAllEmissives(),i=this.findBlocksAffectedByEmissives(t);for(e in i)Object.prototype.hasOwnProperty.call(i,e)&&this.solveFOWTypeFor(i[e],t)}solveFOWTypeFor(e,t){var i,o=!1,s=!1,a=!1,n=!1,l=!1,r=!1,h=!1,c=!1,d=0,p=this.coordinatesToIndex(e),m=this.findEmissivesThatTouch(e,t);for(i in m){var g=m[i],u=e[1],y=e[0];(d=-(d=Math.atan2(g[1]-e[1],g[0]-e[0])))<0&&(d+=2*Math.PI),d*=360/(2*Math.PI),!r&&32.5<d&&d<=57.5&&(n=!0,this.pushIfHigherPrecedence(p,{x:y,y:u,type:"FogOfWar_InCorner_TopRight",precedence:0})),!a&&122.5<d&&d<=147.5&&(o=!0,this.pushIfHigherPrecedence(p,{x:y,y:u,type:"FogOfWar_InCorner_TopLeft",precedence:0})),!a&&212.5<d&&d<=237.5&&(s=!0,this.pushIfHigherPrecedence(p,{x:y,y:u,type:"FogOfWar_InCorner_BottomLeft",precedence:0})),!r&&302.5<d&&d<=317.5&&(l=!0,this.pushIfHigherPrecedence(p,{x:y,y:u,type:"FogOfWar_InCorner_BottomRight",precedence:0})),(327.5<=d||d<=32.5)&&(r=!0,this.pushIfHigherPrecedence(p,{x:y,y:u,type:"FogOfWar_Right",precedence:1})),237.5<d&&d<=302.5&&(c=!0,this.pushIfHigherPrecedence(p,{x:y,y:u,type:"FogOfWar_Bottom",precedence:1})),147.5<d&&d<=212.5&&(a=!0,this.pushIfHigherPrecedence(p,{x:y,y:u,type:"FogOfWar_Left",precedence:1})),57.5<d&&d<=122.5&&(h=!0,this.pushIfHigherPrecedence(p,{x:y,y:u,type:"FogOfWar_Top",precedence:1}))}o&&s&&this.pushIfHigherPrecedence(p,{x:y,y:u,type:"FogOfWar_Left",precedence:1}),n&&l&&this.pushIfHigherPrecedence(p,{x:y,y:u,type:"FogOfWar_Right",precedence:1}),o&&n&&this.pushIfHigherPrecedence(p,{x:y,y:u,type:"FogOfWar_Top",precedence:1}),l&&s&&this.pushIfHigherPrecedence(p,{x:y,y:u,type:"FogOfWar_Bottom",precedence:1}),a&&r||h&&c||r&&c&&o||c&&n&&o||h&&l&&s||a&&n&&l||a&&c&&n?this.fowPlane[p]="":o&&l?this.pushIfHigherPrecedence(p,{x:y,y:u,type:"FogOfWar_TopLeftBottomRight",precedence:2}):s&&n?this.pushIfHigherPrecedence(p,{x:y,y:u,type:"FogOfWar_BottomLeftTopRight",precedence:2}):c&&a||c&&o||a&&l?this.pushIfHigherPrecedence(p,{x:y,y:u,type:"FogOfWar_Bottom_Left",precedence:2}):c&&r||c&&n||r&&s?this.pushIfHigherPrecedence(p,{x:y,y:u,type:"FogOfWar_Bottom_Right",precedence:2}):h&&r||h&&l||r&&o?this.pushIfHigherPrecedence(p,{x:y,y:u,type:"FogOfWar_Top_Right",precedence:2}):(h&&a||h&&s||a&&n)&&this.pushIfHigherPrecedence(p,{x:y,y:u,type:"FogOfWar_Top_Left",precedence:2})}pushIfHigherPrecedence(e,t){var i;""!==t?(i=this.fowPlane[e])&&i.precedence>t.precedence||(this.fowPlane[e]=t):this.fowPlane[e]=""}getAllEmissives(){var i=[];for(let t=0;t<this.planeHeight;++t)for(let e=0;e<this.planeWidth;++e){var o=new Position(e,t);(!this.actionPlane.getBlockAt(o).isEmpty&&this.actionPlane.getBlockAt(o).isEmissive||this.groundPlane.getBlockAt(o).isEmissive&&(this.actionPlane.getBlockAt(o).isEmpty||this.actionPlane.getBlockAt(o).isTransparent)||this.actionPlane.getBlockAt(o).isEmpty&&this.groundDecorationPlane.getBlockAt(o).isEmissive)&&i.push(o)}return i}findBlocksAffectedByEmissives(e){var t,i={};for(t in e){var o=e[t],s=o.x,a=o.y;for(let t=o.y-2;t<=a+2;++t)for(let e=o.x-2;e<=s+2;++e){var n=new Position(e,t);this.inBounds(n)&&(t>=a-1&&t<=a+1&&e>=s-1&&e<=s+1||(i[`${t}_${e}`]=n))}}return i}findEmissivesThatTouch(e,i){var o=[],s=e.y,a=e.x;for(let t=s-2;t<=s+2;++t)for(let e=a-2;e<=a+2;++e){var n=new Position(e,t);if(this.inBounds(n)&&!(t>=s-1&&t<=s+1&&e>=a-1&&e<=a+1))for(var l in i)Position.equals(i[l],n)&&o.push(i[l])}return o}computeFowPlane(){var e,t;if(this.fowPlane=[],!this.isDaytime){for(t=0;t<this.planeHeight;++t)for(e=0;e<this.planeWidth;++e)this.fowPlane.push({x:e,y:t,type:"FogOfWar_Center"});for(this.solveFOWTypeForMap(),t=0;t<this.planeHeight;++t)for(e=0;e<this.planeWidth;++e){var i=new Position(e,t),o=this.groundPlane.getBlockAt(i),s=this.actionPlane.getBlockAt(i),i=this.groundDecorationPlane.getBlockAt(i);(o.isEmissive&&(s.isEmpty||s.isTransparent)||!s.isEmpty&&s.isEmissive||s.isEmpty&&i.isEmissive)&&this.clearFowAround(e,t)}}}clearFowAround(e,t){for(var i,o=-1;o<=1;++o)for(i=-1;i<=1;++i)this.clearFowAt(e+i,t+o)}clearFowAt(e,t){0<=e&&e<this.planeWidth&&0<=t&&t<this.planeHeight&&(e=this.yToIndex(t)+e,this.fowPlane[e]="")}clearFow(){for(var e=0;e<this.planeWidth;e++)for(var t=0;t<this.planeHeight;t++){var i=this.yToIndex(t)+e;this.fowPlane[i]=""}}computeShadingPlane(){this.shadingPlane=[],this.computeShading(this.actionPlane),this.computeShading(this.groundPlane)}occludedBy(e){return e&&!e.getIsEmptyOrEntity()&&!e.getIsLiquid()}computeShading(t){for(var e=0;e<this.planeArea();++e){var i=e%this.planeWidth,o=Math.floor(e/this.planeWidth),s=new Position(i,o),a=!1;const l=t.getBlockAt(s),r=this.groundPlane.getBlockAt(s);if(l.isEmpty||l.isTransparent||l.getIsLiquid()){let e="AO";"lava"===l.blockType?e="LavaGlow":"water"!==l.blockType&&"magmaUnderwater"!==l.blockType||(e="WaterAO"),l!==r&&r.getIsLiquid()||(0===o&&this.shadingPlane.push({x:i,y:o,atlas:e,type:"AOeffect_Bottom"}),o===this.planeHeight-1&&this.shadingPlane.push({x:i,y:o,atlas:e,type:"AOeffect_Top"}),0==i&&this.shadingPlane.push({x:i,y:o,atlas:e,type:"AOeffect_Right"}),i==this.planeWidth-1&&this.shadingPlane.push({x:i,y:o,atlas:e,type:"AOeffect_Left"}));var n=t.getSurroundingBlocks(s);i<this.planeWidth-1&&this.occludedBy(n.east)&&this.shadingPlane.push({x:i,y:o,atlas:e,type:"AOeffect_Left"}),0<i&&this.occludedBy(n.west)&&(this.shadingPlane.push({x:i,y:o,atlas:e,type:"AOeffect_Right"}),l.getIsLiquid()||(this.shadingPlane.push({x:i,y:o,atlas:"blockShadows",type:"Shadow_Parts_Fade_base.png"}),0<o&&0<i&&t.getBlockAt(Position.north(Position.west(s))).getIsEmptyOrEntity()&&this.shadingPlane.push({x:i,y:o,atlas:"blockShadows",type:"Shadow_Parts_Fade_top.png"})),a=!0),0<o&&this.occludedBy(n.north)?this.shadingPlane.push({x:i,y:o,atlas:e,type:"AOeffect_Bottom"}):0<o&&(i<this.planeWidth-1&&this.occludedBy(n.northEast)&&!this.occludedBy(n.east)&&this.shadingPlane.push({x:i,y:o,atlas:e,type:"AOeffect_BottomLeft"}),!a&&0<i&&this.occludedBy(n.northWest)&&this.shadingPlane.push({x:i,y:o,atlas:e,type:"AOeffect_BottomRight"})),o<this.planeHeight-1&&this.occludedBy(n.south)?this.shadingPlane.push({x:i,y:o,atlas:e,type:"AOeffect_Top"}):o<this.planeHeight-1&&(i<this.planeWidth-1&&this.occludedBy(n.southEast)&&!this.occludedBy(n.east)&&this.shadingPlane.push({x:i,y:o,atlas:e,type:"AOeffect_TopLeft"}),!a&&0<i&&this.occludedBy(n.southWest)&&this.shadingPlane.push({x:i,y:o,atlas:e,type:"AOeffect_TopRight"}))}}}}const{opposite,turnDirection,turn,directionToRelative}=FacingDirection,connectionName=function(e){switch(e){case North:return"North";case South:return"South";case East:return"East";case West:return"West";default:return""}},RedstoneCircuitConnections=["","Vertical","Vertical","Vertical","Horizontal","UpRight","DownRight","TRight","Horizontal","UpLeft","DownLeft","TLeft","Horizontal","TUp","TDown","Cross"],RailConnectionPriority=[[],[North],[South],[North,South],[East],[North,East],[South,East],[South,East],[West],[North,West],[South,West],[South,West],[East,West],[North,East],[South,East],[North,East]],PoweredRailConnectionPriority=[[],[North],[South],[North,South],[East],[East,West],[East,West],[East,West],[West],[East,West],[East,West],[East,West],[East,West],[East,West],[East,West],[East,West]];class LevelPlane{constructor(t,e,i,o,s){this._data=[],this.width=e,this.height=i,this.levelModel=o,this.planeType=s,this.playPistonOn=!1,this.playPistonOff=!1;for(let e=0;e<t.length;++e){var a=new LevelBlock(t[e]);this._data.push(a)}this.isActionPlane()&&(this.redstoneAdjacencySet=this.createRedstoneAdjacencySet())}inBounds(e){return 0<=e.x&&e.x<this.width&&0<=e.y&&e.y<this.height}coordinatesToIndex(e){return e.y*this.width+e.x}indexToCoordinates(e){var t=Math.floor(e/this.width),e=e-t*this.width;return new Position(e,t)}getAllPositions(){return this._data.map((e,t)=>this.indexToCoordinates(t))}getBlockAt(e){if(e=Position.fromArray(e),this.inBounds(e))return this._data[this.coordinatesToIndex(e)]}isActionPlane(){return"actionPlane"===this.planeType}isDecorationPlane(){return"decorationPlane"===this.planeType}isGroundPlane(){return"groundPlane"===this.planeType}setBlockAt(o,t){if(o=Position.fromArray(o),this.inBounds(o)){if(this._data[this.coordinatesToIndex(o)]=t,this.isActionPlane()){t.isRedstone||t.isRedstoneBattery?this.redstoneAdjacencySet.add(o):this.redstoneAdjacencySet.remove(o);let e=[];var i,s;t.needToRefreshRedstone()&&(e=this.refreshRedstone()),this.updateWeakCharge(o,t),t.isEmpty&&[North,South,East,West].forEach(e=>{var t=Position.directionToOffsetPosition(e);const i=this.getBlockAt(Position.add(o,t));i&&i.isRail&&(i.connectionA===opposite(e)&&(i.connectionA=void 0),i.connectionB===opposite(e)&&(i.connectionB=void 0))}),this.determineRailType(o,!0),this.levelModel&&this.levelModel.controller.levelView&&(i=Position.north(Position.east(o)),s=Position.south(Position.west(o)),s=Position.getOrthogonalPositions(o).concat([o,i,s]),this.levelModel.controller.levelView.refreshActionGroup(s),this.levelModel.controller.levelView.refreshActionGroup(e))}else this.isGroundPlane()&&this.levelModel.controller.levelView.refreshGroundGroup();return this.resolveConduitState(),t}}getOrthogonalBlocks(e){return{north:{block:this.getBlockAt(Position.north(e)),relative:South},south:{block:this.getBlockAt(Position.south(e)),relative:North},east:{block:this.getBlockAt(Position.east(e)),relative:West},west:{block:this.getBlockAt(Position.west(e)),relative:East}}}getSurroundingBlocks(e){return{north:this.getBlockAt(Position.north(e)),northEast:this.getBlockAt(Position.north(Position.east(e))),east:this.getBlockAt(Position.east(e)),southEast:this.getBlockAt(Position.south(Position.east(e))),south:this.getBlockAt(Position.south(e)),southWest:this.getBlockAt(Position.south(Position.west(e))),west:this.getBlockAt(Position.west(e)),northWest:this.getBlockAt(Position.north(Position.west(e)))}}getOrthogonalMask(e,t){e=this.getOrthogonalBlocks(e);return(t(e.north)<<0)+(t(e.south)<<1)+(t(e.east)<<2)+(t(e.west)<<3)}getMinecartTrack(e,t){var i=this.getBlockAt(e);if(i.isRail){if(i.connectionA===t||i.connectionB===t)return["",Position.forward(e,t),t,300];var o=opposite(t);if(i.connectionA===o&&void 0!==i.connectionB){var s=turnDirection(t,i.connectionB);return[`turn_${s}`,e,turn(t,s),300]}if(i.connectionB===o&&void 0!==i.connectionA){i=turnDirection(t,i.connectionA);return[`turn_${i}`,e,turn(t,i),300]}}}getPoweredRailsConnected(e,t){if(!Position.isAdjacent(e,t))return!1;const i=this.getBlockAt(e),o=this.getBlockAt(t);return!(!i.getIsPowerableRail()||!o.getIsPowerableRail())&&(i.getIsHorizontal()&&o.getIsHorizontal()?Position.equals(Position.forward(e,East),t)||Position.equals(Position.forward(e,West),t):!(!i.getIsVertical()||!o.getIsVertical())&&(Position.equals(Position.forward(e,North),t)||Position.equals(Position.forward(e,South),t)))}powerRedstone(){return this.redstoneAdjacencySet.sets.forEach(e=>{const t=e.some(e=>this.getBlockAt(e).isRedstoneBattery);e.forEach(e=>{this.getBlockAt(e).isPowered=t,this.determineRedstoneSprite(e)})}),this.redstoneAdjacencySet.flattenSets()}createRedstoneAdjacencySet(){var e=this.getAllPositions().filter(e=>{e=this.getBlockAt(e);return e.isRedstone||e.isRedstoneBattery});return new AdjacencySet(e)}powerRails(){const e=this.getAllPositions().filter(e=>this.getBlockAt(e).getIsPowerableRail());return e.forEach(e=>{this.determineRailType(e)}),new AdjacencySet(e,this.getPoweredRailsConnected.bind(this)).sets.forEach(e=>{e.some(e=>this.getBlockAt(e).isPowered)&&e.forEach(e=>{this.getBlockAt(e).isPowered=!0})}),e.forEach(e=>{this.determineRailType(e)}),e}determineRailType(i,o=!1){const s=this.getBlockAt(i);if(s&&s.isRail){let e="",t=RailConnectionPriority;s.getIsPowerableRail()&&(e=s.isPowered?"Powered":"Unpowered",t=PoweredRailConnectionPriority),void 0!==s.connectionA&&void 0!==s.connectionB||(a=this.getOrthogonalMask(i,({block:e,relative:t})=>{if(!e||!e.isRail)return!1;var i=void 0===e.connectionA||e.connectionA===t,t=void 0===e.connectionB||e.connectionB===t;return i||t}),[s.connectionA,s.connectionB]=t[a]);var a=connectionName(s.connectionA)+connectionName(s.connectionB);s.blockType=`rails${e}${a}`,o&&Position.getOrthogonalPositions(i).forEach(e=>{this.determineRailType(e)})}}determineRedstoneSprite(e){const t=this.getBlockAt(e);if(t&&t.isRedstone){var i=this.getOrthogonalMask(e,({block:e})=>e&&(e.isRedstone||e.isConnectedToRedstone)),e=RedstoneCircuitConnections[i],i=t.isPowered?"On":"";return t.blockType=`redstoneWire${e}${i}`,`redstoneWire${e}`}}refreshRedstone(){const e=this.powerRedstone();this.powerAllBlocks();var t=this.powerRails(),t=e.concat(t);return this.getAllPositions().forEach(e=>{this.getIronDoors(e),this.getPistonState(e)}),this.playPistonSound(),t}playPistonSound(){this.levelModel&&(this.playPistonOn?this.levelModel.controller.audioPlayer.play("pistonOut"):this.playPistonOff&&this.levelModel.controller.audioPlayer.play("pistonIn"),this.playPistonOn=!1,this.playPistonOff=!1)}checkEntityConflict(i){if(this.levelModel){let t=!1;return this.levelModel.controller.levelEntity.entityMap.forEach(e=>{this.levelModel.controller.positionEquivalence(i,e.position)&&(t=!0)}),t}}getIronDoors(e){e=Position.fromArray(e);const t=this.getBlockAt(e);var i=this.coordinatesToIndex(e);"doorIron"===t.blockType&&(t.isPowered=this.powerCheck(e,!0),t.isPowered&&!t.isOpen?(t.isOpen=!0,this.levelModel&&this.levelModel.controller.levelView.animateDoor(i,!0)):!t.isPowered&&t.isOpen&&this.levelModel&&(this.checkEntityConflict(e)||(t.isOpen=!1,this.levelModel.controller.levelView.animateDoor(i,!1))))}getPistonState(e){const t=this.getBlockAt(e);t.getIsPiston()&&!t.getIsPistonArm()&&(t.isPowered=this.powerCheck(e,!0),t.isPowered?this.activatePiston(e):t.isPowered||this.deactivatePiston(e),this.levelModel&&(this.levelModel.controller.updateFowPlane(),this.levelModel.controller.updateShadingPlane()))}findDoorToAnimate(o){this.getAllPositions().forEach(e=>{const t=this.getBlockAt(e);var i=this.coordinatesToIndex(e);"doorIron"===t.blockType&&e!==o&&(t.isPowered=this.powerCheck(e,!0),t.isPowered&&!t.isOpen?(t.isOpen=!0,this.levelModel&&this.levelModel.controller.levelView.animateDoor(i,!0)):t.isPowered||!t.isOpen||this.checkEntityConflict(e)||(t.isOpen=!1,this.levelModel&&this.levelModel.controller.levelView.animateDoor(i,!1)))})}activatePiston(t){const i=this.getBlockAt(t);let o=i.blockType;i.getIsStickyPiston()&&(o=o.substring(0,o.length-6)),"On"===o.substring(o.length-2,o.length)&&(o=o.substring(0,o.length-2));var s=i.getPistonDirection();let a=`pistonArm${directionToRelative(s)}`;var n=Position.directionToOffsetPosition(s),l=Position.forward(t,s);const e=this.getBlockAt(l);if(!this.pistonArmBlocked(t,n))if(e.isDestroyableUponPush())this.setBlockAt(l,new LevelBlock("")),this.playPistonOn=!0,this.levelModel&&this.levelModel.controller.levelView.playExplosionAnimation(l,2,l,e.blockType,null,null,this.player);else if(""===e.blockType||e.getIsPistonArm()){if(""===e.blockType){let e="On";i.getIsStickyPiston()&&(e+="Sticky",a+="Sticky");var s=new LevelBlock(a),r=new LevelBlock(o+=e);this.setBlockAt(l,s),this.setBlockAt(t,r),this.playPistonOn=!0}}else{r=this.getBlocksToPush(l,n);let e="On";i.getIsStickyPiston()&&(e+="Sticky");l=new LevelBlock(o+=e);this.setBlockAt(t,l),this.pushBlocks(r,n),this.playPistonOn=!0}}pistonArmBlocked(e,t){t=Position.add(e,t);return this.checkEntityConflict(t)}deactivatePiston(e){const t=this.getBlockAt(e);var i;t.getIsPiston()&&t.blockType.match("On")&&(void 0!==(i=t.getPistonDirection())&&this.retractArm(Position.forward(e,i),e))}retractArm(e,t){var i=new LevelBlock("");let o=this.getBlockAt(t),s="",a="";a=this.getBlockAt(t).getIsStickyPiston()?(s="Sticky",o.blockType.substring(0,o.blockType.length-8)):o.blockType.substring(0,o.blockType.length-2);var n=a+s,l=new LevelBlock(n);this.getBlockAt(e).getIsPistonArm()&&(this.getBlockAt(t).getIsStickyPiston()?(n=Position.directionToOffsetPosition(o.getPistonDirection()),n=Position.add(e,n),this.inBounds(n)&&this.getBlockAt(n).isStickable?(this.setBlockAt(e,this.getBlockAt(n)),this.setBlockAt(n,i)):(this.setBlockAt(e,i),this.playPistonOff=!0)):(this.setBlockAt(e,i),this.playPistonOff=!0)),this.setBlockAt(t,l)}pushBlocks(t,i=[0,0]){let e="",o=!1;1===i[0]?e="pistonArmRight":-1===i[0]?e="pistonArmLeft":1===i[1]?e="pistonArmDown":-1===i[1]&&(e="pistonArmUp");var s=new LevelBlock(e);for(let e=t.length-1;0<=e;--e){var a=Position.add(t[e],Position.fromArray(i)),n=this.getBlockAt(t[e]);this.inBounds(a)&&this.getBlockAt(a).isDestroyableUponPush()&&(this.levelModel&&this.levelModel.controller.levelView.playExplosionAnimation(a,2,a,n.blockType,null,null,this.player),o=!0),this.setBlockAt(a,this.getBlockAt(t[e])),0===e&&this.setBlockAt(t[e],s)}o&&this.refreshRedstone()}getBlocksToPush(e,t=[0,0]){let i=[],o=e;for(;this.inBounds(o)&&this.getBlockAt(o).getIsPushable();)i.push(o),o=Position.add(o,Position.fromArray(t));return i}powerCheck(s,a=!1){return Position.getOrthogonalPositions(s).some(e=>{var t=this.getBlockAt(e);if(t){if(!t.isWeaklyPowerable)return!1;if(this.getBlockAt(s).getIsPiston()){const o=this.getBlockAt(s);var i=Position.directionToOffsetPosition(o.getPistonDirection())||new Position(0,0),i=Position.add(s,i);if(Position.equals(e,i))return!1}return a?t.isPowered||t.isRedstoneBattery:t.isRedstone&&t.isPowered||t.isRedstoneBattery}})}powerAllBlocks(){this.getAllPositions().forEach(e=>{const t=this.getBlockAt(e);""!==t.blockType&&t.canHoldCharge()&&(t.isPowered=this.powerCheck(e))})}updateWeakCharge(e,t){t.isWeaklyPowerable&&(t.isPowered=this.powerCheck(e)),t.isPowered&&Position.getOrthogonalPositions(e).forEach(e=>{this.inBounds(e)&&(this.getIronDoors(e),this.getPistonState(e))})}getConduitRingPositions(e,t){var i=new Position(e.x-t,e.y-t),e=new Position(e.x+t,e.y+t);let o=[];if(!this.inBounds(i)||!this.inBounds(e))return o;var s,a=2*t+1;for(let t=0;t<a;++t)for(let e=0;e<a;++e)0!==t&&t!==a-1&&0!==e&&e!==a-1||(s=new Position(i.x+t,i.y+e),o.push(s));return o}resolveConduitState(){this.getAllPositions().forEach(e=>{var t,i,o=this.getBlockAt(e);"conduit"===o.blockType&&(i=t=0,this.getConduitRingPositions(e,2).forEach(e=>{"prismarine"===this.getBlockAt(e).blockType&&++t}),this.getConduitRingPositions(e,1).forEach(e=>{this.getBlockAt(e).isEmpty&&++i}),t!==this.getRingRequirement(2)||i!==this.getRingRequirement(1)||o.isActivatedConduit?(t<this.getRingRequirement(2)||i<this.getRingRequirement(1))&&o.isActivatedConduit&&(this.getBlockAt(e).isActivatedConduit=!1,this.levelModel&&this.levelModel.controller.levelView.playCloseConduitAnimation(e)):(this.getBlockAt(e).isActivatedConduit=!0,this.levelModel&&this.levelModel.controller.levelView.playOpenConduitAnimation(e)))})}getRingRequirement(e){return 8*e}}window.PIXI&&(PIXI.canUseNewCanvasBlendModes=()=>!0);class LevelView{constructor(e){this.controller=e,this.audioPlayer=e.audioPlayer,this.game=e.game,this.baseShading=null,this.prismarinePhase=0,this.uniforms={time:{type:"1f",value:0},surface:{type:"sampler2D",value:null},tint:{type:"4fv",value:[67/255,213/255,238/255,1]},x:{type:"1f",value:0},y:{type:"1f",value:0}},this.waveShader=new Phaser.Filter(this.game,this.uniforms,[`
			precision lowp float;
			varying vec2 vTextureCoord;
			uniform sampler2D uSampler;
			uniform sampler2D surface;
			uniform float time;
			uniform float x;
			uniform float y;
			uniform vec4 tint;

			float overlay(float source, float dest) {
			  return dest > 0.5 ? (2.0 * dest * source) : (1.0 - 2.0 * (1.0 - dest) * (1.0 - source));
			}

			vec4 overlay(vec4 source, vec4 dest) {
			  return vec4(overlay(source.r, dest.r), overlay(source.g, dest.g), overlay(source.b, dest.b), 1.0);
			}

			void main(void) {
			  vec2 relativeCoord = vTextureCoord + vec2(x * 0.9, -y * 0.9);
			  float offsetA = sin(relativeCoord.y * 31.0 + time / 18.0) * 0.0014;
			  float offsetB = sin(relativeCoord.y * 57.0 + time / 18.0) * 0.0007;
			  vec4 base = texture2D(uSampler, vTextureCoord + vec2(0.0, offsetA + offsetB));
			  float frame = mod(floor(time / 5.0), 31.0);
			  float surfaceOffset = 0.0; //sin(time / 57.0) * 0.01 + sin(time / 31.0) * 0.005;
			  vec4 surface = texture2D(
			    surface,
			    vec2(mod(relativeCoord.x * 2.0, 1.0),
			    mod((-relativeCoord.y * 2.0 + frame + surfaceOffset) / 32.0, 1.0))
			  );
			  gl_FragColor = mix(mix(overlay(base, surface), base, 0.5), tint, 0.3);
			}
    `]),this.player=null,this.agent=null,this.selectionIndicator=null,this.groundGroup=null,this.shadingGroup=null,this.actionGroup=null,this.fluffGroup=null,this.fowGroup=null,this.collectibleItems=[],this.trees=[],this.miniBlocks={bed:"bed",boat:"boat",bookEnchanted:"book_enchanted",bricks:"bricks",bucketEmpty:"bucket_empty",bucketLava:"bucket_lava",milk:"bucket_milk",bucketWater:"bucket_water",cactus:"cactus",carrots:"carrot",chest:"chest",clay:"clay_ball",coal:"coal",dirtCoarse:"coarse_dirt",cobblestone:"cobblestone",compass:"compass",blackConcrete:"concrete_black",blueConcrete:"concrete_blue",brownConcrete:"concrete_brown",blackConcretePowder:"concrete_powder_black",blueConcretePowder:"concrete_powder_blue",brownConcretePowder:"concrete_powder_brown",deadbush:"deadbush",diamond:"diamond",axeDiamond:"diamond_axe",pickaxeDiamond:"diamond_pickaxe",shovelDiamond:"diamond_shovel",dirt:"dirt",door:"door",doorIron:"door_iron",egg:"egg",emerald:"emerald",flint:"flint",flintAndSteel:"flint_and_steel",daisy:"flower_daisy",dandelion:"flower_dandelion",poppy:"flower_rose",glowstoneDust:"glowstone_dust",ingotGold:"gold_ingot",gravel:"gravel",gunPowder:"gunpowder",hardenedClay:"hardend_clay",hardenedClayBlack:"hardened_clay_stained_black",hardenedClayBlue:"hardened_clay_stained_blue",hardenedClayBrown:"hardened_clay_stained_brown",hardenedClayCyan:"hardened_clay_stained_cyan",hardenedClayGray:"hardened_clay_stained_gray",hardenedClayGreen:"hardened_clay_stained_green",hardenedClayLightBlue:"hardened_clay_stained_light_blue",hardenedClayLime:"hardened_clay_stained_lime",hardenedClayMagenta:"hardened_clay_stained_magenta",hardenedClayOrange:"hardened_clay_stained_orange",hardenedClayPink:"hardened_clay_stained_pink",hardenedClayPurple:"hardened_clay_stained_purple",hardenedClayRed:"hardened_clay_stained_red",hardenedClaySilver:"hardened_clay_stained_silver",hardenedClayWhite:"hardened_clay_stained_white",hardenedClayYellow:"hardened_clay_stained_yellow",heartofthesea:"heartofthesea_closed",ingotIron:"iron_ingot",lapisLazuli:"lapis_lazuli",logAcacia:"log_acacia",logBirch:"log_birch",logJungle:"log_jungle",logOak:"log_oak",logSpruce:"log_spruce",mapEmpty:"map_empty",minecart:"minecart_normal",nautilus:"nautilus",netherbrick:"netherbrick",netherrack:"netherrack",obsidian:"obsidian",piston:"piston",planksAcacia:"planks_acacia",planksBirch:"planks_birch",planksJungle:"planks_jungle",planksOak:"planks_oak",planksSpruce:"planks_spruce",potato:"potato",potion:"potion_bottle_drinkable",pressurePlateOak:"pressure_plate_oak",prismarine:"prismarine",quartzOre:"quartz",railGolden:"rail_golden",railNormal:"rail_normal",redstoneDust:"redstone_dust",redstoneTorch:"redstone_torch",reeds:"reeds",sand:"sand",sandstone:"sandstone",seaPickles:"sea_pickle",seedsWheat:"seeds_wheat",snow:"snow",snowBall:"snowball",tnt:"tnt",torch:"torch",turtle:"turtle",cropWheat:"wheat",wool_black:"wool_colored_black",wool_blue:"wool_colored_blue",wool_brown:"wool_colored_brown",wool_cyan:"wool_colored_cyan",wool_gray:"wool_colored_gray",wool_green:"wool_colored_green",wool_light_blue:"wool_colored_light_blue",wool_lime:"wool_colored_lime",wool_magenta:"wool_colored_magenta",wool_orange:"wool_colored_orange",wool_pink:"wool_colored_pink",wool_purple:"wool_colored_purple",wool_red:"wool_colored_red",wool_silver:"wool_colored_silver",wool:"wool_colored_white",wool_yellow:"wool_colored_yellow"},this.blocks={bedrock:["blocks","Bedrock",-13,0],bricks:["blocks","Bricks",-13,0],oreCoal:["blocks","Coal_Ore",-13,0],dirtCoarse:["blocks","Coarse_Dirt",-13,0],cobblestone:["blocks","Cobblestone",-13,0],oreDiamond:["blocks","Diamond_Ore",-13,0],dirt:["blocks","Dirt",-13,0],oreEmerald:["blocks","Emerald_Ore",-13,0],farmlandWet:["blocks","Farmland_Wet",-13,0],flowerDandelion:["blocks","Flower_Dandelion",-13,0],flowerOxeeye:["blocks","Flower_Oxeeye",-13,0],flowerRose:["blocks","Flower_Rose",-13,0],glass:["blocks","Glass",-13,0],oreGold:["blocks","Gold_Ore",-13,0],grass:["blocks","Grass",-13,0],gravel:["blocks","Gravel",-13,0],oreIron:["blocks","Iron_Ore",-13,0],oreLapis:["blocks","Lapis_Ore",-13,0],lava:["blocks","Lava_0",-13,0],logAcacia:["blocks","Log_Acacia",-13,0],logBirch:["blocks","Log_Birch",-13,0],logJungle:["blocks","Log_Jungle",-13,0],logOak:["blocks","Log_Oak",-13,0],logSpruce:["blocks","Log_Spruce",-13,0],logSpruceSnowy:["blocks","Log_Spruce",-13,0],obsidian:["blocks","Obsidian",-13,0],planksAcacia:["blocks","Planks_Acacia",-13,0],planksBirch:["blocks","Planks_Birch",-13,0],planksJungle:["blocks","Planks_Jungle",-13,0],planksOak:["blocks","Planks_Oak",-13,0],planksSpruce:["blocks","Planks_Spruce",-13,0],oreRedstone:["blocks","Redstone_Ore",-13,0],sand:["blocks","Sand",-13,0],sandstone:["blocks","Sandstone",-13,0],stone:["blocks","Stone",-13,0],tnt:["tnt","TNTexplosion0",-80,-58],water:["blocks","Water_0",-13,0],wool:["blocks","Wool_White",-13,0],wool_orange:["blocks","Wool_Orange",-13,0],wool_black:["blocks","Wool_Black",-13,0],wool_blue:["blocks","Wool_Blue",-13,0],wool_brown:["blocks","Wool_Brown",-13,0],wool_cyan:["blocks","Wool_Cyan",-13,0],wool_gray:["blocks","Wool_Gray",-13,0],wool_green:["blocks","Wool_Green",-13,0],wool_light_blue:["blocks","Wool_LightBlue",-13,0],wool_lime:["blocks","Wool_Lime",-13,0],wool_magenta:["blocks","Wool_Magenta",-13,0],wool_pink:["blocks","Wool_Pink",-13,0],wool_purple:["blocks","Wool_Purple",-13,0],wool_red:["blocks","Wool_Red",-13,0],wool_silver:["blocks","Wool_Silver",-13,0],wool_yellow:["blocks","Wool_Yellow",-13,0],leavesAcacia:["leavesAcacia","Leaves_Acacia0.png",-100,0],leavesBirch:["leavesBirch","Leaves_Birch0.png",-100,0],leavesJungle:["leavesJungle","Leaves_Jungle0.png",-100,0],leavesOak:["leavesOak","Leaves_Oak0.png",-100,0],leavesSpruce:["leavesSpruce","Leaves_Spruce0.png",-100,0],leavesSpruceSnowy:["leavesSpruceSnowy","Leaves_SpruceSnowy0.png",-100,36],watering:["blocks","Water_0",-13,0],cropWheat:["blocks","Wheat0",-13,0],torch:["torch","Torch0",-13,0],tallGrass:["blocks","TallGrass",-13,0],lavaPop:["lavaPop","LavaPop01",-13,0],redstoneSparkle:["redstoneSparkle","redstone_sparkle1.png",7,23],fire:["fire","",-11,135],bubbles:["bubbles","",-11,135],explosion:["explosion","",-70,60],door:["door","",-12,-15],doorIron:["doorIron","",-12,-15],rails:["blocks","Rails_Vertical",-13,-0],railsNorthEast:["blocks","Rails_BottomLeft",-13,0],railsNorthWest:["blocks","Rails_BottomRight",-13,0],railsEast:["blocks","Rails_Horizontal",-13,0],railsWest:["blocks","Rails_Horizontal",-13,0],railsEastWest:["blocks","Rails_Horizontal",-13,0],railsSouthEast:["blocks","Rails_TopLeft",-13,0],railsSouthWest:["blocks","Rails_TopRight",-13,0],railsNorth:["blocks","Rails_Vertical",-13,-0],railsSouth:["blocks","Rails_Vertical",-13,-0],railsNorthSouth:["blocks","Rails_Vertical",-13,-0],railsUnpowered:["blocks","Rails_UnpoweredVertical",-13,0],railsUnpoweredNorth:["blocks","Rails_UnpoweredVertical",-13,0],railsUnpoweredSouth:["blocks","Rails_UnpoweredVertical",-13,0],railsUnpoweredNorthSouth:["blocks","Rails_UnpoweredVertical",-13,0],railsUnpoweredEast:["blocks","Rails_UnpoweredHorizontal",-13,0],railsUnpoweredWest:["blocks","Rails_UnpoweredHorizontal",-13,0],railsUnpoweredEastWest:["blocks","Rails_UnpoweredHorizontal",-13,0],railsPowered:["blocks","Rails_PoweredVertical",-13,0],railsPoweredNorth:["blocks","Rails_PoweredVertical",-13,0],railsPoweredSouth:["blocks","Rails_PoweredVertical",-13,0],railsPoweredNorthSouth:["blocks","Rails_PoweredVertical",-13,0],railsPoweredEast:["blocks","Rails_PoweredHorizontal",-13,0],railsPoweredWest:["blocks","Rails_PoweredHorizontal",-13,0],railsPoweredEastWest:["blocks","Rails_PoweredHorizontal",-13,0],railsRedstoneTorch:["blocks","Rails_RedstoneTorch",-12,9],redstoneWire:["blocks","redstone_dust_dot_off",-13,0],redstoneWireHorizontal:["blocks","redstone_dust_line_h_off",-13,0],redstoneWireVertical:["blocks","redstone_dust_line_v_off",-13,0],redstoneWireUpRight:["blocks","redstone_dust_corner_BottomLeft_off",-13,0],redstoneWireUpLeft:["blocks","redstone_dust_corner_BottomRight_off",-13,0],redstoneWireDownRight:["blocks","redstone_dust_corner_TopLeft_off",-13,0],redstoneWireDownLeft:["blocks","redstone_dust_corner_TopRight_off",-13,0],redstoneWireTUp:["blocks","redstone_dust_cross_up_off",-13,0],redstoneWireTDown:["blocks","redstone_dust_cross_down_off",-13,0],redstoneWireTLeft:["blocks","redstone_dust_cross_left_off",-13,0],redstoneWireTRight:["blocks","redstone_dust_cross_right_off",-13,0],redstoneWireCross:["blocks","redstone_dust_cross_off",-13,0],redstoneWireOn:["blocks","redstone_dust_dot",-13,0],redstoneWireHorizontalOn:["blocks","redstone_dust_line_h",-13,0],redstoneWireVerticalOn:["blocks","redstone_dust_line_v",-13,0],redstoneWireUpRightOn:["blocks","redstone_dust_corner_BottomLeft",-13,0],redstoneWireUpLeftOn:["blocks","redstone_dust_corner_BottomRight",-13,0],redstoneWireDownRightOn:["blocks","redstone_dust_corner_TopLeft",-13,0],redstoneWireDownLeftOn:["blocks","redstone_dust_corner_TopRight",-13,0],redstoneWireTUpOn:["blocks","redstone_dust_cross_up",-13,0],redstoneWireTDownOn:["blocks","redstone_dust_cross_down",-13,0],redstoneWireTLeftOn:["blocks","redstone_dust_cross_left",-13,0],redstoneWireTRightOn:["blocks","redstone_dust_cross_right",-13,0],redstoneWireCrossOn:["blocks","redstone_dust_cross",-13,0],pressurePlateUp:["blocks","PressurePlate_Up",-13,0],pressurePlateDown:["blocks","PressurePlate_Down",-13,0],pistonUp:["blocks","piston_up",-13,0],pistonDown:["blocks","piston_down",-13,0],pistonLeft:["blocks","piston_left",-13,0],pistonRight:["blocks","piston_right",-13,0],pistonUpOn:["blocks","piston_base_up",-26,-13],pistonDownOn:["blocks","piston_base_down",-26,-13],pistonLeftOn:["blocks","piston_base_left",-26,-13],pistonRightOn:["blocks","piston_base_right",-26,-13],pistonArmLeft:["blocks","piston_arm_left",-26,-13],pistonArmRight:["blocks","piston_arm_right",-26,-13],pistonArmUp:["blocks","piston_arm_up",-26,-13],pistonArmDown:["blocks","piston_arm_down",-26,-13],pistonUpSticky:["blocks","piston_up",-13,0],pistonDownSticky:["blocks","piston_down_sticky",-13,0],pistonLeftSticky:["blocks","piston_left",-13,0],pistonRightSticky:["blocks","piston_right",-13,0],pistonUpOnSticky:["blocks","piston_base_up",-26,-13],pistonDownOnSticky:["blocks","piston_base_down_sticky",-26,-13],pistonLeftOnSticky:["blocks","piston_base_left",-26,-13],pistonRightOnSticky:["blocks","piston_base_right",-26,-13],pistonArmLeftSticky:["blocks","piston_arm_left",-26,-13],pistonArmRightSticky:["blocks","piston_arm_right",-26,-13],pistonArmUpSticky:["blocks","piston_arm_up",-26,-13],pistonArmDownSticky:["blocks","piston_arm_down_sticky",-26,-13],cactus:["blocks","cactus",-13,0],deadBush:["blocks","dead_bush",-13,0],glowstone:["blocks","glowstone",-13,0],grassPath:["blocks","grass_path",-13,0],ice:["blocks","ice",-13,0],netherrack:["blocks","netherrack",-13,0],netherBrick:["blocks","nether_brick",-13,0],quartzOre:["blocks","quartz_ore",-13,0],snow:["blocks","snow",-13,0],snowyGrass:["blocks","snowy_grass",-13,0],topSnow:["blocks","top_snow",-13,0],sandDeep:["blocks","Sand_Deep",-13,0],gravelDeep:["blocks","Gravel_Deep",-13,0],reeds:["blocks","Reeds",-13,-18],Nether_Portal:["blocks","NetherPortal1",0,-58],bedFoot:["blocks","Bed_Foot",-13,0],bedHead:["blocks","Bed_Head",-13,10],clay:["blocks","Clay",-13,0],glassBlack:["blocks","Glass_Black",-13,0],glassBlue:["blocks","Glass_Blue",-13,0],glassBrown:["blocks","Glass_Brown",-13,0],glassCyan:["blocks","Glass_Cyan",-13,0],glassGray:["blocks","Glass_Gray",-13,0],glassGreen:["blocks","Glass_Green",-13,0],glassLightBlue:["blocks","Glass_LightBlue",-13,0],glassLime:["blocks","Glass_Lime",-13,0],glassMagenta:["blocks","Glass_Magenta",-13,0],glassOrange:["blocks","Glass_Orange",-13,0],glassPink:["blocks","Glass_Pink",-13,0],glassPurple:["blocks","Glass_Purple",-13,0],glassRed:["blocks","Glass_Red",-13,0],glassSilver:["blocks","Glass_Silver",-13,0],glassWhite:["blocks","Glass_White",-13,0],glassYellow:["blocks","Glass_Yellow",-13,0],terracotta:["blocks","Terracotta",-13,0],terracottaBlack:["blocks","Terracotta_Black",-13,0],terracottaBlue:["blocks","Terracotta_Blue",-13,0],terracottaBrown:["blocks","Terracotta_Brown",-13,0],terracottaCyan:["blocks","Terracotta_Cyan",-13,0],terracottaGray:["blocks","Terracotta_Gray",-13,0],terracottaGreen:["blocks","Terracotta_Green",-13,0],terracottaLightBlue:["blocks","Terracotta_LightBlue",-13,0],terracottaLime:["blocks","Terracotta_Lime",-13,0],terracottaMagenta:["blocks","Terracotta_Magenta",-13,0],terracottaOrange:["blocks","Terracotta_Orange",-13,0],terracottaPink:["blocks","Terracotta_Pink",-13,0],terracottaPurple:["blocks","Terracotta_Purple",-13,0],terracottaRed:["blocks","Terracotta_Red",-13,0],terracottaSilver:["blocks","Terracotta_Silver",-13,0],terracottaWhite:["blocks","Terracotta_White",-13,0],terracottaYellow:["blocks","Terracotta_Yellow",-13,0],strippedOak:["blocks","Stripped_Oak",-12,0],strippedDarkOak:["blocks","Stripped_Dark_Oak",-12,0],stoneBricks:["blocks","Stone_Bricks",-12,0],chiseledStoneBricks:["blocks","Stone_Bricks_Chisled",-12,0],mossyStoneBricks:["blocks","Stone_Bricks_Mossy",-12,0],crackedStoneBricks:["blocks","Stone_Bricks_Cracked",-12,0],magmaBlock:["blocks","Magma_Block0",-12,0],blueCoralBlock:["blocks","Coral_Block_Blue",-12,0],pinkCoralBlock:["blocks","Coral_Block_Pink",-12,0],magentaCoralBlock:["blocks","Coral_Block_Magenta",-12,0],redCoralBlock:["blocks","Coral_Block_Red",-12,0],yellowCoralBlock:["blocks","Coral_Block_Yellow",-12,0],deadCoralBlock:["blocks","Coral_Block_Dead_Blue",-12,0],blueDeadCoralBlock:["blocks","Coral_Block_Dead_Blue",-12,0],pinkDeadCoralBlock:["blocks","Coral_Block_Dead_Pink",-12,0],magentaDeadCoralBlock:["blocks","Coral_Block_Dead_Magenta",-12,0],readDeadCoralBlock:["blocks","Coral_Block_Dead_Red",-12,0],yellowDeadCoralBlock:["blocks","Coral_Block_Dead_Yellow",-12,0],prismarine:["blocks","Prismarine0",-12,0],prismarineBricks:["blocks","Prismarine_Bricks",-12,0],darkPrismarine:["blocks","Prismarine_Dark",-12,0],seaLantern:["blocks","Sea_Lantern0",-12,0],packedIce:["blocks","Ice_Packed",-12,0],blueIce:["blocks","Ice_Blue",-12,0],blackConcrete:["blocks","Concrete_Black",-12,0],seaGrass:["blocks","Seagrass0",-12,0],kelp:["blocks","KelpSingle_0",-12,0],polishedGranite:["blocks","Granite_Polished",-12,0],coralFanBlueBottom:["blocks","Coral_Fan_Blue_Bottom",-12,0],coralFanPinkBottom:["blocks","Coral_Fan_Pink_Bottom",-12,0],coralFanMagentaBottom:["blocks","Coral_Fan_Magenta_Bottom",-12,0],coralFanRedBottom:["blocks","Coral_Fan_Red_Bottom",-12,0],coralFanYellowFanBottom:["blocks","Coral_Fan_Yellow_Bottom",-12,0],coralFanBlueTop:["blocks","Coral_Fan_Blue_Top",-12,0],coralFanPinkTop:["blocks","Coral_Fan_Pink_Top",-12,0],coralFanMagentaTop:["blocks","Coral_Fan_Magenta_Top",-12,0],coralFanRedTop:["blocks","Coral_Fan_Red_Top",-12,0],coralFanYellowFanTop:["blocks","Coral_Fan_Yellow_Top",-12,0],coralFanBlueLeft:["blocks","Coral_Fan_Blue_Left",-12,0],coralFanPinkLeft:["blocks","Coral_Fan_Pink_Left",-12,0],coralFanMagentaLeft:["blocks","Coral_Fan_Magenta_Left",-12,0],coralFanRedLeft:["blocks","Coral_Fan_Red_Left",-12,0],coralFanYellowFanLeft:["blocks","Coral_Fan_Yellow_Left",-12,0],coralFanBlueRight:["blocks","Coral_Fan_Blue_Right",-12,0],coralFanPinkRight:["blocks","Coral_Fan_Pink_Right",-12,0],coralFanMagentaRight:["blocks","Coral_Fan_Magenta_Right",-12,0],coralFanRedRight:["blocks","Coral_Fan_Red_Right",-12,0],coralFanYellowFanRight:["blocks","Coral_Fan_Yellow_Right",-12,0],coralPlantBlue:["blocks","Coral_Plant_Blue",-12,0],coralPlantBlueDeep:["blocks","Coral_Plant_Blue_Sand",-12,0],coralPlantPink:["blocks","Coral_Plant_Pink",-12,0],coralPlantPinkDeep:["blocks","Coral_Plant_Pink_Sand",-12,0],coralPlantMagenta:["blocks","Coral_Plant_Magenta",-12,0],coralPlantMagentaDeep:["blocks","Coral_Plant_Magenta_Sand",-12,0],coralPlantRed:["blocks","Coral_Plant_Red",-12,0],coralPlantRedDeep:["blocks","Coral_Plant_Red_Sand",-12,0],coralPlantYellow:["blocks","Coral_Plant_Yellow",-12,0],coralPlantYellowDeep:["blocks","Coral_Plant_Yellow_Sand",-12,0],magmaUnderwater:["blocks","Magma_Bubble_Boat0",-12,4],magmaDeep:["blocks","Magma_Bubble_Deep0",-12,0],bubbleColumn:["blocks","Bubble_Column0",-12,0],conduit:["blocks","Conduit00",-13,-10],seaPickles:["blocks","SeaPickle",-10,-30],Chest:["blocks","Chest0",-12,-20],chest:["blocks","Chest0",-12,-20],invisible:["blocks","Invisible",0,0]},this.actionPlaneBlocks=[],this.toDestroy=[],this.resettableTweens=[],this.treeFluffTypes={treeAcacia:[[0,0],[-1,0],[1,0],[-1,-1],[0,-1],[1,-1],[-1,-2],[0,-2],[1,-2]],treeBirch:[[0,0],[-1,0],[1,0],[-1,-1],[0,-1],[1,-1],[-1,-2],[0,-2],[1,-2],[0,-3]],treeJungle:[[0,0],[-1,0],[1,0],[-1,-1],[0,-1],[1,-1],[-1,-2],[0,-2],[1,-2],[0,-3],[1,-3]],treeOak:[[0,0],[-1,0],[1,0],[-1,-1],[0,-1],[1,-1],[-1,-2],[0,-2],[0,-3]],treeSpruce:[[0,0],[-1,0],[1,0],[-1,-1],[0,-1],[1,-1],[-1,-2],[0,-2],[1,-2],[0,-3]],treeSpruceSnowy:[[0,0],[-1,0],[1,0],[-1,-1],[0,-1],[1,-1],[-1,-2],[0,-2],[1,-2],[0,-3]]}}initPrismarine(){if(!this.prismarine){this.prismarine=this.controller.game.make.bitmapData(64,64,"prismarine"),this.prismarineFrames=[];for(let e=0;e<6;e++)this.prismarineFrames[e]=this.controller.game.make.sprite(0,0,"blocks","Prismarine"+e);this.prismarine.copy(this.prismarineFrames[0])}}updatePrismarine(){var e=Math.floor(this.prismarinePhase),t=Math.ceil(this.prismarinePhase)%6,i=this.prismarinePhase-e;this.prismarine.copy(this.prismarineFrames[e]),0<i&&this.prismarine.copy(this.prismarineFrames[t],null,null,null,null,null,null,null,null,null,null,null,null,null,i)}yToIndex(e){return this.controller.levelModel.yToIndex(e)}create(e){if(this.createGroups(),this.reset(e),e.isUnderwater()){const t=this.game.add.sprite(0,0,"underwaterOverlay");t.visible=!1,t.smoothed=!1,this.uniforms.surface.value=t.texture}}resetEntity(e){this.preparePlayerSprite(e.name,e),e.getAnimationManager().stop(),this.setPlayerPosition(e.position,e.isOnBlock,e),e.shouldUpdateSelectionIndicator()&&(this.setSelectionIndicatorPosition(e.position[0],e.position[1]),this.selectionIndicator.visible=!0),this.initWithIdleAnimation(e.position,e.facing,e.isOnBlock,e)}reset(e){this.player=e.player,this.agent=e.agent,this.resettableTweens.forEach(e=>{e.stop(!1)}),this.resettableTweens.length=0,this.collectibleItems=[],this.trees=[],this.resetGroups(e),e.usePlayer&&(this.resetEntity(this.player),e.usingAgent&&this.resetEntity(this.agent)),e.isUnderwater()&&("cold"===e.getOceanType()&&(this.uniforms.tint.value=[57/255,56/255,201/255,1]),this.game.world.filters=[this.waveShader]),this.updateShadingGroup(e.shadingPlane),this.updateFowGroup(e.fowPlane),this.controller.followingPlayer()?(this.game.world.setBounds(0,0,40*e.planeWidth,40*e.planeHeight),this.game.camera.follow(this.player.sprite),this.game.world.scale.x=1,this.game.world.scale.y=1):this.game.world.setBounds(0,0,400,400)}update(){for(let e=0;e<this.toDestroy.length;++e)this.toDestroy[e].destroy();this.toDestroy=[],this.prismarine&&(this.prismarinePhase=(this.prismarinePhase+this.controller.originalFpsToScaled(.015))%6,this.updatePrismarine())}render(){this.actionGroup.sort("sortOrder"),this.fluffGroup.sort("z");var e=this.game.camera.view;this.uniforms.x.value=e.x/e.width,this.uniforms.y.value=e.y/e.height,this.uniforms.time.value++}scaleShowWholeWorld(e){var[t,i]=this.controller.scaleFromOriginal(),t=this.addResettableTween(this.game.world.scale).to({x:1/t,y:1/i},1e3,Phaser.Easing.Exponential.Out);this.game.camera.unfollow();i=this.addResettableTween(this.game.camera).to({x:0,y:0},1e3,Phaser.Easing.Exponential.Out);t.onComplete.addOnce(()=>{e()}),i.start(),t.start()}getDirectionName(e){return"_"+FacingDirection.directionToRelative(e).toLowerCase()}playDoorAnimation(e,t,i){e=this.yToIndex(e[1])+e[0],e=this.actionPlaneBlocks[e];const o=this.playScaledSpeed(e.animations,t?"open":"close");this.onAnimationEnd(o,()=>{o.updateCurrentFrame(),i()})}playOpenConduitAnimation(e){var t=this.yToIndex(e[1])+e[0];const i=this.actionPlaneBlocks[t];t=this.playScaledSpeed(i.animations,"activation");this.onAnimationEnd(t,()=>{this.controller.levelModel.actionPlane.getBlockAt(e).isEmissive=!0,this.controller.updateShadingPlane(),this.controller.updateFowPlane(),this.playScaledSpeed(i.animations,"open")})}playCloseConduitAnimation(e){var t=this.yToIndex(e[1])+e[0],t=this.actionPlaneBlocks[t],t=this.playScaledSpeed(t.animations,"deactivation");this.onAnimationEnd(t,()=>{this.controller.levelModel.actionPlane.getBlockAt(e).isEmissive=!1,this.controller.updateShadingPlane(),this.controller.updateFowPlane()})}playOpenChestAnimation(t){var e=this.yToIndex(t[1])+t[0],e=this.actionPlaneBlocks[e],e=this.playScaledSpeed(e.animations,"open");this.onAnimationEnd(e,()=>{var e=this.getTreasureTypeFromChest(this.controller.levelModel.actionPlane.getBlockAt(t));e&&this.createMiniBlock(t[0],t[1],e,{collectibleDistance:-1,xOffsetRange:0,yOffsetRange:0,isOnBlock:!0})})}getTreasureTypeFromChest(e){return e.blockType.substring(0,e.blockType.length-5)}playPlayerAnimation(e,t,i,o=0,s=this.player){i=this.getDirectionName(i);s.sprite.sortOrder=this.yToIndex(t[1])+s.getSortOrderOffset();i=e+i;return this.playScaledSpeed(s.getAnimationManager(),i)}playIdleAnimation(e,t,i,o=this.player){var s=this.controller.levelModel.isUnderwater()?"walk":"idle";this.playPlayerAnimation(s,e,t,i,o)}initWithIdleAnimation(e,t,i,o=this.player){this.playPlayerAnimation("idle",e,t,i,o)}playSuccessAnimation(e,t,i,o,s=this.player){this.controller.delayBy(250,()=>{this.audioPlayer.play("success"),this.onAnimationEnd(this.playPlayerAnimation("celebrate",e,t,i,s),()=>{o()})})}playFailureAnimation(e,t,i,o,s=this.player){this.controller.delayBy(500,()=>{this.audioPlayer.play("failure"),this.onAnimationEnd(this.playPlayerAnimation("fail",e,t,i,s),()=>{this.controller.delayBy(800,o)})})}playBumpAnimation(e,t,i,o=this.player){var s=this.playPlayerAnimation("bump",e,t,i,o);return s.onComplete.add(()=>{this.playIdleAnimation(e,t,i,o)}),s}playDrownFailureAnimation(e,t,i,o){this.playPlayerAnimation("fail",e,t,i),this.createBlock(this.fluffGroup,e[0],e[1],"bubbles");var t=this.fluffGroup.create(0,0,"finishOverlay"),[i,e]=this.controller.scaleFromOriginal();t.scale.x=i,t.scale.y=e,t.alpha=0,t.tint=3296255,(t=this.addResettableTween(t).to({alpha:.5},200,Phaser.Easing.Linear.None)).onComplete.add(()=>{o()}),t.start()}playBurnInLavaAnimation(e,t,i,o){this.playPlayerAnimation("jumpUp",e,t,i),this.createBlock(this.fluffGroup,e[0],e[1],"fire");var t=this.fluffGroup.create(0,0,"finishOverlay"),[i,e]=this.controller.scaleFromOriginal();t.scale.x=i,t.scale.y=e,t.alpha=0,t.tint=13719565,(t=this.addResettableTween(t).to({alpha:.5},200,Phaser.Easing.Linear.None)).onComplete.add(()=>{o()}),t.start()}playDestroyTntAnimation(e,t,i,o,s,a){var n;if(0!==o.length){for(var l in this.audioPlayer.play("fuse"),o)l=this.actionPlaneBlocks[this.coordinatesToIndex(o[l])],n=this.playScaledSpeed(l.animations,"explode");this.onAnimationEnd(n,()=>{this.audioPlayer.play("explode"),a()})}else a()}playCreeperExplodeAnimation(e,t,i,o,s){this.controller.delayBy(180,()=>{this.playPlayerAnimation("bump",e,t,!1).onComplete.add(()=>{this.audioPlayer.play("fuse"),this.playExplodingCreeperAnimation(e,t,i,o,s,this),this.controller.delayBy(200,()=>{this.onAnimationLoopOnce(this.playPlayerAnimation("jumpUp",e,t,!1),()=>{this.playIdleAnimation(e,t,o)})})})})}flashEntity(e){return this.flashSpriteToWhite(e.sprite)}flashBlock(e){e=this.yToIndex(e[1])+e[0],e=this.actionPlaneBlocks[e];return this.flashSpriteToWhite(e)}flashSpriteToWhite(e){var t=this.game.add.bitmapData(e.width,e.height);t.fill(255,255,255,255);var i=this.game.add.bitmapData(e.width,e.height),o={x:0,y:0,width:e.width,height:e.height},s={x:0,y:0,width:e.texture.crop.width,height:e.texture.crop.height};i.alphaMask(t,e,o,s);var a=e.addChild(this.game.make.sprite(0,0,i.texture)),n=a.alpha=0,l={alpha:1},r={alpha:0},e=this.game.add.tween(a).to(l,60,Phaser.Easing.Linear.None),i=this.game.add.tween(a).to(r,60,Phaser.Easing.Linear.None),n=120;e.chain(i);var h=i;for(let e=0;e<2;e++){var c=this.game.add.tween(a).to(r,240,Phaser.Easing.Linear.None),d=this.game.add.tween(a).to(l,60,Phaser.Easing.Linear.None),p=this.game.add.tween(a).to(r,60,Phaser.Easing.Linear.None);n+=360,h.chain(c),c.chain(d),d.chain(p),h=p}return h.onComplete.add(()=>{a.destroy()}),e.start(),2*n}playExplodingCreeperAnimation(e,t,i,o,s){var a=this.yToIndex(i[1])+i[0];let n=this.actionPlaneBlocks[a];a=n.animations.getAnimation("explode");a.onComplete.add(()=>{n.kill(),this.playExplosionAnimation(e,t,i,o,()=>{this.controller.delayBy(100,()=>{this.playFailureAnimation(e,t,!1,s)})},!1),this.audioPlayer.play("explode"),this.playExplosionCloudAnimation(i)}),a.play()}playExplosionCloudAnimation(e){this.createBlock(this.fluffGroup,e[0],e[1],"explosion")}coordinatesToIndex(e){return this.yToIndex(e[1])+e[0]}playMinecartTurnAnimation(e,t,i,o,s){t=t?FacingDirection.North:FacingDirection.South;return this.playPlayerAnimation("mineCart_turn"+s,e,t,!1)}playMinecartMoveForwardAnimation(e,t,i,o,s,a){return this.audioPlayer.play("minecart"),this.playPlayerAnimation("mineCart",e,t,!1),(a=this.addResettableTween(this.player.sprite).to(this.positionToScreen(s),a,Phaser.Easing.Linear.None)).start(),this.player.sprite.sortOrder=this.yToIndex(s[1])+10,a}playMinecartAnimation(e,t){const i=new Position(3,2);this.setPlayerPosition(i,e),this.player.facing=2;const o=this.playLevelEndAnimation(i,this.player.facing,e,t,!1);this.game.world.setBounds(0,0,440,400),this.game.camera.follow(this.player.sprite),o.onComplete.add(()=>{this.playTrack(i,this.player.facing,e,this.player,t)})}playTrack(e,t,i,o=this.player,s){o.onTracks=!0;let a=this.controller.levelModel.actionPlane.getMinecartTrack(e,t);var n,l=Position.forward(o.position,t);if(o.getOffTrack||!a&&!this.isFirstTimeOnRails(e,l))return o.getOffTrack=!1,o.onTracks=!1,void(s&&s());if(void 0===a&&(a=this.controller.levelModel.actionPlane.getMinecartTrack(l,t),void 0===a))return o.getOffTrack=!1,o.onTracks=!1,void(s&&s());const[r,h,c,d]=a;this.player.position=h,"turn"===r.substring(0,4)?(n=r.substring(5),l=t===FacingDirection.North||c===FacingDirection.North,this.onAnimationEnd(this.playMinecartTurnAnimation(e,l,i,s,n),()=>{this.playTrack(h,c,i,o,s)})):this.onAnimationEnd(this.playMinecartMoveForwardAnimation(e,t,i,s,h,d),()=>{this.playTrack(h,c,i,o,s)})}isFirstTimeOnRails(e,t){t=this.controller.levelModel.actionPlane.getBlockAt(t),e=this.controller.levelModel.actionPlane.getBlockAt(e);return!(!t||!e||e.isRail||!t.isRail)}addHouseBed(e){var t=e[1]-1;this.actionGroup.create(38*e[0],35*t,"bed").sortOrder=this.yToIndex(e[1])}addDoor(e){let t=this.actionPlaneBlocks[this.coordinatesToIndex(e)];this.createActionPlaneBlock(e,"door"),e=this.createBlock(this.groundGroup,e[0],e[1],"wool_orange"),t.kill(),e.sortOrder=this.yToIndex(6)}playSuccessHouseBuiltAnimation(e,t,i,o,s,a,n){this.playLevelEndAnimation(e,t,i,()=>{this.controller.delayBy(4e3,a)},!0).onComplete.add(()=>{var t,i;this.audioPlayer.play("houseSuccess");for(let e=0;e<o.length;++e)t=o[e][1],i=o[e][2],this.createBlock(this.groundGroup,t,i,"wool_orange").sortOrder=this.yToIndex(i);this.addHouseBed(s[0]),this.addDoor(s[1]),this.groundGroup.sort("sortOrder"),n()})}playLevelEndAnimation(e,t,i,o,s){var a,n=this.fluffGroup.create(0,0,"finishOverlay"),[l,r]=this.controller.scaleFromOriginal();return n.scale.x=l,n.scale.y=r,n.alpha=0,r=this.tweenToWhite(n),a=this.tweenFromWhiteToClear(n),r.onComplete.add(()=>{this.selectionIndicator.visible=!1,this.setPlayerPosition(e,i),a.start()}),s&&a.onComplete.add(()=>{this.playSuccessAnimation(e,t,i,o)}),r.start(),r}tweenFromWhiteToClear(e){return this.addResettableTween(e).to({alpha:0},700,Phaser.Easing.Linear.None)}tweenToWhite(e){return this.addResettableTween(e).to({alpha:1},300,Phaser.Easing.Linear.None)}playBlockSound(e){var t;"water"===e||"lava"===e||this.controller.levelModel.isUnderwater()||(t=e.substring(0,3),"stone"===e||"cobblestone"===e||"bedrock"===e||"ore"===t||"bricks"===e?this.audioPlayer.play("stepStone"):"grass"===e||"dirt"===e||"dirtCoarse"===e||"wool_orange"===e||"wool"===e?this.audioPlayer.play("stepGrass"):"gravel"===e?this.audioPlayer.play("stepGravel"):"farmlandWet"===e?this.audioPlayer.play("stepFarmland"):this.audioPlayer.play("stepWood"))}playMoveForwardAnimation(e,t,i,o,s,a,n){var l=e.position[1]+(i===FacingDirection.North?1:0);this.playWalkAnimation(e,t,i,o,s,a,l,n)}playMoveBackwardAnimation(e,t,i,o,s,a,n){var l=e.position[1]+(i===FacingDirection.South?1:0);this.playWalkAnimation(e,t,i,o,s,a,l,n)}playWalkAnimation(i,e,t,o,s,a,n,l){let r;var h=i.position;this.playBlockSound(a),i.shouldUpdateSelectionIndicator()&&this.setSelectionIndicatorPosition(h[0],h[1]),r=o?this.playPlayerJumpDownVerticalAnimation(t,h,e):(this.playPlayerAnimation("walk",e,t,s,i),this.addResettableTween(i.sprite).to(this.positionToScreen(h,s,i),180,Phaser.Easing.Linear.None)),r.onUpdateCallback((e,t)=>{.75<=t&&(i.sprite.sortOrder=this.yToIndex(n)+i.getSortOrderOffset(),e.onUpdateCallback(null))}),r.onComplete.add(()=>{l()}),r.start()}playPlayerJumpDownVerticalAnimation(e,t,i=t){this.controller.levelModel.isUnderwater()||(o="jumpDown"+this.getDirectionName(e),this.playScaledSpeed(this.player.getAnimationManager(),o));var o=this.positionToScreen(i),i=this.positionToScreen(t);const s=this.addResettableTween(this.player.sprite).to({x:[o.x,i.x,i.x],y:[o.y,i.y-50,i.y]},300,Phaser.Easing.Linear.None).interpolation((e,t)=>Phaser.Math.bezierInterpolation(e,t));return s.onComplete.addOnce(()=>{this.audioPlayer.play("fall")}),s.start(),s}playPlaceBlockAnimation(e,t,i,o,s,a){let n=this.yToIndex(e[1])+e[0];var l,r;s.shouldUpdateSelectionIndicator()&&this.setSelectionIndicatorPosition(e[0],e[1]),s===this.agent||LevelBlock.isWalkable(i)?l=this.playPlayerAnimation("punch",e,t,!1,s).onComplete.add(()=>{l.detach(),a()}):(this.audioPlayer.play("placeBlock"),s=this.getDirectionName(t),""!==o&&this.playExplosionAnimation(e,t,e,o,()=>{},!1),this.controller.levelModel.isUnderwater()||this.playScaledSpeed(this.player.getAnimationManager(),"jumpUp"+s),(r=this.addResettableTween(this.player.sprite).to({y:40*e[1]-55},125,Phaser.Easing.Cubic.EaseOut)).onComplete.addOnce(()=>{r=null,""!==o&&this.actionPlaneBlocks[n].kill(),a()}),r.start())}playPlaceBlockInFrontAnimation(e=this.player,t,i,o,s){this.setSelectionIndicatorPosition(o[0],o[1]),this.playPlayerAnimation("punch",t,i,!1,e).onComplete.addOnce(()=>{s()})}correctForShadowOverlay(e,t){e.startsWith("piston")&&(t.sortOrder-=.1)}createActionPlaneBlock(t,i){const o=new LevelBlock(i);var s,a,n=this.yToIndex(t[1])+t[0];if(this.actionGroup.remove(this.actionPlaneBlocks[n]),this.groundGroup.remove(this.actionPlaneBlocks[n]),o.isEmpty)this.actionPlaneBlocks[n]=null;else{let e;e=o.getIsMiniblock()?this.createMiniBlock(t[0],t[1],i,{collectibleDistance:1,xOffsetRange:10,yOffsetRange:10}):(s=o.shouldRenderOnGroundPlane()?this.groundGroup:this.actionGroup,a=o.shouldRenderOnGroundPlane()?-.5:0,o.getIsChestblock()?this.createBlock(s,t[0],t[1]+a,"Chest"):this.createBlock(s,t[0],t[1]+a,i)),e&&(e.sortOrder=this.yToIndex(t[1]),this.correctForShadowOverlay(i,e)),this.actionPlaneBlocks[n]=e}}playShearAnimation(e,t,i,o,s){var a=this.yToIndex(i[1])+i[0];let n=this.actionPlaneBlocks[a];n.animations.stop(null,!0),this.onAnimationLoopOnce(this.playScaledSpeed(n.animations,"used"),()=>{this.playScaledSpeed(n.animations,"face")}),this.playExplosionAnimation(e,t,i,o,s,!0)}playShearSheepAnimation(i,o,s,a,n){this.setSelectionIndicatorPosition(s[0],s[1]),this.onAnimationEnd(this.playPlayerAnimation("punch",i,o,!1),()=>{var e=this.yToIndex(s[1])+s[0];let t=this.actionPlaneBlocks[e];t.animations.stop(null,!0),this.onAnimationLoopOnce(this.playScaledSpeed(t.animations,"used"),()=>{this.playScaledSpeed(t.animations,"face")}),this.playExplosionAnimation(i,o,s,a,n,!0)})}destroyBlockWithoutPlayerInteraction(e){let t=this.yToIndex(e[1])+e[0],i=this.actionPlaneBlocks[t],o=this.actionGroup.create(40*e[0]-12,40*e[1]-22,"destroyOverlay","destroy1");o.sortOrder=this.yToIndex(e[1])+2,this.onAnimationEnd(o.animations.add("destroy",Phaser.Animation.generateFrameNames("destroy",1,12,"",0),30,!1),()=>{this.actionPlaneBlocks[t]=null,Object.prototype.hasOwnProperty.call(i,"onBlockDestroy")&&i.onBlockDestroy(i),i.kill(),o.kill(),this.toDestroy.push(i),this.toDestroy.push(o),this.audioPlayer.play("dig_wood1")}),this.playScaledSpeed(o.animations,"destroy")}playDestroyBlockAnimation(e,t,i,o,s,a){s.shouldUpdateSelectionIndicator()&&this.setSelectionIndicatorPosition(i[0],i[1]);var n=void 0,n=s!==this.agent&&!this.controller.levelModel.isUnderwater()&&o.match(/(ore|stone|clay|bricks|bedrock)/)?"mine":"punchDestroy";this.playPlayerAnimation(n,e,t,!1,s),this.playMiningParticlesAnimation(t,i),this.playBlockDestroyOverlayAnimation(e,t,i,o,s,a)}playPunchDestroyAirAnimation(e,t,i,o,s=this.player){this.playPunchAnimation(e,t,i,"punchDestroy",o,s)}playPunchAirAnimation(e,t,i,o,s=this.player){this.playPunchAnimation(e,t,i,"punch",o,s)}playPunchAnimation(e,t,i,o,s,a=this.player){a.shouldUpdateSelectionIndicator()&&this.setSelectionIndicatorPosition(i[0],i[1]),this.onAnimationEnd(this.playPlayerAnimation(o,e,t,!1,a),()=>{s()})}playBlockDestroyOverlayAnimation(e,t,i,o,s,a){var n=this.yToIndex(i[1])+i[0];const l=this.actionPlaneBlocks[n],r=()=>{l.hasOwnProperty("onBlockDestroy")&&l.onBlockDestroy(l),this.controller.levelModel.destroyBlockForward(s),this.controller.updateShadingPlane(),this.controller.updateFowPlane(),s.shouldUpdateSelectionIndicator()&&this.setSelectionIndicatorPosition(e[0],e[1]),this.audioPlayer.play("dig_wood1"),this.playExplosionAnimation(e,t,i,o,a,!0,s)};if(LevelBlock.skipsDestructionOverlay(o))r();else{const h=this.actionGroup.create(40*i[0]-12,40*i[1]-22,"destroyOverlay","destroy1");LevelBlock.isFlat(o)&&(n=new Phaser.Rectangle(0,0,60,40),h.position.y+=20,h.crop(n)),h.sortOrder=this.yToIndex(i[1])+2,this.onAnimationEnd(h.animations.add("destroy",Phaser.Animation.generateFrameNames("destroy",1,12,"",0),30,!1),()=>{h.kill(),this.toDestroy.push(h),r()}),this.playScaledSpeed(h.animations,"destroy")}}playMiningParticlesAnimation(e,t){var i=[[24,-100,-80],[12,-120,-80],[0,-60,-80],[36,-80,-60]],o=this.getDirectionName(e),s="_left"===o?0:"_bottom"===o?1:"_right"===o?2:3,e=i[s][0],o=i[s][1],s=i[s][2];let a=this.actionGroup.create(o+40*t[0],s+40*t[1],"miningParticles","MiningParticles"+e);a.sortOrder=this.yToIndex(t[1])+2,this.onAnimationEnd(a.animations.add("miningParticles",Phaser.Animation.generateFrameNames("MiningParticles",e,e+11,"",0),30,!1),()=>{a.kill(),this.toDestroy.push(a)}),this.playScaledSpeed(a.animations,"miningParticles")}playExplosionAnimation(e,t,i,o,s,a,n=this.player){var l=this.actionGroup.create(40*i[0]-36,40*i[1]-30,"blockExplode","BlockBreakParticle0");switch(o){case"treeAcacia":case"logAcacia":l.tint=7103834;break;case"treeBirch":case"logBirch":l.tint=14341836;break;case"treeJungle":case"logJungle":l.tint=6967089;break;case"treeOak":case"logOak":l.tint=6771249;break;case"treeSpruce":case"logSpruce":l.tint=4929827;break;case"planksAcacia":l.tint=12215095;break;case"planksBirch":l.tint=14142349;break;case"planksJungle":l.tint=12093284;break;case"planksOak":l.tint=11833434;break;case"planksSpruce":l.tint=8412726;break;case"stone":case"oreCoal":case"oreDiamond":case"oreIron":case"oreGold":case"oreEmerald":case"oreRedstone":l.tint=13027014;break;case"grass":case"cropWheat":l.tint=6131491;break;case"dirt":l.tint=9068083;break;case"redstoneWireOn":case"redstoneWireHorizontalOn":case"redstoneWireVerticalOn":case"redstoneWireUpRightOn":case"redstoneWireUpLeftOn":case"redstoneWireDownRightOn":case"redstoneWireDownLeftOn":case"redstoneWireTUpOn":case"redstoneWireTDownOn":case"redstoneWireTLeftOn":case"redstoneWireTRightOn":case"redstoneWireCrossOn":l.tint=10028807;break;case"redstoneWire":case"redstoneWireHorizontal":case"redstoneWireVertical":case"redstoneWireUpRight":case"redstoneWireUpLeft":case"redstoneWireDownRight":case"redstoneWireDownLeft":case"redstoneWireTUp":case"redstoneWireTDown":case"redstoneWireTLeft":case"redstoneWireTRight":case"redstoneWireCross":l.tint=2687490}l.sortOrder=this.yToIndex(i[1])+2,this.onAnimationEnd(l.animations.add("explode",Phaser.Animation.generateFrameNames("BlockBreakParticle",0,7,"",0),30,!1),()=>{l.kill(),this.toDestroy.push(l),a&&(this.controller.getIsDirectPlayerControl()||this.playPlayerAnimation("idle",e,t,!1,n),null!==s&&this.playItemDropAnimation(i,o,s))}),this.playScaledSpeed(l.animations,"explode"),this.controller.getIsDirectPlayerControl()^!a&&s&&s()}playItemDropAnimation(e,t,i){let o;this.controller.getIsDirectPlayerControl()&&i?i():o=()=>{var e=this.controller.levelModel.player;this.playItemAcquireAnimation(e.position,e.facing,s,i,t)};const s=this.createMiniBlock(e[0],e[1],t,{onComplete:o});s&&(s.sortOrder=this.yToIndex(e[1])+2)}playScaledSpeed(e,t,i=1){var o=e.getAnimation(t);if(null!==o){o.originalFps||(o.originalFps=1e3/o.delay);o=this.controller.originalFpsToScaled(o.originalFps);return e.play(t,o*i)}console.log("can't find animation name : "+t)}playItemAcquireAnimation(i,e,o,s,a){var t=this.positionToScreen(i);const n=this.addResettableTween(o).to({x:t.x+20,y:t.y+20},200,Phaser.Easing.Linear.None);n.onComplete.add(()=>{var e=Position.equals(this.player.position,i);if(o.alive&&e){this.audioPlayer.play("collectedBlock"),this.player.inventory[a]=(this.player.inventory[a]||0)+1,o.kill(),this.toDestroy.push(o);const t=createEvent("craftCollectibleCollected");t.blockType=a,window.dispatchEvent(t),s&&s()}else this.playItemAcquireAnimation(this.player.position,this.player.facing,o,s,a)}),n.start()}positionToScreen(e,t=!1,i=this.player){var o=e[0],e=e[1];return{x:i.offset[0]+40*o,y:i.offset[1]+(t?-23:0)+40*e}}setPlayerPosition(e,t,i=this.player){t=this.positionToScreen(e,t,i);i.sprite.x=t.x,i.sprite.y=t.y,i.sprite.sortOrder=this.yToIndex(t.y)+i.getSortOrderOffset()}setSelectionIndicatorPosition(e,t){this.selectionIndicator.x=40*e-12,this.selectionIndicator.y=40*t-12}drawHintPath(e){this.hintGroup.removeAll(!0);var t=this.game.world.bounds,t=this.game.add.bitmapData(t.width,t.height);const i=t.context;i.setLineDash([10,10]),i.lineDashOffset=5,i.lineWidth=2,i.strokeStyle="#fff",i.shadowColor="#000",i.shadowOffsetY=7,i.shadowBlur=4,i.beginPath(),e.forEach(([e,t])=>{i.lineTo(40*e+19,40*t+19)}),i.stroke();const o=this.hintGroup.create(0,0,t);o.alpha=0,this.addResettableTween(o).to({alpha:1},830,Phaser.Easing.Quadratic.Out).to({alpha:.4},500,Phaser.Easing.Quadratic.InOut,!0,0,-1,!0)}createGroups(){this.groundGroup=this.game.add.group(),this.groundGroup.yOffset=-2,this.shadingGroup=this.game.add.group(),this.shadingGroup.yOffset=-2,this.hintGroup=this.game.add.group(),this.actionGroup=this.game.add.group(),this.actionGroup.yOffset=-22,this.fluffGroup=this.game.add.group(),this.fluffGroup.yOffset=-160,this.fowGroup=this.game.add.group(),this.fowGroup.yOffset=0}resetGroups(e){var t,i;for(this.groundGroup.removeAll(!0),this.actionGroup.removeAll(!0),this.hintGroup.removeAll(!0),this.fluffGroup.removeAll(!0),this.shadingGroup.removeAll(!0),this.fowGroup.removeAll(!0),this.baseShading=this.game.add.group(),this.actionPlaneBlocks=[],this.refreshGroundGroup(),i=0;i<this.controller.levelModel.planeHeight;++i)for(t=0;t<this.controller.levelModel.planeWidth;++t){var o=new Position(t,i),s=null,a=e.groundDecorationPlane.getBlockAt(o);a.isEmpty||(s=this.createBlock(this.actionGroup,t,i,a.blockType))&&(s.sortOrder=this.yToIndex(i));const l=e.actionPlane.getBlockAt(o);l.shouldRenderOnGroundPlane()||this.createActionPlaneBlock(o,l.blockType)}for(i=0;i<this.controller.levelModel.planeHeight;++i)for(t=0;t<this.controller.levelModel.planeWidth;++t){var n=new Position(t,i);e.fluffPlane.getBlockAt(n).isEmpty||(s=this.createBlock(this.fluffGroup,t,i,e.fluffPlane.getBlockAt(n).blockType))}this.controller.levelModel.actionPlane.refreshRedstone(),this.controller.levelModel.actionPlane.resolveConduitState(),this.refreshActionGroup(this.controller.levelModel.actionPlane.getAllPositions())}refreshGroundGroup(){this.groundGroup.removeAll(!0);for(let t=0;t<this.controller.levelModel.planeHeight;++t)for(let e=0;e<this.controller.levelModel.planeWidth;++e){var i=new Position(e,t),o=this.controller.levelModel.groundPlane.getBlockAt(i),o=this.createBlock(this.groundGroup,e,t,o.blockType);o&&(o.sortOrder=this.yToIndex(t));const s=this.controller.levelModel.actionPlane.getBlockAt(i);s&&s.shouldRenderOnGroundPlane()&&this.createActionPlaneBlock(i,s.blockType)}}refreshActionGroup(t){for(let e=0;e<t.length;++e){var i=Position.south(t[e]);this.controller.levelModel.actionPlane.inBounds(i)&&(""===this.controller.levelModel.actionPlane.getBlockAt(i).blockType||t.push(i))}t.forEach(e=>{if(e){const t=this.controller.levelModel.actionPlane.getBlockAt(e);t&&t.getIsDoor()||t&&t.getIsConduit()&&t.isActivatedConduit||t&&t.getIsMiniblock()||t&&t.getIsTree()||(t&&t.blockType?this.createActionPlaneBlock(e,t.blockType):t&&(e=this.coordinatesToIndex(e),this.actionGroup.remove(this.actionPlaneBlocks[e]),this.groundGroup.remove(this.actionPlaneBlocks[e])))}})}updateShadingGroup(e){var t,i,o,s,a;for(this.shadingGroup.removeAll(),this.shadingGroup.add(this.baseShading),this.selectionIndicator&&this.shadingGroup.add(this.selectionIndicator),t=0;t<e.length;++t){a=(i=e[t]).atlas,o=40*i.x,s=40*i.y;const n=this.shadingGroup.create(o,s,a,i.type);"WaterAO"===a&&(n.tint=5592405)}}updateFowGroup(e){var t;for(this.fowGroup.removeAll(),t=0;t<e.length;++t){var i,o,s=e[t];""!==s&&(i=40*s.x-40,o=40*s.y-40,this.fowGroup.create(i,o,"undergroundFow",s.type).alpha=.8)}}playRandomPlayerIdle(e,t=this.player){var i,e=this.getDirectionName(e);switch(Math.trunc(4*Math.random())+1){case 1:i="idle";break;case 2:i="lookLeft";break;case 3:i="lookRight";break;case 4:i="lookAtCam"}i+=e,this.playScaledSpeed(t.getAnimationManager(),i)}generatePlayerCelebrateFrames(){let t=[];for(let e=0;e<6;++e)t.push("Player_001");return t=t.concat("Player_259"),t=t.concat("Player_260"),t.push("Player_261"),t.push("Player_297"),t.push("Player_298"),t.push("Player_297"),t.push("Player_261"),t.push("Player_261"),t.push("Player_297"),t.push("Player_298"),t.push("Player_297"),t.push("Player_261"),t.push("Player_001"),t.push("Player_001"),t.push("Player_001"),t.push("Player_001"),t.push("Player_001"),t.push("Player_261"),t.push("Player_297"),t.push("Player_298"),t.push("Player_297"),t.push("Player_261"),t.push("Player_261"),t.push("Player_297"),t.push("Player_298"),t.push("Player_297"),t.push("Player_261"),t}generateFramesWithEndDelay(e,t,i,o,s,a){var n=Phaser.Animation.generateFrameNames(e,t,i,"",s);for(let e=0;e<a;++e)n.push(o);return n}generateReverseFrames(e,t,i,o,s){return Phaser.Animation.generateFrameNames(e,t,i,o,s).concat(Phaser.Animation.generateFrameNames(e,i-1,t,o,s))}preparePlayerSprite(e,t=this.player){t.sprite=this.actionGroup.create(0,0),t.animationRig=this.actionGroup.create(0,0,`player${e}`,"Player_121"),t.sprite.addChild(t.animationRig),this.controller.followingPlayer()&&t===this.player&&this.game.camera.follow(t.sprite),t.shouldUpdateSelectionIndicator()&&(this.selectionIndicator=this.shadingGroup.create(24,44,"selectionIndicator")),this.generateAnimations(FacingDirection.South,0,t),this.generateAnimations(FacingDirection.East,60,t),this.generateAnimations(FacingDirection.North,120,t),this.generateAnimations(FacingDirection.West,180,t);let i;if(i=this.generateFramesWithEndDelay("Player_",263,262,"Player_262",3,5),i.push("Player_263"),t.addAnimation("lookAtCam_down",i,10,!1).onComplete.add(()=>{this.playScaledSpeed(t.getAnimationManager(),"idlePause_down")}),i=this.generateFramesWithEndDelay("Player_",270,269,"Player_269",3,5),i.push("Player_270"),t.addAnimation("lookAtCam_right",i,10,!1).onComplete.add(()=>{this.playScaledSpeed(t.getAnimationManager(),"idlePause_right")}),i=this.generateFramesWithEndDelay("Player_",277,276,"Player_276",3,5),i.push("Player_277"),t.addAnimation("lookAtCam_up",i,10,!1).onComplete.add(()=>{this.playScaledSpeed(t.getAnimationManager(),"idlePause_up")}),i=this.generateFramesWithEndDelay("Player_",284,283,"Player_283",3,5),i.push("Player_284"),t.addAnimation("lookAtCam_left",i,10,!1).onComplete.add(()=>{this.playScaledSpeed(t.getAnimationManager(),"idlePause_left")}),t.addAnimation("mine_down",Phaser.Animation.generateFrameNames("Player_",241,244,"",3),20,!0),t.addAnimation("mine_right",Phaser.Animation.generateFrameNames("Player_",245,248,"",3),20,!0),t.addAnimation("mine_up",Phaser.Animation.generateFrameNames("Player_",249,252,"",3),20,!0),t.addAnimation("mine_left",Phaser.Animation.generateFrameNames("Player_",253,256,"",3),20,!0),t.addAnimation("mineCart_down",Phaser.Animation.generateFrameNames("Minecart_",5,5,"",2),20,!1),t.addAnimation("mineCart_turnleft_down",Phaser.Animation.generateFrameNames("Minecart_",6,6,"",2),20,!1),t.addAnimation("mineCart_turnright_down",Phaser.Animation.generateFrameNames("Minecart_",12,12,"",2),20,!1),t.addAnimation("mineCart_right",Phaser.Animation.generateFrameNames("Minecart_",7,7,"",2),20,!1),t.addAnimation("mineCart_left",Phaser.Animation.generateFrameNames("Minecart_",11,11,"",2),20,!1),t.addAnimation("mineCart_up",Phaser.Animation.generateFrameNames("Minecart_",9,9,"",2),20,!1),t.addAnimation("mineCart_turnleft_up",Phaser.Animation.generateFrameNames("Minecart_",10,10,"",2),20,!1),t.addAnimation("mineCart_turnright_up",Phaser.Animation.generateFrameNames("Minecart_",8,8,"",2),20,!1),this.controller.levelModel.isUnderwater()){var o,s,a,n,l,r;for([o,s]of[["down",299],["left",306],["up",313],["right",320]])t.addAnimation("walk_"+o,Phaser.Animation.generateFrameNames("Player_",s+1,s+4,"",3),5,!0);for([a,n]of[["down",327],["left",333],["up",345],["right",339]])t.addAnimation("bump_"+a,Phaser.Animation.generateFrameNames("Player_",n,n+5,"",3),10,!1).onStart.add(()=>{this.audioPlayer.play("bump")});for([l,r]of[["down",351],["left",354],["up",360],["right",357]]){const m=Phaser.Animation.generateFrameNames("Player_",r,r+2,"",3);t.addAnimation("punch_"+l,m,10,!1).onComplete.add(()=>{this.audioPlayer.play("punch")}),t.addAnimation("punchDestroy_"+l,m.concat(m).concat(m),10,!1)}}if(this.controller.levelModel.isInBoat()){var h,c,d,p;for([h,c]of[["down",9],["left",15],["up",21],["right",27]])t.addAnimation("idle_"+h,Phaser.Animation.generateFrameNames("Boat_",c,c,"",2),10,!0),t.addAnimation("walk_"+h,Phaser.Animation.generateFrameNames("Boat_",c,c+4,"",2),10,!0),t.addAnimation("celebrate_"+h,["Boat_49","Boat_50","Boat_49","Boat_50","Boat_49"],5,!1);for([d,p]of[["down",51],["left",63],["up",69],["right",57]])t.addAnimation("bump_"+d,Phaser.Animation.generateFrameNames("Boat_",p,p+5,"",2),10,!1).onStart.add(()=>{this.audioPlayer.play("bump")});Boat.addBobTween(this.game,t.animationRig)}}playerFrameName(e){return Phaser.Animation.generateFrameNames("Player_",e,e,"",3)}generateAnimations(e,t,i=this.player){const o=this.getDirectionName(e);let s=[];s.push(this.playerFrameName(t+1)),s.push(this.playerFrameName(t+3)),s.push(this.playerFrameName(t+1)),s.push(this.playerFrameName(t+7)),s.push(this.playerFrameName(t+9)),s.push(this.playerFrameName(t+7));for(let e=0;e<5;++e)s.push(this.playerFrameName(t+1));i.addAnimation("idle"+o,s,20/3,!1).onComplete.add(()=>{this.playRandomPlayerIdle(e,i)}),s=this.generateFramesWithEndDelay("Player_",t+6,t+5,this.playerFrameName(t+5),3,5),s.push(this.playerFrameName(t+6)),i.addAnimation("lookLeft"+o,s,10,!1).onComplete.add(()=>{this.playScaledSpeed(i.getAnimationManager(),"idlePause"+o)}),s=this.generateFramesWithEndDelay("Player_",t+12,t+11,this.playerFrameName(t+11),3,5),s.push(this.playerFrameName(t+12)),i.addAnimation("lookRight"+o,s,10,!1).onComplete.add(()=>{this.playScaledSpeed(i.getAnimationManager(),"idlePause"+o)}),s=[];for(let e=0;e<13;++e)s.push(this.playerFrameName(t+1));i.addAnimation("idlePause"+o,s,20/3,!1).onComplete.add(()=>{this.playRandomPlayerIdle(e,i)}),i.addAnimation("walk"+o,Phaser.Animation.generateFrameNames("Player_",t+13,t+20,"",3),20,!0);let a=Phaser.Animation.generateFrameNames("Player_",t+21,t+24,"",3);i.addAnimation("punch"+o,a,20,!1).onComplete.add(()=>{this.audioPlayer.play("punch")}),i.addAnimation("punchDestroy"+o,a.concat(a).concat(a),20,!1),i.addAnimation("hurt"+o,Phaser.Animation.generateFrameNames("Player_",t+25,t+28,"",3),20,!1).onComplete.add(()=>{this.playScaledSpeed(i.getAnimationManager(),"idlePause"+o)}),i.addAnimation("crouch"+o,Phaser.Animation.generateFrameNames("Player_",t+29,t+32,"",3),20,!0),i.addAnimation("jumpUp"+o,Phaser.Animation.generateFrameNames("Player_",t+33,t+36,"",3),10,!0),i.addAnimation("fail"+o,Phaser.Animation.generateFrameNames("Player_",t+45,t+48,"",3),20,!1),i.addAnimation("celebrate"+o,this.generatePlayerCelebrateFrames(),10,!1),i.addAnimation("bump"+o,Phaser.Animation.generateFrameNames("Player_",t+49,t+54,"",3),20,!1).onStart.add(()=>{this.audioPlayer.play("bump")}),i.addAnimation("jumpDown"+o,Phaser.Animation.generateFrameNames("Player_",t+55,t+60,"",3),20,!0)}createMiniBlock(i,o,e,t={}){function s(e,t){return void 0===e?t:e}let a=s(t.collectibleDistance,2);var n=s(t.xOffsetRange,40),l=s(t.yOffsetRange,40),r=LevelBlock.getMiniblockFrame(e);if(!r||!this.miniBlocks[r])return null;var h="miniBlocks",c=7-n/2+Math.random()*n,d=3-l/2+Math.random()*l,n=new Position(c,d),l=t.isOnBlock?-20:0;const p=this.actionGroup.create(c+40*i,d+40*o+l,h,"shadow.png");r=this.actionGroup.create(0,0,h,this.miniBlocks[r]+".png");p.addChild(r);const m=this.addResettableTween(r).to({y:-8},350,e=>e<.2?1:e<.4?2:e<.6||!(e<.8)&&e<1?1:0);if(t.onComplete)m.onComplete.add(t.onComplete);else{const g=this.controller.levelModel.spritePositionToIndex(n,new Position(p.x,p.y));this.collectibleItems.push([p,n,e,a]),m.onComplete.add(()=>{var e,t;this.controller.levelModel.usePlayer&&(e=this.player.position,t=g,Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2))<a&&this.player.collectItems(new Position(i,o)))})}return m.start(),p}playAnimationWithRandomOffset(e,t){const i=this.playScaledSpeed(e,t);i.frame=Math.trunc(Math.random()*i.frameTotal)}psuedoRandomTint(e,t,i,o){let s=Math.pow(10*i+o,5)%251/12;e===this.groundGroup?s+=24:s*=.75;e=Math.floor(255-s).toString(16);t.tint="0x"+e+e+e}createBlock(s,a,n,l){const e=new Position(a,n);function t(t,i){let o=l.substring(4);(p=t.createBlock(s,a,n,"log"+o)).fluff=t.createBlock(t.fluffGroup,a,n,"leaves"+o),p.onBlockDestroy=e=>{e.fluff.animations.add("despawn",Phaser.Animation.generateFrameNames("Leaves_"+o,i[0],i[1],".png",0),10,!1).onComplete.add(()=>{t.toDestroy.push(e.fluff),e.fluff.kill()}),t.playScaledSpeed(e.fluff.animations,"despawn")},t.trees.push({sprite:p,type:l,position:e})}var i,o,r,h,c,d,p=null,m=(e,t)=>{r=this.blocks[l][0],h=this.blocks[l][1],c=this.blocks[l][2],d=this.blocks[l][3],p=s.create(c+40*a,d+s.yOffset+40*n,r,h),o=[];var i=Phaser.Animation.generateFrameNames(t,0,3,"",1);for(let e=0;e<5;++e)o.push(`${t}0`);o=o.concat(i),p.animations.add("open",o),o=[],i=Phaser.Animation.generateFrameNames(t,3,0,"",1);for(let e=0;e<5;++e)o.push(`${t}3`);return o=o.concat(i),p.animations.add("close",o),p};switch(l){case"treeAcacia":t(this,[0,7]);break;case"treeBirch":t(this,[0,8]);break;case"treeJungle":t(this,[0,9]);break;case"treeOak":t(this,[0,6]);break;case"treeSpruce":case"treeSpruceSnowy":t(this,[0,8]);break;case"cropWheat":r=this.blocks[l][0],h=this.blocks[l][1],c=this.blocks[l][2],d=this.blocks[l][3],p=s.create(c+40*a,d+s.yOffset+40*n,r,h),o=Phaser.Animation.generateFrameNames("Wheat",0,2,"",0),p.animations.add("idle",o,.4,!1),this.playScaledSpeed(p.animations,"idle");break;case"torch":r=this.blocks[l][0],h=this.blocks[l][1],c=this.blocks[l][2],d=this.blocks[l][3],p=s.create(c+40*a,d+s.yOffset+40*n,r,h),o=Phaser.Animation.generateFrameNames("Torch",0,23,"",0),p.animations.add("idle",o,15,!0),this.playScaledSpeed(p.animations,"idle");break;case"water":r=this.blocks[l][0],h=this.blocks[l][1],c=this.blocks[l][2],d=this.blocks[l][3],p=s.create(c+40*a,d+s.yOffset+40*n,r,h),o=Phaser.Animation.generateFrameNames("Water_",0,5,"",0),p.animations.add("idle",o,5,!0),this.playScaledSpeed(p.animations,"idle");break;case"watering":r=this.blocks[l][0],h=this.blocks[l][1],c=this.blocks[l][2],d=this.blocks[l][3],(p=s.create(c+40*a,d+s.yOffset+40*n,r,h)).kill(),this.toDestroy.push(p),this.createBlock(this.groundGroup,a,n,"farmlandWet"),this.refreshGroundGroup();break;case"lava":r=this.blocks[l][0],h=this.blocks[l][1],c=this.blocks[l][2],d=this.blocks[l][3],p=s.create(c+40*a,d+s.yOffset+40*n,r,h),o=Phaser.Animation.generateFrameNames("Lava_",0,5,"",0),p.animations.add("idle",o,5,!0),this.playScaledSpeed(p.animations,"idle");break;case"magmaBlock":r=this.blocks[l][0],h=this.blocks[l][1],c=this.blocks[l][2],d=this.blocks[l][3],p=s.create(c+40*a,d+s.yOffset+40*n,r,h),o=Phaser.Animation.generateFrameNames("Magma_Block",0,5,"",0),p.animations.add("idle",o,5,!0),this.playScaledSpeed(p.animations,"idle");break;case"magmaUnderwater":r=this.blocks[l][0],h=this.blocks[l][1],c=this.blocks[l][2],d=this.blocks[l][3],p=s.create(c+40*a,d+s.yOffset+40*n,r,h),o=Phaser.Animation.generateFrameNames("Magma_Bubble_Boat",0,5,"",0),p.animations.add("idle",o,5,!0),this.playAnimationWithRandomOffset(p.animations,"idle");break;case"magmaDeep":r=this.blocks[l][0],h=this.blocks[l][1],c=this.blocks[l][2],d=this.blocks[l][3],p=s.create(c+40*a,d+s.yOffset+40*n,r,h),o=Phaser.Animation.generateFrameNames("Magma_Bubble_Deep",0,5,"",0),p.animations.add("idle",o,5,!0),this.playAnimationWithRandomOffset(p.animations,"idle");break;case"bubbleColumn":r=this.blocks[l][0],h=this.blocks[l][1],c=this.blocks[l][2],d=this.blocks[l][3],p=s.create(c+40*a,d+s.yOffset+40*n,r,h),o=Phaser.Animation.generateFrameNames("Bubble_Column",0,5,"",0),p.animations.add("idle",o,5,!0),this.playAnimationWithRandomOffset(p.animations,"idle");break;case"conduit":r=this.blocks[l][0],h=this.blocks[l][1],c=this.blocks[l][2],d=this.blocks[l][3],p=s.create(c+40*a,d+s.yOffset+40*n,r,h),o=Phaser.Animation.generateFrameNames("Conduit",3,10,"",2),p.animations.add("open",o,5,!0),o=Phaser.Animation.generateFrameNames("Conduit",0,2,"",2),p.animations.add("activation",o,5,!1),p.animations.add("deactivation",o.reverse(),5,!1);break;case"prismarine":this.initPrismarine(),c=this.blocks[l][2],d=this.blocks[l][3],p=s.create(c+40*a,d+s.yOffset+40*n,this.prismarine);break;case"seaLantern":r=this.blocks[l][0],h=this.blocks[l][1],c=this.blocks[l][2],d=this.blocks[l][3],p=s.create(c+40*a,d+s.yOffset+40*n,r,h),o=Phaser.Animation.generateFrameNames("Sea_Lantern",0,4,"",0),p.animations.add("idle",o,5,!0),this.playScaledSpeed(p.animations,"idle");break;case"seaGrass":r=this.blocks[l][0],h=this.blocks[l][1],c=this.blocks[l][2],d=this.blocks[l][3],p=s.create(c+40*a,d+s.yOffset+40*n,r,h),o=Phaser.Animation.generateFrameNames("Seagrass",0,5,"",0),p.animations.add("idle",o,5,!0),this.playScaledSpeed(p.animations,"idle",.5);break;case"kelp":r=this.blocks[l][0],h=this.blocks[l][1],c=this.blocks[l][2],d=this.blocks[l][3],p=s.create(c+40*a,d+s.yOffset+40*n,r,h),o=Phaser.Animation.generateFrameNames("KelpSingle_",0,5,"",0),p.animations.add("idle",o,5,!0),this.playScaledSpeed(p.animations,"idle",.5);break;case"Chest":r=this.blocks[l][0],h=this.blocks[l][1],c=this.blocks[l][2],d=this.blocks[l][3],p=s.create(c+40*a,d+s.yOffset+40*n,r,h),o=Phaser.Animation.generateFrameNames("Chest",0,2,"",0),p.animations.add("open",o,5,!1);break;case"NetherPortal":r=this.blocks[l][0],h=this.blocks[l][1],c=this.blocks[l][2],d=this.blocks[l][3],p=s.create(c+40*a,d+s.yOffset+40*n,r,h),o=Phaser.Animation.generateFrameNames("NetherPortal",1,6,"",0),p.animations.add("idle",o,5,!0),this.playScaledSpeed(p.animations,"idle");break;case"lavaPop":for(r=this.blocks[l][0],h=this.blocks[l][1],c=this.blocks[l][2],d=this.blocks[l][3],p=s.create(c+40*a,d+s.yOffset+40*n,r,h),o=Phaser.Animation.generateFrameNames("LavaPop",1,7,"",2),i=0;i<4;++i)o.push("LavaPop07");for(o=o.concat(Phaser.Animation.generateFrameNames("LavaPop",8,13,"",2)),i=0;i<3;++i)o.push("LavaPop13");for(o=o.concat(Phaser.Animation.generateFrameNames("LavaPop",14,30,"",2)),i=0;i<8;++i)o.push("LavaPop01");p.animations.add("idle",o,5,!0),this.playAnimationWithRandomOffset(p.animations,"idle");break;case"fire":r=this.blocks[l][0],h=this.blocks[l][1],c=this.blocks[l][2],d=this.blocks[l][3],p=s.create(c+40*a,d+s.yOffset+40*n,r,h),o=Phaser.Animation.generateFrameNames("Fire",0,14,"",2),p.animations.add("idle",o,5,!0),this.playScaledSpeed(p.animations,"idle");break;case"bubbles":r=this.blocks[l][0],h=this.blocks[l][1],c=this.blocks[l][2],d=this.blocks[l][3],p=s.create(c+40*a,d+s.yOffset+40*n,r,h),o=Phaser.Animation.generateFrameNames("Bubbles",0,14,"",2),p.animations.add("idle",o,5,!0),this.playScaledSpeed(p.animations,"idle");break;case"explosion":r=this.blocks[l][0],h=this.blocks[l][1],c=this.blocks[l][2],d=this.blocks[l][3],p=s.create(c+40*a,d+s.yOffset+40*n,r,h),o=Phaser.Animation.generateFrameNames("Explosion",0,16,"",1),p.animations.add("idle",o,15,!1).onComplete.add(()=>{this.toDestroy.push(p),p.kill()}),this.playScaledSpeed(p.animations,"idle");break;case"door":p=m(0,"Door");break;case"doorIron":p=m(0,"DoorIron"),this.blockReceivesCornerShadow(a,n)&&p.addChild(this.game.make.sprite(-40,55,"blockShadows","Shadow_Parts_Fade_overlap.png"));break;case"tnt":r=this.blocks[l][0],h=this.blocks[l][1],c=this.blocks[l][2],d=this.blocks[l][3],p=s.create(c+40*a,d+s.yOffset+40*n,r,h),o=Phaser.Animation.generateFrameNames("TNTexplosion",0,8,"",0),p.animations.add("explode",o,7,!1).onComplete.add(()=>{this.playExplosionCloudAnimation(e),p.kill(),this.toDestroy.push(p),this.actionPlaneBlocks[this.coordinatesToIndex(e)]=null});break;default:if(!this.blocks[l])throw new Error(`Unknown block type: ${l}`);if(r=this.blocks[l][0],h=this.blocks[l][1],c=this.blocks[l][2],d=this.blocks[l][3],p=s.create(c+40*a,d+s.yOffset+40*n,r,h),s!==this.actionGroup&&s!==this.groundGroup||LevelBlock.isWalkable(l)||this.psuedoRandomTint(s,p,a,n),s===this.actionGroup&&!LevelBlock.isWalkable(l)&&this.blockReceivesCornerShadow(a,n)){let e=-39,t=40;l.startsWith("pistonArm")&&(e=-26,t=53),p.addChild(this.game.make.sprite(e,t,"blockShadows","Shadow_Parts_Fade_overlap.png"))}l.startsWith("redstoneWire")&&l.endsWith("On")&&p.addChild(this.addRedstoneSparkle())}return p}addRedstoneSparkle(){const t="redstone_sparkle99.png",i=this.game.make.sprite(20,25,"redstoneSparkle",t);for(let e=0;e<3;e++){var o=8*e,o=[t].concat(Phaser.Animation.generateFrameNames("redstone_sparkle",o,7+o,".png"),t);i.animations.add(`fizz_${e}`,o,7)}const s=()=>{setTimeout(()=>{var e;i.alive&&(e=Math.floor(3*Math.random()),this.onAnimationEnd(this.playScaledSpeed(i.animations,`fizz_${e}`),s),i.position.x=.5<Math.random()?20:40,i.position.y=.5<Math.random()?25:45)},randomInt(500,7e3)/this.controller.tweenTimeScale)};return s(),i}blockReceivesCornerShadow(e,t){var i=this.controller.levelModel.actionPlane.getBlockAt([e,t+1]);if(!i||i.blockType&&!i.isWalkable)return!1;t=this.controller.levelModel.actionPlane.getBlockAt([e-1,t+1]);return t&&t.blockType&&!t.isWalkable}isUnderTree(t,i){if(t>=this.trees.length||t<0)return!1;var o=this.treeFluffTypes[this.trees[t].type];for(let e=0;e<o.length;e++)if(this.trees[t].position[0]+o[e][0]===i[0]&&this.trees[t].position[1]+o[e][1]===i[1])return!0;return!1}changeTreeAlpha(e,t){this.controller.levelView.addResettableTween(this.trees[e].sprite.fluff).to({alpha:t},300,Phaser.Easing.Linear.None).start()}onAnimationEnd(e,t){var i=e.onComplete.add(()=>{i.detach(),t()})}onAnimationStart(e,t){var i=e.onStart.add(()=>{i.detach(),t()})}onAnimationLoopOnce(e,t){var i=e.onLoop.add(()=>{i.detach(),t()})}addResettableTween(e){e=this.game.add.tween(e);return e.timeScale=this.controller.tweenTimeScale,this.resettableTweens.push(e),e}animateDoor(e,t){let i=this.controller.levelModel.player;this.setSelectionIndicatorPosition(this.controller.levelModel.actionPlane.indexToCoordinates(e)[0],this.controller.levelModel.actionPlane.indexToCoordinates(e)[1]),this.controller.audioPlayer.play("doorOpen");const o=this.controller.levelModel.actionPlane.indexToCoordinates(e);this.playDoorAnimation(o,t,()=>{const e=this.controller.levelModel.actionPlane.getBlockAt(o);e.isWalkable=e.isOpen,"doorIron"!==e.blockType&&this.playIdleAnimation(i.position,i.facing,i.isOnBlock,i),this.setSelectionIndicatorPosition(i.position[0],i.position[1])})}}var GAME_WIDTH=400,GAME_HEIGHT=400;class GameController{constructor(e){this.DEBUG=e.debug,window.PhaserGlobal={disableAudio:!0,disableWebAudio:!0,hideBanner:!this.DEBUG},this.codeOrgAPI=new CodeOrgAPI(this);var t=e.Phaser;this.game=new t.Game({forceSetTimeOut:e.forceSetTimeOut,width:GAME_WIDTH,height:GAME_HEIGHT,renderer:t.AUTO,parent:e.containerId,state:"earlyLoad",preserveDrawingBuffer:!1}),this.specialLevelType=null,this.queue=new CommandQueue(this),this.OnCompleteCallback=null,this.assetRoot=e.assetRoot,this.audioPlayer=e.audioPlayer,this.afterAssetsLoaded=e.afterAssetsLoaded,this.assetLoader=new AssetLoader(this),this.earlyLoadAssetPacks=e.earlyLoadAssetPacks||[],this.earlyLoadNiceToHaveAssetPacks=e.earlyLoadNiceToHaveAssetPacks||[],this.resettableTimers=[],this.timeouts=[],this.timeout=0,this.initializeCommandRecord(),this.score=0,this.useScore=!1,this.scoreText=null,this.onScoreUpdate=e.onScoreUpdate,this.events=[],this.assumedSlowMotion=1.5,this.initialSlowMotion=e.customSlowMotion||this.assumedSlowMotion,this.tweenTimeScale=1.5/this.initialSlowMotion,this.playerDelayFactor=1,this.dayNightCycle=null,this.player=null,this.agent=null,this.timerSprite=null,this.game.state.add("earlyLoad",{preload:()=>{this.game.load.resetLocked=!0,this.assetLoader.loadPacks(this.earlyLoadAssetPacks)},create:()=>{this.assetLoader.loadPacks(this.earlyLoadNiceToHaveAssetPacks),this.game.load.start()}}),this.game.state.add("levelRunner",{preload:this.preload.bind(this),create:this.create.bind(this),update:this.update.bind(this),render:this.render.bind(this)})}getIsDirectPlayerControl(){return this.levelData.isEventLevel||this.levelData.isAgentLevel}loadLevel(e){this.levelData=Object.assign(e),this.levelEntity=new LevelEntity(this),this.levelModel=new LevelModel(this.levelData,this),this.levelView=new LevelView(this),this.specialLevelType=e.specialLevelType,this.dayNightCycle=Number.parseInt(e.dayNightCycle),this.timeout=e.levelVerificationTimeout,void 0!==e.useScore&&(this.useScore=e.useScore),this.timeoutResult=e.timeoutResult,this.onDayCallback=e.onDayCallback,this.onNightCallback=e.onNightCallback,!Number.isNaN(this.dayNightCycle)&&1e3<this.dayNightCycle&&this.setDayNightCycle(this.dayNightCycle,"day"),this.game.state.start("levelRunner")}reset(){this.dayNightCycle=null,this.queue.reset(),this.levelEntity.reset(),this.levelModel.reset(),this.levelView.reset(this.levelModel),this.levelEntity.loadData(this.levelData),this.player=this.levelModel.player,this.agent=this.levelModel.agent,this.resettableTimers.forEach(e=>{e.stop(!0)}),this.timeouts.forEach(e=>{clearTimeout(e)}),this.timerSprite&&this.timerSprite.kill(),this.timerSprite=null,this.timeouts=[],this.resettableTimers.length=0,this.events.length=0,this.score=0,this.useScore&&this.updateScore(),this.getIsDirectPlayerControl()||this.events.push(e=>{e.eventType===EventType.WhenUsed&&"sheep"===e.targetType&&this.codeOrgAPI.drop(null,"wool",e.targetIdentifier),e.eventType===EventType.WhenTouched&&"creeper"===e.targetType&&(this.codeOrgAPI.flashEntity(null,e.targetIdentifier),this.codeOrgAPI.explodeEntity(null,e.targetIdentifier))}),this.initializeCommandRecord()}preload(){this.game.load.resetLocked=!0,this.game.time.advancedTiming=this.DEBUG,this.game.stage.disableVisibilityChange=!0,this.assetLoader.loadPacks(this.levelData.assetPacks.beforeLoad)}create(){this.levelView.create(this.levelModel),this.game.time.slowMotion=this.initialSlowMotion,this.addCheatKeys(),this.assetLoader.loadPacks(this.levelData.assetPacks.afterLoad),this.game.load.image("timer",`${this.assetRoot}images/placeholderTimer.png`),this.game.load.onLoadComplete.addOnce(()=>{this.afterAssetsLoaded&&this.afterAssetsLoaded()}),this.levelEntity.loadData(this.levelData),this.game.load.start()}run(t,e){try{new Function("api",`'use strict'; ${this.levelData.script}`)(e)}catch(e){t(e)}this.events.forEach(e=>e({eventType:EventType.WhenRun,targetIdentifier:void 0}));for(var i of this.levelEntity.entityMap){var o=i[1];this.events.forEach(e=>e({eventType:EventType.WhenSpawned,targetType:o.type,targetIdentifier:o.identifier})),o.queue.begin()}!Number.isNaN(this.timeout)&&0<this.timeout&&(this.timerSprite=this.game.add.sprite(-50,390,"timer"),(t=this.levelView.addResettableTween(this.timerSprite).to({x:-450,alpha:.5},this.timeout,Phaser.Easing.Linear.None)).onComplete.add(()=>{this.endLevel(this.timeoutResult(this.levelModel))}),t.start())}followingPlayer(){return!!this.levelData.gridDimensions&&!this.checkMinecartLevelEndAnimation()}update(){this.queue.tick(),this.levelEntity.tick(),this.levelModel.usePlayer&&this.player.updateMovement(),this.levelModel.usingAgent&&this.agent.updateMovement(),this.levelView.update(),(this.getIsDirectPlayerControl()||1<this.player.queue.state)&&this.checkSolution()}addCheatKeys(){if(this.levelModel.usePlayer){const i={[Phaser.Keyboard.W]:FacingDirection.North,[Phaser.Keyboard.D]:FacingDirection.East,[Phaser.Keyboard.S]:FacingDirection.South,[Phaser.Keyboard.A]:FacingDirection.West,[Phaser.Keyboard.SPACEBAR]:-2,[Phaser.Keyboard.BACKSPACE]:-3},o=function(){return null!==document.activeElement&&["INPUT","TEXTAREA"].includes(document.activeElement.tagName)};Object.keys(i).forEach(e=>{const t=i[e];this.game.input.keyboard.addKey(e).onDown.add(()=>{o()||(this.player.movementState=t,this.player.updateMovement())}),this.game.input.keyboard.addKey(e).onUp.add(()=>{o()||(this.player.movementState===t&&(this.player.movementState=-1),this.player.updateMovement())}),this.game.input.keyboard.removeKeyCapture(e)})}}handleEndState(e){this.OnCompleteCallback&&(this.OnCompleteCallback(e,this.levelModel),this.OnCompleteCallback=null)}render(){this.DEBUG&&this.game.debug.text(this.game.time.fps||"--",2,14,"#00ff00"),this.levelView.render()}scaleFromOriginal(){var[e,t]=this.levelData.gridDimensions||[10,10],[i,o]=[10,10];return[e/i,t/o]}getScreenshot(){return this.game.canvas.toDataURL("image/png")}initializeCommandRecord(){var t=["moveAway","moveToward","moveForward","turn","turnRandom","explode","wait","flash","drop","spawn","destroy","playSound","attack","addScore"];this.commandRecord=new Map,this.repeatCommandRecord=new Map,this.isRepeat=!1;for(let e=0;e<t.length;e++)this.commandRecord.set(t[e],new Map),this.commandRecord.get(t[e]).set("count",0),this.repeatCommandRecord.set(t[e],new Map),this.repeatCommandRecord.get(t[e]).set("count",0)}startPushRepeatCommand(){this.isRepeat=!0}endPushRepeatCommand(){this.isRepeat=!1}addCommandRecord(t,i,o){var s=o?this.repeatCommandRecord:this.commandRecord;if(s.has(t)){let e=s.get(t);e.set("count",e.get("count")+1),e.has(i)?e.set(i,e.get(i)+1):e.set(i,1),this.DEBUG&&console.log((o?"Repeat ":"Command :")+t+" executed in mob type : "+i+" updated count : "+e.get(i))}}getCommandCount(t,i,o){o=o?this.repeatCommandRecord:this.commandRecord;if(o.has(t)){let e=o.get(t);return void 0===i?e.get("count"):e.has(i)?e.get(i):0}return 0}getEntity(e){var t=this.levelEntity.entityMap.get(e=void 0===e?"Player":e);return void 0===t&&console.log("Debug GetEntity: there is no entity : "+e+"\n"),t}getEntities(e){return this.levelEntity.getEntitiesOfType(e)}isType(e){return"string"==typeof e&&"Player"!==e&&"PlayerAgent"!==e}printErrorMsg(e){this.DEBUG&&this.game.debug.text(e)}moveAway(a,o){var i,t=a.target;if(void 0===t){for(i of this.levelEntity.entityMap){let e=i[1],t=new CallbackCommand(this,()=>{},()=>{this.moveAway(t,o)},e.identifier);e.addCommand(t,a.repeat)}a.succeeded()}else{var e=this.isType(t),s=this.isType(o);if(t===o)return this.printErrorMsg("Debug MoveAway: Can't move away entity from itself\n"),void a.succeeded();if(e||s)if(e&&!s){let i=this.getEntities(t);var n=this.getEntity(o);if(void 0!==n)for(let t=0;t<i.length;t++)if(i[t].identifier!==n.identifier){let e=new CallbackCommand(this,()=>{},()=>{this.moveAway(e,o)},i[t].identifier);i[t].addCommand(e,a.repeat)}a.succeeded()}else if(!e&&s){let i=this.getEntity(t);var l,r=this.getEntities(o);if(0<r.length){let t=[Number.MAX_VALUE,-1];for(let e=0;e<r.length;e++)i.identifier!==r[e].identifier&&((l=i.getDistance(r[e]))<t[0]&&(t=[l,e]));-1!==t[1]&&i.moveAway(a,r[t[1]])}else a.succeeded()}else{var h,c=this.getEntities(t);let s=this.getEntities(o);if(0<s.length&&0<c.length){for(let o=0;o<c.length;o++){let t=c[o],i=[Number.MAX_VALUE,-1];for(let e=0;e<s.length;e++)s[o].identifier!==t.identifier&&((h=t.getDistance(s[e]))<i[0]&&(i=[h,e]));if(-1!==i){let e=new CallbackCommand(this,()=>{},()=>{this.moveAway(e,s[i[1]].identifier)},t.identifier);t.addCommand(e,a.repeat)}else a.succeeded()}a.succeeded()}}else{let e=this.getEntity(t);t=this.getEntity(o);e!==t?e.moveAway(a,t):a.succeeded()}}}moveToward(a,o){var i,t=a.target;if(void 0===t){for(i of this.levelEntity.entityMap){let e=i[1],t=new CallbackCommand(this,()=>{},()=>{this.moveToward(t,o)},e.identifier);e.addCommand(t,a.repeat)}a.succeeded()}else{var e=this.isType(t),s=this.isType(o);if(t!==o)if(e||s)if(e&&!s){let i=this.getEntities(t);var n=this.getEntity(o);if(void 0!==n){for(let t=0;t<i.length;t++)if(i[t].identifier!==n.identifier){let e=new CallbackCommand(this,()=>{},()=>{this.moveToward(e,o)},i[t].identifier);i[t].addCommand(e,a.repeat)}a.succeeded()}}else if(!e&&s){let i=this.getEntity(t);var l,r=this.getEntities(o);if(0<r.length){let t=[Number.MAX_VALUE,-1];for(let e=0;e<r.length;e++)r[e].identifier!==i.identifier&&((l=i.getDistance(r[e]))<t[0]&&(t=[l,e]));-1!==t[1]?i.moveToward(a,r[t[1]]):a.succeeded()}else a.succeeded()}else{var h,c=this.getEntities(t);let s=this.getEntities(o);if(0<s.length&&0<c.length){for(let o=0;o<c.length;o++){let t=c[o],i=[Number.MAX_VALUE,-1];for(let e=0;e<s.length;e++)s[o].identifier!==t.identifier&&((h=t.getDistance(s[e]))<i[0]&&(i=[h,e]));if(-1!==i[1]){let e=new CallbackCommand(this,()=>{},()=>{this.moveToward(e,s[i[1]].identifier)},t.identifier);t.addCommand(e,a.repeat)}}a.succeeded()}}else{let e=this.getEntity(t);t=this.getEntity(o);e.moveToward(a,t)}else a.succeeded()}}positionEquivalence(e,t){return e[0]===t[0]&&e[1]===t[1]}execute(o,s,...a){var i,t=o.target;if(this.isType(t)){let i=this.getEntities(t);for(let t=0;t<i.length;t++){let e=new CallbackCommand(this,()=>{},()=>{this.execute(e,s,...a)},i[t].identifier);i[t].addCommand(e,o.repeat)}o.succeeded()}else if(void 0===t){for(i of this.levelEntity.entityMap){let e=i[1],t=new CallbackCommand(this,()=>{},()=>{this.execute(t,s,...a)},e.identifier);e.addCommand(t,o.repeat)}o.succeeded()}else{let e=this.getEntity(t);e[s](o,...a)}}moveForward(e){this.execute(e,"moveForward")}moveBackward(e){this.execute(e,"moveBackward")}moveDirection(e,t){let i=this.levelModel.player;this.levelModel.shouldRide(t)?(i.handleGetOnRails(t),e.succeeded()):this.execute(e,"moveDirection",t)}turn(e,t){this.execute(e,"turn",t)}turnRandom(e){this.execute(e,"turnRandom")}flashEntity(o){var i,e=o.target;if(this.isType(e)){let i=this.getEntities(e);for(let t=0;t<i.length;t++){let e=new CallbackCommand(this,()=>{},()=>{this.flashEntity(e)},i[t].identifier);i[t].addCommand(e,o.repeat)}o.succeeded()}else if(void 0===e){for(i of this.levelEntity.entityMap){let e=i[1],t=new CallbackCommand(this,()=>{},()=>{this.flashEntity(t)},e.identifier);e.addCommand(t,o.repeat)}o.succeeded()}else{var t=this.getEntity(e),e=this.levelView.flashSpriteToWhite(t.sprite);this.addCommandRecord("flash",t.type,o.repeat),this.delayBy(e,()=>{o.succeeded()})}}explodeEntity(s){var i,t,a,n=s.target;if(this.isType(n)){let i=this.getEntities(n);for(let t=0;t<i.length;t++){let e=new CallbackCommand(this,()=>{},()=>{this.explodeEntity(e)},i[t].identifier);i[t].addCommand(e,s.repeat)}s.succeeded()}else{if(void 0===n){for(i of this.levelEntity.entityMap){let e=i[1],t=new CallbackCommand(this,()=>{},()=>{this.explodeEntity(t)},e.identifier);e.addCommand(t,s.repeat)}s.succeeded()}else{let o=this.getEntity(n);this.levelView.playExplosionCloudAnimation(o.position),this.addCommandRecord("explode",o.type,s.repeat),this.levelView.audioPlayer.play("explode");for(t of this.levelEntity.entityMap){let i=t[1];for(let t=-1;t<=1;t++)for(let e=-1;e<=1;e++)0===t&&0===e||(a=[o.position[0]+t,o.position[1]+e],this.destroyBlockWithoutPlayerInteraction(a),i.position[0]===o.position[0]+t&&i.position[1]===o.position[1]+e&&i.blowUp(s,o.position))}let e=new CallbackCommand(this,()=>{},()=>{this.destroyEntity(e,o.identifier)},o.identifier);o.queue.startPushHighPriorityCommands(),o.addCommand(e,s.repeat),o.queue.endPushHighPriorityCommands()}s.succeeded(),this.updateFowPlane(),this.updateShadingPlane()}}wait(o,s){var e=o.target;if(this.isType(e)){let i=this.getEntities(e);for(let t=0;t<i.length;t++){let e=new CallbackCommand(this,()=>{},()=>{this.wait(e,s)},i[t].identifier);i[t].addCommand(e,o.repeat)}o.succeeded()}else{e=this.getEntity(e);this.addCommandRecord("wait",e.type,o.repeat),setTimeout(()=>{o.succeeded()},1e3*s/this.tweenTimeScale)}}spawnEntity(e,t,i){this.addCommandRecord("spawn",t,e.repeat);let o=this.levelEntity.spawnEntity(t,i);null!==o&&this.events.forEach(e=>e({eventType:EventType.WhenSpawned,targetType:t,targetIdentifier:o.identifier})),e.succeeded()}spawnEntityAt(e,t,i,o,s){let a=this.levelEntity.spawnEntityAt(t,i,o,s);null!==a&&this.events.forEach(e=>e({eventType:EventType.WhenSpawned,targetType:t,targetIdentifier:a.identifier})),e.succeeded()}destroyEntity(o,t){if(this.isType(t)){var s=this.getEntities(t);for(let i=0;i<s.length;i++){let e=s[i],t=new CallbackCommand(this,()=>{},()=>{this.destroyEntity(t,e.identifier)},e.identifier);e.addCommand(t,o.repeat)}o.succeeded()}else if(void 0===t){var i;for(i of this.levelEntity.entityMap){let e=i[1],t=new CallbackCommand(this,()=>{},()=>{this.destroyEntity(t,e.identifier)},e.identifier);e.addCommand(t,o.repeat)}o.succeeded()}else{this.addCommandRecord("destroy",this.type,o.repeat);let e=this.getEntity(t);void 0!==e?(e.healthPoint=1,e.takeDamage(o)):o.succeeded()}}drop(o,s){var i,t=o.target;if(this.isType(t)){let i=this.getEntities(t);for(let t=0;t<i.length;t++){let e=new CallbackCommand(this,()=>{},()=>{this.drop(e,s)},i[t].identifier);i[t].addCommand(e,o.repeat)}o.succeeded()}else if(void 0===t){for(i of this.levelEntity.entityMap){let e=i[1],t=new CallbackCommand(this,()=>{},()=>{this.drop(t,s)},e.identifier);e.addCommand(t,o.repeat)}o.succeeded()}else{let e=this.getEntity(t);e.drop(o,s)}}attack(o){var i,t=o.target;if(this.isType(t)){let i=this.getEntities(t);for(let t=0;t<i.length;t++){let e=new CallbackCommand(this,()=>{},()=>{this.attack(e)},i[t].identifier);i[t].addCommand(e,o.repeat)}o.succeeded()}else if(void 0===t){for(i of this.levelEntity.entityMap){let e=i[1],t=new CallbackCommand(this,()=>{},()=>{this.attack(t)},e.identifier);e.addCommand(t,o.repeat)}o.succeeded()}else{let e=this.getEntity(t);"Player"===e.identifier?(this.codeOrgAPI.destroyBlock(()=>{},e.identifier),o.succeeded()):e.attack(o)}}playSound(e,t){this.addCommandRecord("playSound",void 0,e.repeat),this.levelView.audioPlayer.play(t),e.succeeded()}use(i){let o=this.levelModel.player,t=this.levelModel.getMoveForwardPosition(o),s=this.levelEntity.getEntityAt(t),a=this.levelModel.actionPlane.getBlockAt(t);var e=!!a&&"door"===a.blockType;-3!=o.movementState?null!==s&&s!==this.agent?(this.levelView.setSelectionIndicatorPosition(t[0],t[1]),this.levelView.onAnimationEnd(this.levelView.playPlayerAnimation("punch",o.position,o.facing,!1),()=>{s.queue.startPushHighPriorityCommands();let e=new CallbackCommand(this,()=>{},()=>{s.use(e,o)},s.identifier);if(!this.levelEntity.isFriendlyEntity(s.type)){const t=o.facing;let e=new CallbackCommand(this,()=>{},()=>{s.pushBack(e,t,150)},s.identifier);s.addCommand(e)}s.addCommand(e),s.queue.endPushHighPriorityCommands(),this.levelView.playPlayerAnimation("idle",o.position,o.facing,!1),this.getIsDirectPlayerControl()?this.delayPlayerMoveBy(0,0,()=>{i.succeeded()}):i.waitForOtherQueue=!0,setTimeout(()=>{this.levelView.setSelectionIndicatorPosition(o.position[0],o.position[1])},0)})):e?(this.levelView.setSelectionIndicatorPosition(t[0],t[1]),this.levelView.onAnimationEnd(this.levelView.playPlayerAnimation("punch",o.position,o.facing,!1),()=>{this.audioPlayer.play("doorOpen");var e=!a.isWalkable;this.levelView.playDoorAnimation(t,e,()=>{a.isWalkable=!a.isWalkable,this.levelView.playIdleAnimation(o.position,o.facing,o.isOnBlock),this.levelView.setSelectionIndicatorPosition(o.position[0],o.position[1]),i.succeeded()})})):a&&a.isRail?(this.levelView.playTrack(t,o.facing,!0,o,null),i.succeeded()):this.placeBlockForward(i,o.selectedItem):this.destroyBlock(i)}destroyBlock(t){let i=this.getEntity(t.target);if(this.levelModel.canDestroyBlockForward(i)){var o=this.levelModel.actionPlane.getBlockAt(this.levelModel.getMoveForwardPosition(i));if(null!==o){var s=this.levelModel.getMoveForwardPosition(i);let e=o.blockType;if(o.isDestroyable){switch(e){case"logAcacia":case"treeAcacia":e="planksAcacia";break;case"logBirch":case"treeBirch":e="planksBirch";break;case"logJungle":case"treeJungle":e="planksJungle";break;case"logOak":case"treeOak":e="planksOak";break;case"logSpruce":case"treeSpruce":e="planksSpruce"}this.levelView.playDestroyBlockAnimation(i.position,i.facing,s,e,i,()=>{t.succeeded()})}else o.isUsable&&"sheep"===e?this.levelView.playShearSheepAnimation(i.position,i.facing,s,e,()=>{t.succeeded()}):t.succeeded()}}else this.levelView.playPunchDestroyAirAnimation(i.position,i.facing,this.levelModel.getMoveForwardPosition(i),()=>{this.levelView.setSelectionIndicatorPosition(i.position[0],i.position[1]),this.levelView.playIdleAnimation(i.position,i.facing,i.isOnBlock,i),this.delayPlayerMoveBy(0,0,()=>{t.succeeded()})},i)}destroyBlockWithoutPlayerInteraction(t){if(this.levelModel.inBounds(t)){var i=this.levelModel.actionPlane.getBlockAt(t);if(null!=i){var o=t;let e=i.blockType;if(i.isDestroyable){switch(e){case"logAcacia":case"treeAcacia":e="planksAcacia";break;case"logBirch":case"treeBirch":e="planksBirch";break;case"logJungle":case"treeJungle":e="planksJungle";break;case"logOak":case"treeOak":e="planksOak";break;case"logSpruce":case"treeSpruce":case"logSpruceSnowy":case"treeSpruceSnowy":e="planksSpruce"}this.levelView.destroyBlockWithoutPlayerInteraction(o),this.levelView.playExplosionAnimation(this.levelModel.player.position,this.levelModel.player.facing,t,e,()=>{},!1),this.levelView.createMiniBlock(o[0],o[1],e),this.updateFowPlane(),this.updateShadingPlane()}else i.isUsable&&"sheep"===e&&this.levelView.playShearAnimation(this.levelModel.player.position,this.levelModel.player.facing,t,e,()=>{})}this.levelModel.destroyBlock(t)}}checkTntAnimation(){return"freeplay"===this.specialLevelType}checkMinecartLevelEndAnimation(){return"minecart"===this.specialLevelType}checkHouseBuiltEndAnimation(){return"houseBuild"===this.specialLevelType}checkAgentSpawn(){return"agentSpawn"===this.specialLevelType}placeBlock(t,i){const o=this.getEntity(t.target),s=o.position;var e=this.levelModel.actionPlane.getBlockAt(s),a=e.blockType;if(this.levelModel.canPlaceBlock(o,e))if(""!==a&&this.levelModel.destroyBlock(s),"cropWheat"!==i||"farmlandWet"===this.levelModel.groundPlane.getBlockAt(o.position).blockType)this.levelModel.player.updateHidingBlock(o.position),this.checkMinecartLevelEndAnimation()&&"rail"===i&&(i=o.position[1]<7?"railsUnpoweredVertical":"rails"),this.levelView.playPlaceBlockAnimation(o.position,o.facing,i,a,o,()=>{var e=convertNameToEntity(i,s.x,s.y);e?this.levelEntity.spawnEntityAt(...e):(this.levelModel.placeBlock(i,o),this.updateFowPlane(),this.updateShadingPlane()),this.delayBy(200,()=>{this.levelView.playIdleAnimation(o.position,o.facing,!1,o)}),this.delayPlayerMoveBy(200,400,()=>{t.succeeded()})});else{let e=this.levelView.playPlayerAnimation("jumpUp",o.position,o.facing,!1,o).onLoop.add(()=>{this.levelView.playIdleAnimation(o.position,o.facing,!1,o),e.detach(),this.delayBy(800,()=>t.succeeded())},this)}else t.succeeded()}setPlayerActionDelayByQueueLength(){var e;this.levelModel.usePlayer&&(e=this.levelModel.player.queue.getLength(),e=Math.min(Math.max(e-10,0),10),this.playerDelayFactor=1-e/10)}delayBy(e,t){let i=this.game.time.create(!0);i.add(this.originalMsToScaled(e),t,this),i.start(),this.resettableTimers.push(i)}delayPlayerMoveBy(e,t,i){this.delayBy(Math.max(e,t*this.playerDelayFactor),i)}originalMsToScaled(e){return e/this.assumedSlowMotion*this.game.time.slowMotion}originalFpsToScaled(e){return e*this.assumedSlowMotion/this.game.time.slowMotion}placeBlockForward(e,t){this.placeBlockDirection(e,t,0)}placeBlockDirection(e,t,i){let o=this.getEntity(e.target),s,a,n=()=>{};this.levelModel.canPlaceBlockDirection(t,o,i)?(s=this.levelModel.getMoveDirectionPosition(o,i),a=this.levelModel.getPlaneToPlaceOn(s,o,t),this.levelModel.isBlockOfTypeOnPlane(s,"lava",a)&&(n=()=>this.levelView.audioPlayer.play("fizz")),this.levelView.playPlaceBlockInFrontAnimation(o,o.position,o.facing,s,()=>{this.levelModel.placeBlockDirection(t,a,o,i),this.levelView.refreshGroundGroup(),this.updateFowPlane(),this.updateShadingPlane(),n(),this.delayBy(200,()=>{this.levelView.playIdleAnimation(o.position,o.facing,!1,o)}),this.delayPlayerMoveBy(200,400,()=>{e.succeeded()})})):this.levelView.playPunchAirAnimation(o.position,o.facing,o.position,()=>{this.levelView.playIdleAnimation(o.position,o.facing,!1,o),e.succeeded()},o)}checkSolution(){if(this.attemptRunning&&!this.resultReported)if(this.levelModel.isSolved()){const n=this.levelModel.player;if(this.checkHouseBuiltEndAnimation()){this.resultReported=!0;var e=this.levelModel.getHouseBottomRight(),t=new Position(e.x-1,e.y+2),i=new Position(e.x,e.y),o=new Position(e.x-1,e.y+1);this.levelModel.moveTo(t),this.levelView.playSuccessHouseBuiltAnimation(n.position,n.facing,n.isOnBlock,this.levelModel.houseGroundToFloorBlocks(e),[i,o],()=>{this.endLevel(!0)},()=>{this.levelModel.destroyBlock(i),this.levelModel.destroyBlock(o),this.updateFowPlane(),this.updateShadingPlane()})}else if(this.checkMinecartLevelEndAnimation())this.resultReported=!0,this.levelView.playMinecartAnimation(n.isOnBlock,()=>{this.handleEndState(!0)});else if(this.checkAgentSpawn()){this.resultReported=!0;const l=this.levelView.playLevelEndAnimation(n.position,n.facing,n.isOnBlock);l.onComplete.add(()=>{this.levelModel.spawnAgent(null,new Position(3,4),2),this.levelView.agent=this.agent,this.levelView.resetEntity(this.agent),this.updateFowPlane(),this.updateShadingPlane(),this.delayBy(200,()=>{this.endLevel(!0)})})}else{var s,a;this.checkTntAnimation()?(this.resultReported=!0,this.levelView.scaleShowWholeWorld(()=>{}),s=this.levelModel.getTnt(),a=n.isOnBlock,this.levelView.playDestroyTntAnimation(n.position,n.facing,n.isOnBlock,this.levelModel.getTnt(),this.levelModel.shadingPlane,()=>{for(var e in s){s[e].x===this.levelModel.player.position.x&&s[e].y===this.levelModel.player.position.y&&(this.levelModel.player.isOnBlock=!1);var t=this.levelModel.getAllBorderingPositionNotOfType(s[e],"tnt");this.levelModel.destroyBlock(s[e]);for(let e=1;e<t.length;++e)t[e][0]&&this.destroyBlockWithoutPlayerInteraction(t[e][1])}!n.isOnBlock&&a&&this.levelView.playPlayerJumpDownVerticalAnimation(n.facing,n.position),this.updateFowPlane(),this.updateShadingPlane(),this.delayBy(200,()=>{this.levelView.playSuccessAnimation(n.position,n.facing,n.isOnBlock,()=>{this.endLevel(!0)})})})):this.endLevel(!0)}}else!this.levelModel.isFailed()&&(this.getIsDirectPlayerControl()||this.levelData.isAquaticLevel)||this.endLevel(!1)}endLevel(t){if(!this.levelModel.usePlayer)return t?this.levelView.audioPlayer.play("success"):this.levelView.audioPlayer.play("failure"),this.resultReported=!0,void this.handleEndState(t);if(t){let e=this.levelModel.player;t=new CallbackCommand(this,()=>{},()=>{this.levelView.playSuccessAnimation(e.position,e.facing,e.isOnBlock,()=>{this.handleEndState(!0)})},e.identifier);e.queue.startPushHighPriorityCommands(),e.addCommand(t,this.isRepeat),e.queue.endPushHighPriorityCommands()}else{let e=this.levelModel.player,t=new CallbackCommand(this,()=>{},()=>{this.destroyEntity(t,e.identifier)},e.identifier);e.queue.startPushHighPriorityCommands(),e.addCommand(t,this.isRepeat),e.queue.endPushHighPriorityCommands()}}addScore(e,t){this.addCommandRecord("addScore",void 0,e.repeat),this.useScore&&(this.score+=t,this.updateScore()),e.succeeded()}updateScore(){this.onScoreUpdate&&this.onScoreUpdate(this.score)}isPathAhead(e){return!!this.player.isOnBlock||this.levelModel.isForwardBlockOfType(e)}addCommand(t){if(void 0!==t.target){let e=this.getEntity(t.target);e.addCommand(t,this.isRepeat)}else this.queue.addCommand(t,this.isRepeat),this.queue.begin()}addGlobalCommand(e){let t=this.levelEntity.entityMap.get(e.target);void 0!==t?t.addCommand(e,this.isRepeat):(this.queue.addCommand(e,this.isRepeat),this.queue.begin())}startDay(e){if(this.levelModel.isDaytime)null!=e&&e.succeeded(),this.DEBUG&&this.game.debug.text("Impossible to start day since it's already day time\n");else{var i;void 0!==this.onDayCallback&&this.onDayCallback(),this.levelModel.isDaytime=!0,this.levelModel.clearFow(),this.levelView.updateFowGroup(this.levelModel.fowPlane),this.events.forEach(e=>e({eventType:EventType.WhenDayGlobal}));for(i of this.levelEntity.entityMap){let t=i[1];this.events.forEach(e=>e({eventType:EventType.WhenDay,targetIdentifier:t.identifier,targetType:t.type}))}let t=this.levelEntity.getEntitiesOfType("zombie");for(let e=0;e<t.length;e++)t[e].setBurn(!0);null!=e&&e.succeeded()}}startNight(e){if(this.levelModel.isDaytime){var i;void 0!==this.onNightCallback&&this.onNightCallback(),this.levelModel.isDaytime=!1,this.levelModel.computeFowPlane(),this.levelView.updateFowGroup(this.levelModel.fowPlane),this.events.forEach(e=>e({eventType:EventType.WhenNightGlobal}));for(i of this.levelEntity.entityMap){let t=i[1];this.events.forEach(e=>e({eventType:EventType.WhenNight,targetIdentifier:t.identifier,targetType:t.type}))}let t=this.levelEntity.getEntitiesOfType("zombie");for(let e=0;e<t.length;e++)t[e].setBurn(!1);null!=e&&e.succeeded()}else null!=e&&e.succeeded(),this.DEBUG&&this.game.debug.text("Impossible to start night since it's already night time\n")}initiateDayNightCycle(e,t,i){"day"===i||"Day"===i?this.timeouts.push(setTimeout(()=>{this.startDay(null),this.setDayNightCycle(t,"night")},e)):"night"!==i&&"Night"!==i||this.timeouts.push(setTimeout(()=>{this.startNight(null),this.setDayNightCycle(t,"day")},e))}setDayNightCycle(e,t){this.dayNightCycle&&("day"===t||"Day"===t?this.timeouts.push(setTimeout(()=>{this.dayNightCycle&&(this.startDay(null),this.setDayNightCycle(e,"night"))},e)):"night"!==t&&"Night"!==t||this.timeouts.push(setTimeout(()=>{this.dayNightCycle&&(this.startNight(null),this.setDayNightCycle(e,"day"))},e)))}arrowDown(e){this.levelModel.usePlayer&&(this.player.movementState=e,this.player.updateMovement())}arrowUp(e){this.levelModel.usePlayer&&(this.player.movementState===e&&(this.player.movementState=-1),this.player.updateMovement())}clickDown(){this.levelModel.usePlayer&&(this.player.movementState=-2,this.player.updateMovement())}clickUp(){this.levelModel.usePlayer&&(-2===this.player.movementState&&(this.player.movementState=-1),this.player.updateMovement())}updateFowPlane(){this.levelModel.computeFowPlane(),this.levelView.updateFowGroup(this.levelModel.fowPlane)}updateShadingPlane(){this.levelModel.computeShadingPlane(),this.levelView.updateShadingGroup(this.levelModel.shadingPlane)}}window.GameController=GameController;